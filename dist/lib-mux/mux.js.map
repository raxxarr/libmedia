{"version":3,"file":"mux.js","mappings":"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","sources":["webpack://LibMux/webpack/universalModuleDefinition","webpack://LibMux/./src/avformat/AVFormatContext.ts","webpack://LibMux/./src/avformat/AVStream.ts","webpack://LibMux/./src/avformat/bsf/AVBSFilter.ts","webpack://LibMux/./src/avformat/bsf/aac/Raw2ADTSFilter.ts","webpack://LibMux/./src/avformat/bsf/aac/Raw2LATMFilter.ts","webpack://LibMux/./src/avformat/bsf/h2645/Avcc2AnnexbFilter.ts","webpack://LibMux/./src/avformat/bsf/opus/Raw2MpegtsFilter.ts","webpack://LibMux/./src/avformat/codecs/aac.ts","webpack://LibMux/./src/avformat/codecs/av1.ts","webpack://LibMux/./src/avformat/codecs/h264.ts","webpack://LibMux/./src/avformat/codecs/hevc.ts","webpack://LibMux/./src/avformat/codecs/mp3.ts","webpack://LibMux/./src/avformat/codecs/opus.ts","webpack://LibMux/./src/avformat/codecs/vp9.ts","webpack://LibMux/./src/avformat/codecs/vvc.ts","webpack://LibMux/./src/avformat/dump.ts","webpack://LibMux/./src/avformat/formats/OFormat.ts","webpack://LibMux/./src/avformat/formats/OMpegtsFormat.ts","webpack://LibMux/./src/avformat/formats/mpegts/function/crc32.ts","webpack://LibMux/./src/avformat/formats/mpegts/function/createMpegtsContext.ts","webpack://LibMux/./src/avformat/formats/mpegts/function/createMpegtsStreamContext.ts","webpack://LibMux/./src/avformat/formats/mpegts/mpegts.ts","webpack://LibMux/./src/avformat/formats/mpegts/ompegts.ts","webpack://LibMux/./src/avformat/formats/mpegts/struct.ts","webpack://LibMux/./src/avformat/function/mktag.ts","webpack://LibMux/./src/avformat/mux.ts","webpack://LibMux/./src/avutil/constant.ts","webpack://LibMux/./src/avutil/error.ts","webpack://LibMux/./src/avutil/pixelFormatDescriptor.ts","webpack://LibMux/./src/avutil/stringEnum.ts","webpack://LibMux/./src/avutil/struct/audiosample.ts","webpack://LibMux/./src/avutil/struct/avbuffer.ts","webpack://LibMux/./src/avutil/struct/avcodecparameters.ts","webpack://LibMux/./src/avutil/struct/avpacket.ts","webpack://LibMux/./src/avutil/struct/rational.ts","webpack://LibMux/./src/avutil/util/av1syntax.ts","webpack://LibMux/./src/avutil/util/avbuffer.ts","webpack://LibMux/./src/avutil/util/avpacket.ts","webpack://LibMux/./src/avutil/util/channel.ts","webpack://LibMux/./src/avutil/util/codecparameters.ts","webpack://LibMux/./src/avutil/util/common.ts","webpack://LibMux/./src/avutil/util/expgolomb.ts","webpack://LibMux/./src/avutil/util/mem.ts","webpack://LibMux/./src/avutil/util/nalu.ts","webpack://LibMux/./src/avutil/util/rational.ts","webpack://LibMux/./src/cheap/allocator/AllocatorJS.ts","webpack://LibMux/./src/cheap/allocator/Table.ts","webpack://LibMux/./src/cheap/asm/memory.ts","webpack://LibMux/./src/cheap/config.ts","webpack://LibMux/./src/cheap/ctypeEnumImpl.ts","webpack://LibMux/./src/cheap/ctypeEnumRead.ts","webpack://LibMux/./src/cheap/ctypeEnumWrite.ts","webpack://LibMux/./src/cheap/definedStruct.ts","webpack://LibMux/./src/cheap/function/definedMetaProperty.ts","webpack://LibMux/./src/cheap/heap.ts","webpack://LibMux/./src/cheap/polyfill/bigint.ts","webpack://LibMux/./src/cheap/proxyStruct.ts","webpack://LibMux/./src/cheap/stack.ts","webpack://LibMux/./src/cheap/staticData.ts","webpack://LibMux/./src/cheap/std/buffer/SafeUint8Array.ts","webpack://LibMux/./src/cheap/std/make.ts","webpack://LibMux/./src/cheap/std/memory.ts","webpack://LibMux/./src/cheap/std/sizeof.ts","webpack://LibMux/./src/cheap/std/string.ts","webpack://LibMux/./src/cheap/std/structAccess.ts","webpack://LibMux/./src/cheap/std/unmake.ts","webpack://LibMux/./src/cheap/symbol.ts","webpack://LibMux/./src/cheap/thread/asm/atomics.ts","webpack://LibMux/./src/cheap/thread/atomics.ts","webpack://LibMux/./src/cheap/thread/atomicsImpl.ts","webpack://LibMux/./src/cheap/thread/mutex.ts","webpack://LibMux/./src/cheap/typedef.ts","webpack://LibMux/./src/common/function/checkVersion.ts","webpack://LibMux/./src/common/function/concatTypeArray.ts","webpack://LibMux/./src/common/function/execute.ts","webpack://LibMux/./src/common/function/getTimestamp.ts","webpack://LibMux/./src/common/function/i32Toi64.ts","webpack://LibMux/./src/common/function/i64Toi32.ts","webpack://LibMux/./src/common/function/isAudioWorklet.ts","webpack://LibMux/./src/common/function/isDef.ts","webpack://LibMux/./src/common/function/isLittleEndian.ts","webpack://LibMux/./src/common/function/isNative.ts","webpack://LibMux/./src/common/function/isWorker.ts","webpack://LibMux/./src/common/function/nextTick.ts","webpack://LibMux/./src/common/function/toNumber.ts","webpack://LibMux/./src/common/function/toString.ts","webpack://LibMux/./src/common/interface/ArrayLike.ts","webpack://LibMux/./src/common/io/BitReader.ts","webpack://LibMux/./src/common/io/BitWriter.ts","webpack://LibMux/./src/common/io/BufferReader.ts","webpack://LibMux/./src/common/io/BufferWriter.ts","webpack://LibMux/./src/common/io/IOWriterSync.ts","webpack://LibMux/./src/common/math/gcd.ts","webpack://LibMux/./src/common/util/array.ts","webpack://LibMux/./src/common/util/base64.ts","webpack://LibMux/./src/common/util/browser.ts","webpack://LibMux/./src/common/util/constant.ts","webpack://LibMux/./src/common/util/is.ts","webpack://LibMux/./src/common/util/keypath.ts","webpack://LibMux/./src/common/util/logger.ts","webpack://LibMux/./src/common/util/object.ts","webpack://LibMux/./src/common/util/string.ts","webpack://LibMux/./src/common/util/support.ts","webpack://LibMux/./src/common/util/text.ts","webpack://LibMux/./src/common/util/wasm.ts","webpack://LibMux/./src/cheap/asm/memory.asm","webpack://LibMux/./src/cheap/thread/asm/atomics.asm","webpack://LibMux/webpack/bootstrap","webpack://LibMux/webpack/runtime/compat get default export","webpack://LibMux/webpack/runtime/define property getters","webpack://LibMux/webpack/runtime/global","webpack://LibMux/webpack/runtime/hasOwnProperty shorthand","webpack://LibMux/./src/export/mux.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LibMux\"] = factory();\n\telse\n\t\troot[\"LibMux\"] = factory();\n})(self, () => {\nreturn ","/*\n * libmedia AVFormatContext\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\n\nimport AVStream, { AVStreamInterface } from './AVStream'\nimport AVPacket from 'avutil/struct/avpacket'\n\nimport OFormat from './formats/OFormat'\nimport IFormat from './formats/IFormat'\n\nimport IOWriter from 'common/io/IOWriterSync'\nimport IOReader from 'common/io/IOReader'\nimport IOReaderSync from 'common/io/IOReaderSync'\nimport { WebAssemblyResource } from 'cheap/webassembly/compiler'\nimport { AVFormat } from './avformat'\nimport { destroyAVPacket } from 'avutil/util/avpacket'\n\nclass AVFormatContextInterval {\n\n  public packetBuffer: pointer<AVPacket>[]\n\n  constructor() {\n    this.packetBuffer = []\n  }\n}\n\nexport interface AVIFormatContext {\n  metadata: Record<string, any>\n  streams: AVStream[]\n\n  options: Record<string, any>\n\n  privateData: Record<string, any>\n\n  format: AVFormat\n  iformat: IFormat\n\n  ioReader: IOReader\n\n  errorFlag: number\n\n  interval: AVFormatContextInterval\n\n  streamIndex: number\n\n  getStreamById(id: number): AVStream\n\n  getStreamByIndex(index: number): AVStream\n\n  getStreamByMediaType(mediaType: AVMediaType): AVStream\n\n  createStream(): AVStream\n\n  addStream(stream: AVStream): void\n\n  removeStream(stream: AVStream): void\n\n  removeStreamById(id: number): void\n\n  removeStreamByIndex(index: number): void\n\n  destroy(): void\n\n  getDecoderResource: (mediaType: AVMediaType, codecId: AVCodecID) => Promise<WebAssemblyResource> | WebAssemblyResource\n}\n\nexport interface AVOFormatContext {\n\n  metadataHeaderPadding: int32\n\n  metadata: Record<string, any>\n  streams: AVStream[]\n\n  options: Record<string, any>\n\n  privateData: Record<string, any>\n  processPrivateData: Record<string, any>\n\n  format: AVFormat\n  oformat: OFormat\n\n  ioWriter: IOWriter\n\n  errorFlag: number\n\n  interval: AVFormatContextInterval\n\n  streamIndex: number\n\n  getStreamById(id: number): AVStream\n\n  getStreamByIndex(index: number): AVStream\n\n  getStreamByMediaType(mediaType: AVMediaType): AVStream\n\n  createStream(): AVStream\n\n  addStream(stream: AVStream): void\n\n  removeStream(stream: AVStream): void\n\n  removeStreamById(id: number): void\n\n  removeStreamByIndex(index: number): void\n\n  destroy(): void\n}\n\nexport interface AVFormatContextInterface {\n  metadata: Record<string, any>\n  format: AVFormat\n  streams: AVStreamInterface[]\n}\n\nexport class AVFormatContext implements AVIFormatContext, AVOFormatContext {\n\n  public metadataHeaderPadding = -1\n\n  public metadata: Record<string, any>\n  public streams: AVStream[]\n\n  public options: Record<string, any>\n\n  public privateData: Record<string, any>\n  public processPrivateData: Record<string, any>\n  \n  public iformat: IFormat\n  public oformat: OFormat\n\n  // @ts-ignore\n  public ioReader: IOReader | IOReaderSync\n\n  public ioWriter: IOWriter\n\n  public errorFlag: number\n\n  public interval: AVFormatContextInterval\n\n  public streamIndex: number\n\n  public getDecoderResource: (mediaType: AVMediaType, codecId: AVCodecID) => Promise<WebAssemblyResource> | WebAssemblyResource = null\n\n  constructor() {\n    this.streams = []\n    this.errorFlag = 0\n    this.streamIndex  = 0\n    this.interval = new AVFormatContextInterval()\n\n    this.options = {}\n    this.privateData = {}\n    this.metadata = {}\n  }\n\n  get format() {\n    if (this.iformat) {\n      return this.iformat.type\n    }\n    else if (this.oformat) {\n      return this.oformat.type\n    }\n    return AVFormat.UNKNOWN\n  }\n\n  public getStreamById(id: number) {\n    return this.streams.find((stream) => stream.id === id)\n  }\n\n  public getStreamByIndex(index: number) {\n    return this.streams.find((stream) => stream.index === index)\n  }\n\n  public getStreamByMediaType(mediaType: AVMediaType) {\n    return this.streams.find((stream) => stream.codecpar?.codecType === mediaType)\n  }\n\n  public createStream() {\n    const stream = new AVStream()\n    stream.index = this.streamIndex++\n    stream.id = stream.index\n    this.removeStreamByIndex(stream.index)\n    this.streams.push(stream)\n\n    return stream\n  }\n\n  public addStream(stream: AVStream) {\n    this.removeStreamByIndex(stream.index)\n    this.streams.push(stream)\n  }\n\n  public removeStream(stream: AVStream) {\n    this.removeStreamByIndex(stream.index)\n  }\n\n  public removeStreamById(id: number) {\n    const index = this.streams.findIndex((stream) => stream.id === id)\n\n    if (index > -1) {\n      const st = this.streams.splice(index, 1)\n      if (st[0]) {\n        st[0].destroy()\n      }\n    }\n  }\n\n  public removeStreamByIndex(i: number) {\n\n    const index = this.streams.findIndex((stream) => stream.index === i)\n\n    if (index > -1) {\n      const st = this.streams.splice(index, 1)\n      if (st[0]) {\n        st[0].destroy()\n      }\n    }\n  }\n\n  public destroy() {\n\n    if (this.oformat) {\n      this.oformat.destroy(this)\n    }\n    if (this.iformat) {\n      this.iformat.destroy(this as AVIFormatContext)\n    }\n\n    if (this.interval.packetBuffer.length) {\n      this.interval.packetBuffer.forEach((avpacket) => {\n        destroyAVPacket(avpacket)\n      })\n    }\n\n    this.streams.forEach((stream) => {\n      stream.destroy()\n    })\n    this.streams = []\n    this.interval = null\n    this.ioReader = this.ioWriter = null\n    this.oformat = this.iformat = null\n  }\n}\n\n/**\n * 创建 AVIFormatContext\n * \n * @returns \n */\nexport function createAVIFormatContext() {\n  return new AVFormatContext() as AVIFormatContext\n}\n\n/**\n * 创建 AVOFormatContext\n * \n * @returns \n */\nexport function createAVOFormatContext() {\n  return new AVFormatContext() as AVOFormatContext\n}\n","/*\n * libmedia AVStream defined\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { Data } from 'common/types/type'\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\nimport { AVPacketSideDataType } from 'avutil/codec'\nimport { NOPTS_VALUE, NOPTS_VALUE_BIGINT } from 'avutil/constant'\nimport { Rational } from 'avutil/struct/rational'\n\nexport const enum AVDisposition {\n  NONE = 0,\n  DEFAULT = 0x0001,\n  DUB = 0x0002,\n  ORIGINAL = 0x0004,\n  COMMENT = 0x0008,\n  LYRICS = 0x0010,\n  KARAOKE = 0x0020,\n\n  /**\n   * Track should be used during playback by default.\n   * Useful for subtitle track that should be displayed\n   * even when user did not explicitly ask for subtitles.\n   */\n  FORCED = 0x0040,\n  /**\n   * stream for hearing impaired audiences\n   */\n  HEARING_IMPAIRED = 0x0080,\n  /**\n   * stream for visual impaired audiences\n   */\n  VISUAL_IMPAIRED = 0x0100,\n  /**\n   * stream without voice\n   */\n  CLEAN_EFFECTS = 0x0200,\n  /**\n   * The stream is stored in the file as an attached picture/\"cover art\" (e.g.\n   * APIC frame in ID3v2). The first (usually only) packet associated with it\n   * will be returned among the first few packets read from the file unless\n   * seeking takes place. It can also be accessed at any time in\n   * AVStream.attached_pic.\n   */\n  ATTACHED_PIC = 0x0400,\n  /**\n   * The stream is sparse, and contains thumbnail images, often corresponding\n   * to chapter markers. Only ever used with AV_DISPOSITION_ATTACHED_PIC.\n   */\n  TIMED_THUMBNAILS = 0x0800,\n\n  /**\n   * To specify text track kind (different from subtitles default).\n   */\n  CAPTIONS = 0x10000,\n  DESCRIPTIONS = 0x20000,\n  METADATA = 0x40000,\n  /**\n   * dependent audio stream (mix_type=0 in mpegts)\n   */\n  DEPENDENT = 0x80000,\n  /**\n   * still images in video stream (still_picture_flag=1 in mpegts\n   */\n  STILL_IMAGE = 0x100000\n}\n\n/**\n * from FFmpeg\n * \n */\nexport default class AVStream {\n  /**\n   * stream index in AVFormatContext\n   */\n  index: int32 = NOPTS_VALUE\n\n  /**\n   * Format-specific stream ID.\n   * decoding: set by libavformat\n   * encoding: set by the user, replaced by libavformat if left unset\n   */\n  id: int32 = NOPTS_VALUE\n\n  privData: any = null\n\n  codecpar: AVCodecParameters = make(AVCodecParameters, new AVCodecParameters())\n\n  /**\n   * An array of side data that applies to the whole stream (i.e. the\n   * container does not allow it to change between packets).\n   *\n   * There may be no overlap between the side data in this array and side data\n   * in the packets. I.e. a given side data is either exported by the muxer\n   * (demuxing) / set by the caller (muxing) in this array, then it never\n   * appears in the packets, or the side data is exported / sent through\n   * the packets (always in the first packet where the value becomes known or\n   * changes), then it does not appear in this array.\n   *\n   * - demuxing: Set by libavformat when the stream is created.\n   * - muxing: May be set by the caller before write_header().\n   *\n   */\n  sideData: Partial<Record<AVPacketSideDataType, Uint8Array>> = {}\n\n  /**\n   * number of frames in this stream if known or 0\n   */\n  nbFrames: int64 = 0n\n\n  metadata: Data = {}\n\n  /**\n   * Decoding: duration of the stream, in stream time base.\n   * If a source file does not specify a duration, but does specify\n   * a bitrate, this value will be estimated from bitrate and file size.\n   *\n   * Encoding: May be set by the caller before avformat_write_header() to\n   * provide a hint to the muxer about the estimated duration.\n   */\n  duration: int64 = NOPTS_VALUE_BIGINT\n\n  /**\n   * Decoding: pts of the first frame of the stream in presentation order, in stream time base.\n   * Only set this if you are absolutely 100% sure that the value you set\n   * it to really is the pts of the first frame.\n   * This may be undefined (AV_NOPTS_VALUE).\n   * @note The ASF header does NOT contain a correct start_time the ASF\n   * demuxer must NOT set this.\n   */\n  startTime: int64 = NOPTS_VALUE_BIGINT\n\n  /**\n   * 第一个 packet 的 dts\n   */\n  firstDTS: int64 = 0n\n\n  /**\n   * AV_DISPOSITION_* bit field\n   */\n  disposition: AVDisposition = AVDisposition.NONE\n\n  /**\n   *\n   * 封装时间基\n   * \n   * decoding: set by libavformat\n   * encoding: May be set by the caller before avformat_write_header() to\n   *           provide a hint to the muxer about the desired timebase. In\n   *           avformat_write_header(), the muxer will overwrite this field\n   *           with the timebase that will actually be used for the timestamps\n   *           written into the file (which may or may not be related to the\n   *           user-provided one, depending on the format).\n   */\n  timeBase: Rational = make(Rational)\n\n  /**\n   * 帧索引，可用于 seek\n   */\n  sampleIndexes: {\n    dts: int64\n    pts: int64\n    pos: int64\n    size: int32\n    duration: int64\n    flags: int32\n  }[] = []\n\n  /**\n   * pos 到 sample index 的映射\n   */\n  sampleIndexesPosMap: Map<int64, int32> = new Map()\n\n\n  public destroy() {\n    if (this.codecpar) {\n      this.codecpar.destroy()\n      unmake(this.codecpar)\n      this.codecpar = null\n    }\n    if (this.timeBase) {\n      unmake(this.timeBase)\n      this.timeBase = null\n    }\n    this.sampleIndexes.length = 0\n    this.sampleIndexesPosMap.clear()\n  }\n}\n\nexport interface AVStreamInterface {\n  index: number\n  id: number\n  codecpar: pointer<AVCodecParameters>\n  nbFrames: int64\n  metadata: Data\n  duration: int64\n  startTime: int64\n  disposition: int32\n  timeBase: pointer<Rational>\n}\n","/*\n * libmedia AVBSFilter\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport AVPacket from 'avutil/struct/avpacket'\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\nimport { Rational } from 'avutil/struct/rational'\nimport { avMallocz } from 'avutil/util/mem'\nimport { copyCodecParameters, freeCodecParameters } from 'avutil/util/codecparameters'\n\nexport default abstract class AVBSFilter {\n\n  inCodecpar: pointer<AVCodecParameters>\n  inTimeBase: Rational\n\n  outCodecpar: pointer<AVCodecParameters>\n\n  public init(codecpar: pointer<AVCodecParameters>, timeBase: pointer<Rational>): number {\n    this.inCodecpar = avMallocz(sizeof(AVCodecParameters))\n    copyCodecParameters(this.inCodecpar, codecpar)\n\n    this.inTimeBase = {\n      den: timeBase.den,\n      num: timeBase.num\n    }\n\n    return 0\n  }\n\n  public destroy() {\n    if (this.inCodecpar) {\n      freeCodecParameters(this.inCodecpar)\n      this.inCodecpar = nullptr\n    }\n  }\n\n  public abstract sendAVPacket(avpacket: pointer<AVPacket>): number\n  public abstract receiveAVPacket(avpacket: pointer<AVPacket>): number\n}\n","/*\n * libmedia Raw2ADTSFilter\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport AVPacket from 'avutil/struct/avpacket'\nimport AVBSFilter from '../AVBSFilter'\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\nimport { Rational } from 'avutil/struct/rational'\nimport { MPEG4SamplingFrequencyIndex } from '../../codecs/aac'\nimport { mapUint8Array } from 'cheap/std/memory'\nimport { addAVPacketData, copyAVPacketProps, createAVPacket,\n  destroyAVPacket, refAVPacket, unrefAVPacket\n} from 'avutil/util/avpacket'\nimport { avMalloc } from 'avutil/util/mem'\nimport * as errorType from 'avutil/error'\n\nexport default class Raw2ADTSFilter extends AVBSFilter {\n\n  private cache: pointer<AVPacket>\n  private cached: boolean\n\n  public init(codecpar: pointer<AVCodecParameters>, timeBase: pointer<Rational>): number {\n    super.init(codecpar, timeBase)\n    this.cache = createAVPacket()\n\n    return 0\n  }\n\n  public destroy(): void {\n    super.destroy()\n    destroyAVPacket(this.cache)\n    this.cache = nullptr\n    this.cached = false\n  }\n\n  public sendAVPacket(avpacket: pointer<AVPacket>): number {\n    if (!avpacket.data || !avpacket.size) {\n      return\n    }\n\n    const size = 7 + avpacket.size\n    const bufferPointer = avMalloc(size)\n    const buffer = mapUint8Array(bufferPointer, size)\n\n    // syncword 0xfff\n    buffer[0] = 0xff\n    buffer[1] = 0xf0\n\n    // ID\n    buffer[1] |= 1 << 3\n\n    // Protection Absent\n    buffer[1] |= 1\n\n    // profile\n    buffer[2] = ((this.inCodecpar.profile - 1) & 0x03) << 6\n\n    // Sampling Frequency Index\n    buffer[2] |= (MPEG4SamplingFrequencyIndex[this.inCodecpar.sampleRate] & 0x0f) << 2\n\n    // Channel Configuration 第三位\n    buffer[2] |= (this.inCodecpar.chLayout.nbChannels & 0x04) >> 2\n\n    // Channel Configuration 后两位\n    buffer[3] = (this.inCodecpar.chLayout.nbChannels & 0x03) << 6\n\n    // Frame Length 高 2 位\n    buffer[3] |= (buffer.length >> 11) & 0x03\n\n    // Frame Length 中 8 位\n    buffer[4] = (buffer.length >> 3) & 0xff\n\n    // Frame Length 低 3 位\n    buffer[5] = (buffer.length & 0x07) << 5\n\n    // Buffer Fullness 全 1\n    buffer[5] |= 0x1f\n    buffer[6] = 0xfc\n\n    buffer.set(mapUint8Array(avpacket.data, avpacket.size), 7)\n\n    copyAVPacketProps(this.cache, avpacket)\n    addAVPacketData(this.cache, bufferPointer, size)\n    this.cached = true\n  }\n\n  public receiveAVPacket(avpacket: pointer<AVPacket>): number {\n    if (this.cached) {\n      unrefAVPacket(avpacket)\n      refAVPacket(avpacket, this.cache)\n      this.cached = false\n      return 0\n    }\n    else {\n      return errorType.EOF\n    }\n  }\n}\n","/*\n * libmedia Raw2LATMFilter\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport AVPacket from 'avutil/struct/avpacket'\nimport AVBSFilter from '../AVBSFilter'\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\nimport { Rational } from 'avutil/struct/rational'\nimport { MPEG4SamplingFrequencyIndex, getAVCodecParameters } from '../../codecs/aac'\nimport { mapUint8Array } from 'cheap/std/memory'\nimport { addAVPacketData, copyAVPacketProps, createAVPacket,\n  destroyAVPacket, getAVPacketSideData, refAVPacket, unrefAVPacket\n} from 'avutil/util/avpacket'\nimport { avMalloc } from 'avutil/util/mem'\nimport * as errorType from 'avutil/error'\nimport * as object from 'common/util/object'\nimport BitWriter from 'common/io/BitWriter'\nimport { AVPacketSideDataType } from 'avutil/codec'\n\nexport interface AACRaw2LATMFilterOptions {\n  mod?: number\n}\n\nconst defaultAACRaw2LATMFilterOptions = {\n  mod: 20\n}\n\nconst LATM_HEADER = new Uint8Array([0x56, 0xe0, 0x00])\n\nexport default class Raw2LATMFilter extends AVBSFilter {\n  private cache: pointer<AVPacket>\n  private cached: boolean\n  private bitWriter: BitWriter\n  private counter: number\n\n  private options: AACRaw2LATMFilterOptions\n\n  constructor(options: AACRaw2LATMFilterOptions = {}) {\n    super()\n    this.options = object.extend({}, defaultAACRaw2LATMFilterOptions, options)\n  }\n\n  public init(codecpar: pointer<AVCodecParameters>, timeBase: pointer<Rational>): number {\n    super.init(codecpar, timeBase)\n    this.cache = createAVPacket()\n    this.cached = false\n\n    this.counter = 0\n    this.bitWriter = new BitWriter()\n\n    return 0\n  }\n\n  public destroy(): void {\n    super.destroy()\n    destroyAVPacket(this.cache)\n    this.cache = nullptr\n  }\n\n  private writeHeader() {\n    this.bitWriter.writeU1(this.counter === 0 ? 0 : 1)\n\n    // StreamMuxConfig\n    if (this.counter === 0) {\n      // audioMuxVersion\n      this.bitWriter.writeU1(0)\n      // allStreamsSameTimeFraming\n      this.bitWriter.writeU1(1)\n      // numSubFrames\n      this.bitWriter.writeU(6, 0)\n      // numProgram\n      this.bitWriter.writeU(4, 0)\n      // numLayer\n      this.bitWriter.writeU(3, 0)\n\n      // profile\n      this.bitWriter.writeU(5, (this.inCodecpar.profile - 1) & 0x1f)\n      // samplingFreqIndex\n      this.bitWriter.writeU(4, MPEG4SamplingFrequencyIndex[this.inCodecpar.sampleRate] & 0x0f)\n      // channelConfig\n      this.bitWriter.writeU(4, this.inCodecpar.chLayout.nbChannels & 0x0f)\n      // padding\n      this.bitWriter.writeU(3, 0)\n\n      // frameLengthType\n      this.bitWriter.writeU(3, 0)\n\n      // latmBufferFullness\n      this.bitWriter.writeU(8, 0xff)\n\n      // otherDataPresent\n      this.bitWriter.writeU1(0)\n\n      // crcCheckPresent\n      this.bitWriter.writeU1(0)\n\n    }\n\n    this.counter++\n    this.counter %= this.options.mod\n  }\n\n  private copyBytes(data: Uint8Array) {\n    for (let i = 0; i < data.length; i++) {\n      this.bitWriter.writeU(8, data[i])\n    }\n  }\n\n  public sendAVPacket(avpacket: pointer<AVPacket>): number {\n    if (!avpacket.data || !avpacket.size) {\n      return\n    }\n\n    this.bitWriter.clear()\n\n    const element = getAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\n    if (element) {\n      const { profile, sampleRate, channels } = getAVCodecParameters(mapUint8Array(element.data, element.size))\n      this.inCodecpar.profile = profile\n      this.inCodecpar.sampleRate = sampleRate\n      this.inCodecpar.chLayout.nbChannels = channels\n      this.counter = 0\n    }\n\n    this.writeHeader()\n\n    let i = 0\n    for (; i <= avpacket.size - 255; i += 255) {\n      this.bitWriter.writeU(8, 255)\n    }\n    this.bitWriter.writeU(8, avpacket.size - i)\n\n    const packetBuffer = mapUint8Array(avpacket.data, avpacket.size)\n\n    if ((packetBuffer[0] & 0xe1) === 0x81) {\n      /*\n       * Convert byte-aligned DSE to non-aligned.\n       * Due to the input format encoding we know that\n       * it is naturally byte-aligned in the input stream,\n       * so there are no padding bits to account for.\n       * To avoid having to add padding bits and rearrange\n       * the whole stream we just remove the byte-align flag.\n       * This allows us to remux our FATE AAC samples into latm\n       * files that are still playable with minimal effort.\n       */\n\n      this.bitWriter.writeU(8, packetBuffer[0] & 0xfe)\n      this.copyBytes(packetBuffer.subarray(1))\n    }\n    else {\n      this.copyBytes(packetBuffer)\n    }\n\n    this.bitWriter.padding()\n\n    const len = this.bitWriter.getPointer()\n\n    const size = 3 + len\n    const bufferPointer = avMalloc(size)\n    const buffer = mapUint8Array(bufferPointer, size)\n    buffer.set(LATM_HEADER, 0)\n\n    buffer[1] |= (len >> 8) & 0x1f\n    buffer[2] |= len & 0xff\n\n    buffer.set(this.bitWriter.getBuffer().subarray(0, len), 3)\n\n    copyAVPacketProps(this.cache, avpacket)\n    addAVPacketData(this.cache, bufferPointer, size)\n    this.cached = true\n  }\n\n  public receiveAVPacket(avpacket: pointer<AVPacket>): number {\n    if (this.cached) {\n      unrefAVPacket(avpacket)\n      refAVPacket(avpacket, this.cache)\n      this.cached = false\n      return 0\n    }\n    else {\n      return errorType.EOF\n    }\n  }\n}\n","/*\n * libmedia Avcc2AnnexbFilter\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport AVPacket, { AVPacketFlags } from 'avutil/struct/avpacket'\nimport AVBSFilter from '../AVBSFilter'\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\nimport { Rational } from 'avutil/struct/rational'\nimport { addAVPacketData, copyAVPacketProps, createAVPacket, destroyAVPacket,\n  getAVPacketSideData,\n  refAVPacket, unrefAVPacket\n} from 'avutil/util/avpacket'\n\nimport * as h264 from '../../codecs/h264'\nimport * as hevc from '../../codecs/hevc'\nimport * as vvc from '../../codecs/vvc'\nimport { AVCodecID, AVPacketSideDataType } from 'avutil/codec'\nimport * as errorType from 'avutil/error'\nimport { isAnnexb } from 'avutil/util/nalu'\nimport * as logger from 'common/util/logger'\nimport { mapSafeUint8Array } from 'cheap/std/memory'\n\nexport default class Avcc2AnnexbFilter extends AVBSFilter {\n  private cache: pointer<AVPacket>\n  private cached: boolean\n\n  public init(codecpar: pointer<AVCodecParameters>, timeBase: pointer<Rational>): number {\n    super.init(codecpar, timeBase)\n    this.cache = createAVPacket()\n    this.cached = false\n    return 0\n  }\n\n  public destroy(): void {\n    super.destroy()\n    destroyAVPacket(this.cache)\n    this.cache = nullptr\n  }\n\n  public sendAVPacket(avpacket: pointer<AVPacket>): number {\n    const buffer = mapSafeUint8Array(avpacket.data, avpacket.size)\n\n    if (avpacket.bitFormat === h264.BitFormat.ANNEXB || isAnnexb(buffer)) {\n      refAVPacket(this.cache, avpacket)\n    }\n    else {\n      copyAVPacketProps(this.cache, avpacket)\n\n      let convert: {\n        bufferPointer: pointer<uint8>,\n        length: size,\n        key: boolean\n      }\n\n      const element = getAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\n      let extradata = null\n      if (element) {\n        extradata = mapSafeUint8Array(element.data, element.size)\n      }\n\n      if (this.inCodecpar.codecId === AVCodecID.AV_CODEC_ID_H264) {\n        convert = h264.avcc2Annexb(buffer, extradata)\n      }\n      else if (this.inCodecpar.codecId === AVCodecID.AV_CODEC_ID_HEVC) {\n        convert = hevc.avcc2Annexb(buffer, extradata)\n      }\n      else if (this.inCodecpar.codecId === AVCodecID.AV_CODEC_ID_VVC) {\n        convert = vvc.avcc2Annexb(buffer, extradata)\n      }\n      else {\n        logger.fatal(`not support for codecId: ${this.inCodecpar.codecId}`)\n      }\n\n      this.cache.bitFormat = h264.BitFormat.ANNEXB\n\n      addAVPacketData(this.cache, convert.bufferPointer, convert.length)\n\n      if (convert.key) {\n        this.cache.flags |= AVPacketFlags.AV_PKT_FLAG_KEY\n      }\n    }\n    this.cached = true\n    return 0\n  }\n\n  public receiveAVPacket(avpacket: pointer<AVPacket>): number {\n    if (this.cached) {\n      unrefAVPacket(avpacket)\n      refAVPacket(avpacket, this.cache)\n      this.cached = false\n      return 0\n    }\n    else {\n      return errorType.DATA_INVALID\n    }\n  }\n}\n","/*\n * libmedia Raw2MpegtsFilter\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport AVPacket from 'avutil/struct/avpacket'\nimport AVBSFilter from '../AVBSFilter'\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\nimport { Rational } from 'avutil/struct/rational'\nimport { mapUint8Array } from 'cheap/std/memory'\nimport { addAVPacketData, copyAVPacketProps, createAVPacket,\n  destroyAVPacket, getAVPacketSideData, refAVPacket, unrefAVPacket\n} from 'avutil/util/avpacket'\nimport { avMalloc } from 'avutil/util/mem'\nimport * as errorType from 'avutil/error'\nimport * as opus from '../../codecs/opus'\nimport { AVPacketSideDataType } from 'avutil/codec'\n\nexport default class Raw2MpegtsFilter extends AVBSFilter {\n\n  private cache: pointer<AVPacket>\n\n  private cached: boolean\n\n  private opusPendingTrimStart: number\n\n  public init(codecpar: pointer<AVCodecParameters>, timeBase: pointer<Rational>): number {\n\n    super.init(codecpar, timeBase)\n    this.cache = createAVPacket()\n    this.cached = false\n\n    this.opusPendingTrimStart = (this.inCodecpar.initialPadding > 0 ? this.inCodecpar.initialPadding : 0)\n    * 48000 / this.inCodecpar.sampleRate\n\n    return 0\n  }\n\n  public destroy(): void {\n    super.destroy()\n    destroyAVPacket(this.cache)\n    this.cache = nullptr\n  }\n\n  public sendAVPacket(avpacket: pointer<AVPacket>): number {\n    if (!avpacket.data || !avpacket.size) {\n      return\n    }\n\n    const packetBuffer = mapUint8Array(avpacket.data, avpacket.size)\n\n    const opusSamples = opus.getBufferSamples(packetBuffer)\n    let sideData = null\n    const element = getAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_SKIP_SAMPLES)\n    if (element) {\n      sideData = mapUint8Array(element.data, element.size)\n    }\n    let trimEnd = 0\n\n    if (sideData && sideData.length >= 10) {\n      const value = (sideData[4] << 24) | (sideData[5] << 16) | (sideData[6] << 8) | sideData[9]\n      trimEnd = value * 48000 / this.inCodecpar.sampleRate\n    }\n\n    let ctrlHeaderSize = packetBuffer.length + 2 + packetBuffer.length / 255 + 1\n    if (this.opusPendingTrimStart) {\n      ctrlHeaderSize += 2\n    }\n    if (trimEnd) {\n      ctrlHeaderSize += 2\n    }\n\n    const bufferPointer = avMalloc(ctrlHeaderSize)\n    const buffer = mapUint8Array(bufferPointer, ctrlHeaderSize)\n\n    buffer[0] = 0x7f\n    buffer[1] = 0xe0\n    if (this.opusPendingTrimStart) {\n      buffer[1] |= 0x10\n    }\n\n    if (trimEnd) {\n      buffer[1] |= 0x08\n    }\n\n    let n = packetBuffer.length\n    let i = 2\n    do {\n      buffer[i] = Math.min(n, 255)\n      n -= 255\n      i++\n    }\n    while (n >= 0)\n\n    let trimStart = 0\n    if (this.opusPendingTrimStart) {\n      trimStart = Math.min(this.opusPendingTrimStart, opusSamples)\n      buffer[i] = (trimStart & 0xff00) >> 8\n      buffer[i + 1] = trimStart & 0xff\n      i += 2\n      this.opusPendingTrimStart -= trimStart\n    }\n    if (trimEnd) {\n      trimEnd = Math.min(trimEnd, opusSamples - trimStart)\n      buffer[i] = (trimEnd & 0xff00) >> 8\n      buffer[i + 1] = trimEnd & 0xff\n      i += 2\n    }\n\n    buffer.set(packetBuffer, i)\n\n    copyAVPacketProps(this.cache, avpacket)\n    addAVPacketData(this.cache, bufferPointer, ctrlHeaderSize)\n    this.cached = true\n    return 0\n  }\n\n  public receiveAVPacket(avpacket: pointer<AVPacket>): number {\n    if (this.cached) {\n      unrefAVPacket(avpacket)\n      refAVPacket(avpacket, this.cache)\n      this.cached = false\n      return 0\n    }\n    else {\n      return errorType.DATA_INVALID\n    }\n  }\n}\n","/*\n * libmedia aac util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport Stream from '../AVStream'\nimport { AVPacketSideDataType } from 'avutil/codec'\nimport { NOPTS_VALUE } from 'avutil/constant'\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\nimport { Uint8ArrayInterface } from 'common/io/interface'\n\nexport const enum MPEG4AudioObjectTypes {\n  NULL = 0,\n  /**\n   * Main-AAC\n   */\n  AAC_MAIN,\n  /**\n   * LC-AAC\n   */\n  AAC_LC,\n  AAC_SSR,\n  AAC_LTP,\n  /**\n   * HE-AAC\n   */\n  AAC_SBR,\n  AAC_SCALABLE,\n\n  LAYER1 = 32,\n  LAYER2,\n  /**\n   * MP3\n   */\n  LAYER3\n}\n\nexport const AACProfile2Name: Partial<Record<MPEG4AudioObjectTypes, string>> = {\n  [MPEG4AudioObjectTypes.AAC_MAIN]: 'Main',\n  [MPEG4AudioObjectTypes.AAC_LC]: 'LC',\n  [MPEG4AudioObjectTypes.AAC_SSR]: 'LC',\n  [MPEG4AudioObjectTypes.AAC_LTP]: 'LC',\n  [MPEG4AudioObjectTypes.AAC_SBR]: 'HE',\n  [MPEG4AudioObjectTypes.AAC_SCALABLE]: 'HE'\n}\n\nexport const MPEG4SamplingFrequencyIndex = {\n  96000: 0,\n  88200: 1,\n  64000: 2,\n  48000: 3,\n  44100: 4,\n  32000: 5,\n  24000: 6,\n  22050: 7,\n  16000: 8,\n  12000: 9,\n  11025: 10,\n  8000: 11,\n  7350: 12\n}\n\nexport const MPEG4SamplingFrequencies = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350,\n  NOPTS_VALUE,\n  NOPTS_VALUE,\n  NOPTS_VALUE\n]\n\nexport const MPEG4Channels = [\n  NOPTS_VALUE,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7\n]\n\n/**\n * 解析 AAC AudioSpecificConfig\n *    \n *             frequency\n *              44100Hz        fill bit\n *               4 bit          3 bit\n *              -------         -----\n *    0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0\n *    ---------         -------\n *      5 bit            4 bit\n *     AAC LC           fl, fr\n *    profile           channel\n * \n * url: https://wiki.multimedia.cx/index.php/MPEG-4_Audio#Audio_Specific_Config\n * \n */\n\nexport function getAVCodecParameters(extradata: Uint8ArrayInterface) {\n  let profile = NOPTS_VALUE\n  let sampleRate = NOPTS_VALUE\n  let channels = NOPTS_VALUE\n  if (extradata.length >= 2) {\n    profile = (extradata[0] >> 3) & 0x1f\n    sampleRate = MPEG4SamplingFrequencies[((extradata[0] & 0x07) << 1)\n      | (extradata[1] >> 7)] ?? 48000\n\n    channels = MPEG4Channels[(extradata[1] >> 3) & 0x0f] ?? 2\n  }\n\n  return {\n    profile,\n    sampleRate,\n    channels\n  }\n}\n\nexport function parseAVCodecParameters(stream: Stream, extradata?: Uint8ArrayInterface) {\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\n  }\n  if (extradata) {\n    const { profile, sampleRate, channels } = getAVCodecParameters(extradata)\n    stream.codecpar.profile = profile\n    stream.codecpar.sampleRate = sampleRate\n    stream.codecpar.chLayout.nbChannels = channels\n  }\n}\n\nexport function avCodecParameters2Extradata(codecpar: AVCodecParameters) {\n  const samplingFreqIndex = MPEG4SamplingFrequencyIndex[codecpar.sampleRate]\n  const channelConfig = codecpar.chLayout.nbChannels\n\n  const extradata = new Uint8Array(2)\n  extradata[0] = ((codecpar.profile & 0x1f) << 3) | ((samplingFreqIndex & 0x0e) >> 1)\n  extradata[1] = ((samplingFreqIndex & 0x01) << 7) | ((channelConfig & 0x0f) << 3)\n\n  return extradata\n}\n","/*\n * libmedia av1 util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport AVStream from '../AVStream'\nimport { AVPacketSideDataType } from 'avutil/codec'\nimport BitReader from 'common/io/BitReader'\nimport * as av1syntax from 'avutil/util/av1syntax'\nimport { Uint8ArrayInterface } from 'common/io/interface'\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\nimport BitWriter from 'common/io/BitWriter'\nimport { PixelFormatDescriptorsMap } from 'avutil/pixelFormatDescriptor'\n\nexport const enum AV1Profile {\n  Main,\n  High,\n  Professional\n}\n\nexport const enum OBUType {\n  Reserved,\n  SEQUENCE_HEADER,\n  TEMPORAL_DELIMITER,\n  FRAME_HEADER,\n  TILE_GROUP,\n  METADATA,\n  FRAME,\n  REDUNDANT_FRAME_HEADER,\n  TILE_LIST,\n  PADDING = 15\n}\n\nexport const AV1Profile2Name: Record<AV1Profile, string> = {\n  [AV1Profile.Main]: 'Main',\n  [AV1Profile.High]: 'High',\n  [AV1Profile.Professional]: 'Professional'\n}\n\nexport const LevelCapabilities = [\n  { level: 20, maxResolution: 2048 * 1152 },\n  { level: 21, maxResolution: 2816 * 1584 },\n  { level: 30, maxResolution: 4352 * 2448 },\n  { level: 31, maxResolution: 5504 * 3096 },\n  { level: 40, maxResolution: 6144 * 3456 },\n  { level: 41, maxResolution: 6144 * 3456 },\n  { level: 50, maxResolution: 8192 * 4352 },\n  { level: 51, maxResolution: 8192 * 4352 },\n  { level: 52, maxResolution: 8192 * 4352 },\n  { level: 53, maxResolution: 8192 * 4352 },\n  { level: 60, maxResolution: 16384 * 8704 },\n  { level: 61, maxResolution: 16384 * 8704 },\n  { level: 62, maxResolution: 16384 * 8704 },\n  { level: 63, maxResolution: 16384 * 8704 }\n]\n\nexport const AV1LevelIdx = [20, 21, 22, 23, 30, 31, 32, 33, 40, 41, 42, 43, 50, 51, 52, 53, 60, 61, 62, 63, 70, 71, 72, 73]\n\nexport function getLevelByResolution(width: number, height: number, fps: number) {\n  const resolution = width * height;\n  for (const level of LevelCapabilities) {\n    if (resolution <= level.maxResolution) {\n      return level.level\n    }\n  }\n}\n\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\n  }\n  if (extradata && extradata.length >= 4) {\n    const params = parseExtraData(extradata)\n\n    stream.codecpar.profile = params.profile\n    stream.codecpar.level = params.level\n  }\n}\n\n/**\n * - 1 bit marker\n * - 7 bit version\n * - 3 bit profile\n * - 5 bit level\n * - 1 bit tier\n * - 1 bit bitdepth > 8\n * - 1 bit bitdepth == 12\n * - 1 bit monochrome\n * - 1 bit chroma_subsampling_x\n * - 1 bit chroma_subsampling_y\n * - 2 bit chroma_sample_position\n * - 8 bit padding\n * \n * @param header \n */\nexport function parseExtraData(extradata: Uint8ArrayInterface) {\n  const bitReader = new BitReader(extradata.length)\n  bitReader.appendBuffer(extradata)\n  // marker\n  bitReader.readU1()\n  // version\n  bitReader.readU(7)\n\n  const profile = bitReader.readU(3)\n  const level = bitReader.readU(5)\n  const tier = bitReader.readU1()\n  let bitDepth = bitReader.readU1() ? 10 : 8\n  if (bitReader.readU1()) {\n    bitDepth = 12\n  }\n  const monochrome = bitReader.readU1()\n  const chromaSubsamplingX = bitReader.readU1()\n  const chromaSubsamplingY = bitReader.readU1()\n  const chromaSamplePosition = bitReader.readU(2)\n\n  return {\n    profile,\n    level,\n    tier,\n    bitDepth,\n    monochrome,\n    chromaSubsamplingX,\n    chromaSubsamplingY,\n    chromaSamplePosition\n  }\n}\n\n/* eslint-disable camelcase */\nexport function parseSequenceHeader(header: Uint8ArrayInterface) {\n  const bitReader = new BitReader(header.length)\n  bitReader.appendBuffer(header)\n\n  bitReader.readU1()\n  bitReader.readU(4)\n  const extensionFlag = bitReader.readU1()\n  const hasSizeFlag = bitReader.readU1()\n  // obu_reserved_1bit\n  bitReader.readU1()\n  if (extensionFlag) {\n    bitReader.readU(8)\n  }\n  if (hasSizeFlag) {\n    av1syntax.leb128(bitReader)\n  }\n\n  const seq_profile =\tav1syntax.f(bitReader, 3)\n  const still_picture =\tav1syntax.f(bitReader, 1)\n  const reduced_still_picture_header = av1syntax.f(bitReader, 1)\n\n  let timing_info_present_flag = 0\n  let decoder_model_info_present_flag = 0\n  let initial_display_delay_present_flag = 0\n  let operating_points_cnt_minus_1 = 0\n  let operating_point_idc: number[] = [0]\n  let seq_level_idx: number[] = [0]\n  let seq_tier: number[] = [0]\n  let decoder_model_present_for_this_op: number[] = [0]\n  let initial_display_delay_present_for_this_op: number[] = [0]\n  let initial_display_delay_minus_1: number[] = [0]\n  let buffer_delay_length_minus_1 = 0\n  let decoder_buffer_delay: number[] = [0]\n  let encoder_buffer_delay: number[] = [0]\n  let low_delay_mode_flag: number[] = [0]\n\n  if (reduced_still_picture_header) {\n    seq_level_idx[0] = av1syntax.f(bitReader, 5)\n  }\n  else {\n    timing_info_present_flag = av1syntax.f(bitReader, 1)\n    if (timing_info_present_flag) {\n\n      let num_units_in_display_tick =\tav1syntax.f(bitReader, 32)\n      let time_scale = av1syntax.f(bitReader, 32)\n      let equal_picture_interval = av1syntax.f(bitReader, 1)\n      if (equal_picture_interval) {\n        let num_ticks_per_picture_minus_1 = av1syntax.uvlc(bitReader)\n      }\n\n      let decoder_model_info_present_flag =\tav1syntax.f(bitReader, 1)\n      if (decoder_model_info_present_flag) {\n        buffer_delay_length_minus_1 =\tav1syntax.f(bitReader, 5)\n        let num_units_in_decoding_tick = av1syntax.f(bitReader, 32)\n        let buffer_removal_time_length_minus_1 = av1syntax.f(bitReader, 5)\n        let frame_presentation_time_length_minus_1 = av1syntax.f(bitReader, 5)\n      }\n    }\n    else {\n      decoder_model_info_present_flag = 0\n    }\n    let initial_display_delay_present_flag = av1syntax.f(bitReader, 1)\n    let operating_points_cnt_minus_1 = av1syntax.f(bitReader, 5)\n    for (let i = 0; i <= operating_points_cnt_minus_1; i++ ) {\n      operating_point_idc[i] = av1syntax.f(bitReader, 12)\n      seq_level_idx[i] = av1syntax.f(bitReader, 5)\n      if (seq_level_idx[i] > 7) {\n        seq_tier[i] = av1syntax.f(bitReader, 1)\n      }\n      else {\n        seq_tier[i] = 0\n      }\n      if (decoder_model_info_present_flag) {\n        decoder_model_present_for_this_op[i] = av1syntax.f(bitReader, 1)\n        if (decoder_model_present_for_this_op[i]) {\n          let n = buffer_delay_length_minus_1 + 1\n          decoder_buffer_delay[i] =\tav1syntax.f(bitReader, n)\n          encoder_buffer_delay[i] =\tav1syntax.f(bitReader, n)\n          low_delay_mode_flag[i] = av1syntax.f(bitReader, 1)\n        }\n      }\n      else {\n        decoder_model_present_for_this_op[i] = 0\n      }\n      if (initial_display_delay_present_flag) {\n        initial_display_delay_present_for_this_op[i] = av1syntax.f(bitReader, 1)\n        if ( initial_display_delay_present_for_this_op[i] ) {\n          initial_display_delay_minus_1[i] = av1syntax.f(bitReader, 4)\n        }\n      }\n    }\n  }\n  let frame_width_bits_minus_1 = av1syntax.f(bitReader, 4)\n  let frame_height_bits_minus_1 =\tav1syntax.f(bitReader, 4)\n  let n = frame_width_bits_minus_1 + 1\n  let max_frame_width_minus_1 =\tav1syntax.f(bitReader, n)\n  n = frame_height_bits_minus_1 + 1\n  let max_frame_height_minus_1 = av1syntax.f(bitReader, n)\n  let frame_id_numbers_present_flag = 0\n  let delta_frame_id_length_minus_2 = 0\n  let additional_frame_id_length_minus_1 = 0\n  if (reduced_still_picture_header ) {\n    frame_id_numbers_present_flag = 0\n  }\n  else {\n    frame_id_numbers_present_flag =\tav1syntax.f(bitReader, 1)\n  }\n  if ( frame_id_numbers_present_flag ) {\n    delta_frame_id_length_minus_2 =\tav1syntax.f(bitReader, 4)\n    additional_frame_id_length_minus_1 = av1syntax.f(bitReader, 3)\n  }\n  let use_128x128_superblock = av1syntax.f(bitReader, 1)\n  let enable_filter_intra =\tav1syntax.f(bitReader, 1)\n  let enable_intra_edge_filter = av1syntax.f(bitReader, 1)\n  let enable_interintra_compound = 0\n  let enable_masked_compound = 0\n  let enable_warped_motion = 0\n  let enable_dual_filter = 0\n  let enable_order_hint = 0\n  let enable_jnt_comp = 0\n  let enable_ref_frame_mvs = 0\n  let seq_force_screen_content_tools = 2\n  let seq_force_integer_mv = 2\n  let OrderHintBits = 0\n  if (!reduced_still_picture_header) {\n    let enable_interintra_compound = av1syntax.f(bitReader, 1)\n    enable_masked_compound = av1syntax.f(bitReader, 1)\n    enable_warped_motion = av1syntax.f(bitReader, 1)\n    enable_dual_filter = av1syntax.f(bitReader, 1)\n    enable_order_hint = av1syntax.f(bitReader, 1)\n    if (enable_order_hint) {\n      enable_jnt_comp = av1syntax.f(bitReader, 1)\n      enable_ref_frame_mvs = av1syntax.f(bitReader, 1)\n    }\n    else {\n      enable_jnt_comp = 0\n      enable_ref_frame_mvs = 0\n    }\n    let seq_choose_screen_content_tools =\tav1syntax.f(bitReader, 1)\n    if (seq_choose_screen_content_tools) {\n      seq_force_screen_content_tools = 2\n    }\n    else {\n      seq_force_screen_content_tools = av1syntax.f(bitReader, 1)\n    }\n\n    if (seq_force_screen_content_tools > 0) {\n      let seq_choose_integer_mv =\tav1syntax.f(bitReader, 1)\n      if (seq_choose_integer_mv) {\n        seq_force_integer_mv = 2\n      }\n      else {\n        seq_force_integer_mv = av1syntax.f(bitReader, 1)\n      }\n    }\n    else {\n      seq_force_integer_mv = 2\n    }\n    if (enable_order_hint) {\n      const order_hint_bits_minus_1 =\tav1syntax.f(bitReader, 3)\n      OrderHintBits = order_hint_bits_minus_1 + 1\n    }\n    else {\n      OrderHintBits = 0\n    }\n  }\n  let enable_superres =\tav1syntax.f(bitReader, 1)\n  let enable_cdef =\tav1syntax.f(bitReader, 1)\n  let enable_restoration = av1syntax.f(bitReader, 1)\n\n  let high_bitdepth =\tav1syntax.f(bitReader, 1)\n  let twelve_bit = 0\n  let bit_depth = 0\n  let mono_chrome = 0\n  if (seq_profile == 2 && high_bitdepth ) {\n    twelve_bit = av1syntax.f(bitReader, 1)\n    bit_depth = twelve_bit ? 12 : 10\n  }\n  else if (seq_profile <= 2) {\n    bit_depth = high_bitdepth ? 10 : 8\n  }\n  if ( seq_profile == 1 ) {\n    mono_chrome = 0\n  }\n  else {\n    mono_chrome = av1syntax.f(bitReader, 1)\n  }\n  const color_description_present_flag = av1syntax.f(bitReader, 1)\n  let color_primaries = 0\n  let transfer_characteristics = 0\n  let matrix_coefficients = 0\n  if (color_description_present_flag ) {\n    color_primaries =\tav1syntax.f(bitReader, 8)\n    transfer_characteristics = av1syntax.f(bitReader, 8)\n    matrix_coefficients = av1syntax.f(bitReader, 8)\n  }\n  else {\n    color_primaries = 2\n    transfer_characteristics = 2\n    matrix_coefficients = 2\n  }\n  let color_range = 0\n  let subsampling_x = 0\n  let subsampling_y = 0\n  let chroma_sample_position = 0\n  let separate_uv_delta_q = 0\n  if (mono_chrome) {\n    color_range =\tav1syntax.f(bitReader, 1)\n    subsampling_x = 1\n    subsampling_y = 1\n    chroma_sample_position = 0\n    separate_uv_delta_q = 0\n  }\n  else if (color_primaries == 1\n    && transfer_characteristics == 13\n    && matrix_coefficients == 0\n  ) {\n    color_range = 1\n    subsampling_x = 0\n    subsampling_y = 0\n    separate_uv_delta_q = av1syntax.f(bitReader, 1)\n  }\n  else {\n    color_range =\tav1syntax.f(bitReader, 1)\n    if (seq_profile == 0) {\n      subsampling_x = 1\n      subsampling_y = 1\n    }\n    else if ( seq_profile == 1 ) {\n      subsampling_x = 0\n      subsampling_y = 0\n    }\n    else {\n      if (bit_depth == 12) {\n        subsampling_x\t= av1syntax.f(bitReader, 1)\n        if (subsampling_x) {\n          subsampling_y =\tav1syntax.f(bitReader, 1)\n        }\n        else {\n          subsampling_y = 0\n        }\n      }\n      else {\n        subsampling_x = 1\n        subsampling_y = 0\n      }\n    }\n    if (subsampling_x && subsampling_y) {\n      chroma_sample_position = av1syntax.f(bitReader, 2)\n    }\n    separate_uv_delta_q = av1syntax.f(bitReader, 1)\n  }\n\n  let film_grain_params_present\t= av1syntax.f(bitReader, 1)\n\n  return {\n    width: max_frame_width_minus_1 + 1,\n    height: max_frame_height_minus_1 + 1,\n    profile: seq_profile,\n    level: AV1LevelIdx[seq_level_idx[0]],\n    tier: seq_tier[0],\n    bitDepth: bit_depth,\n    monoChrome: mono_chrome,\n    colorRange: color_range,\n    colorPrimaries: color_primaries,\n    transferCharacteristics: transfer_characteristics,\n    matrixCoefficients: matrix_coefficients,\n    subsamplingX: subsampling_x,\n    subsamplingY: subsampling_y,\n    chromaSamplePosition: chroma_sample_position\n  }\n}\n\nexport function splitOBU(buffer: Uint8ArrayInterface) {\n  const bitReader = new BitReader()\n\n  bitReader.appendBuffer(buffer)\n\n  const list: Uint8ArrayInterface[] = []\n\n  while (bitReader.remainingLength()) {\n    const now = bitReader.getPos()\n    // obu_forbidden_bit\n    bitReader.readU1()\n    const type = bitReader.readU(4)\n    const extensionFlag = bitReader.readU1()\n    const hasSizeFlag = bitReader.readU1()\n    // obu_reserved_1bit\n    bitReader.readU1()\n\n    if (extensionFlag) {\n      bitReader.readU(8)\n    }\n\n    const size = hasSizeFlag ? av1syntax.leb128(bitReader) : buffer.length - 1 - extensionFlag\n\n    const headerSize = bitReader.getPos() - now\n\n    list.push(buffer.subarray(now, now + headerSize + size))\n\n    bitReader.skip(size * 8)\n  }\n\n  return list\n}\n\nexport function generateExtradata(codecpar: pointer<AVCodecParameters>, buffer: Uint8ArrayInterface) {\n  const bitWriter = new BitWriter(4)\n  // marker\n  bitWriter.writeU1(1)\n  // version\n  bitWriter.writeU(7, 1)\n\n  const header = splitOBU(buffer).find((buffer) => {\n    return ((buffer[0] >>> 3) & 0x0f) === OBUType.SEQUENCE_HEADER\n  }) \n  \n  if (header) {\n    const params = parseSequenceHeader(header)\n    bitWriter.writeU(3, params.profile)\n    bitWriter.writeU(5, params.level)\n    bitWriter.writeU(1, params.tier)\n    bitWriter.writeU(1, params.bitDepth > 8 ? 1 : 0)\n    bitWriter.writeU(1, params.bitDepth === 12 ? 1 : 0)\n    bitWriter.writeU(1, params.monoChrome)\n    bitWriter.writeU(1, params.subsamplingX)\n    bitWriter.writeU(1, params.subsamplingY)\n    bitWriter.writeU(1, params.chromaSamplePosition)\n  }\n  else {\n    const desc = PixelFormatDescriptorsMap[codecpar.format]\n    bitWriter.writeU(3, codecpar.profile)\n    bitWriter.writeU(5, codecpar.level)\n    bitWriter.writeU(1, 0)\n    bitWriter.writeU(1, desc.comp[0].depth > 8 ? 1 : 0)\n    bitWriter.writeU(1, desc.comp[0].depth === 12 ? 1 : 0)\n    bitWriter.writeU(1, 0)\n    bitWriter.writeU(1, 1)\n    bitWriter.writeU(1, 1)\n    bitWriter.writeU(1, 0)\n  }\n  // padding\n  bitWriter.writeU(8, 0)\n  return bitWriter.getBuffer()\n}\n","/*\n * libmedia h264 util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport * as array from 'common/util/array'\nimport AVPacket, { AVPacketFlags } from 'avutil/struct/avpacket'\nimport BufferWriter from 'common/io/BufferWriter'\nimport BufferReader from 'common/io/BufferReader'\nimport { AVPacketSideDataType } from 'avutil/codec'\nimport BitReader from 'common/io/BitReader'\nimport AVStream from '../AVStream'\nimport * as logger from 'common/util/logger'\nimport { mapUint8Array, memcpyFromUint8Array } from 'cheap/std/memory'\nimport { addAVPacketSideData, getAVPacketData } from 'avutil/util/avpacket'\nimport { naluUnescape, splitNaluByStartCode, isAnnexb } from 'avutil/util/nalu'\nimport { avMalloc } from 'avutil/util/mem'\nimport * as expgolomb from 'avutil/util/expgolomb'\nimport { Uint8ArrayInterface } from 'common/io/interface'\n\nexport const NALULengthSizeMinusOne = 3\n\nexport const enum BitFormat {\n  AVCC = 1,\n  ANNEXB\n}\n\nexport const enum PictureType {\n  I = 1,\n  P,\n  B,\n  SPS,\n  PPS,\n  SEI\n}\n\nexport const enum H264NaluType {\n  kUnspecified = 0,\n  kSliceNonIDR,\n  kSliceDPA,\n  kSliceDPB,\n  kSliceDPC,\n  kSliceIDR,\n  kSliceSEI,\n  kSliceSPS,\n  kSlicePPS,\n  kSliceAUD,\n  kEndOfSequence,\n  kEndOfStream,\n  kFiller,\n  kSPSExt,\n  kReserved0\n}\n\nexport const enum H264Profile {\n  kBaseline = 66,\n  kMain = 77,\n  kHigh = 100,\n  kConstrained = kBaseline,\n  kHigh10 = 110,\n  kHigh422 = 122,\n  kHigh444 = 244\n}\n\nexport const H264Profile2Name: Record<H264Profile, string> = {\n  [H264Profile.kBaseline]: 'Constrained Baseline',\n  [H264Profile.kMain]: 'Main',\n  [H264Profile.kHigh]: 'High',\n  [H264Profile.kHigh10]: 'High10',\n  [H264Profile.kHigh422]: 'High422',\n  [H264Profile.kHigh444]: 'High444'\n}\n\nexport const LevelCapabilities = [\n  { level: 10, maxResolution: 25344, maxFrameRate: 15 },\n  { level: 11, maxResolution: 25344, maxFrameRate: 30 },\n  { level: 12, maxResolution: 101376, maxFrameRate: 30 },\n  { level: 13, maxResolution: 101376, maxFrameRate: 30 },\n  { level: 20, maxResolution: 101376, maxFrameRate: 30 },\n  { level: 21, maxResolution: 202752, maxFrameRate: 30 },\n  { level: 22, maxResolution: 414720, maxFrameRate: 30 },\n  { level: 30, maxResolution: 414720, maxFrameRate: 30 },\n  { level: 31, maxResolution: 921600, maxFrameRate: 30 },\n  { level: 32, maxResolution: 1310720, maxFrameRate: 60 },\n  { level: 40, maxResolution: 2097152, maxFrameRate: 30 },\n  { level: 41, maxResolution: 2097152, maxFrameRate: 60 },\n  { level: 42, maxResolution: 2228224, maxFrameRate: 60 },\n  { level: 50, maxResolution: 8912896, maxFrameRate: 30 },\n  { level: 51, maxResolution: 8912896, maxFrameRate: 60 },\n  { level: 52, maxResolution: 8912896, maxFrameRate: 120 },\n  { level: 60, maxResolution: 35651584, maxFrameRate: 30 },\n  { level: 61, maxResolution: 35651584, maxFrameRate: 60 },\n  { level: 62, maxResolution: 35651584, maxFrameRate: 120 }\n]\n\nexport function getLevelByResolution(width: number, height: number, fps: number) {\n  const resolution = width * height;\n  for (const level of LevelCapabilities) {\n    if (resolution <= level.maxResolution && fps <= level.maxFrameRate) {\n      return level.level\n    }\n  }\n}\n\n/**\n * \n * avcc 格式的 extradata 转 annexb sps pps\n * \n * bits    \n * - 8   version ( always 0x01 )\n * - 8   avc profile ( sps[0][1] )\n * - 8   avc compatibility ( sps[0][2] )\n * - 8   avc level ( sps[0][3] )\n * - 6   reserved ( all bits on )\n * - 2   NALULengthSizeMinusOne\n * - 3   reserved ( all bits on )\n * - 5   number of SPS NALUs (usually 1)\n * - repeated once per SPS:\n *   - 16         SPS size\n *   - variable   SPS NALU data\n * - 8 number of PPS NALUs (usually 1)\n * - repeated once per PPS:\n *   - 16       PPS size\n *   - variable PPS NALU data\n * \n * - ext (profile !== 66 && profile !== 77 && profile !== 88)\n *  - 6 reserved ( all bits on )\n *  - 2 chroma_format_idc\n *  - 5 reserved ( all bits on )\n *  - 3 bit_depth_luma_minus8\n *  - 5 reserved ( all bits on )\n *  - 3 bit_depth_chroma_minus8\n *  - 8 number of SPS_EXT NALUs\n *    - 16 SPS_EXT size\n *    - variable   SPS_EXT NALU data\n * \n */\nexport function extradata2SpsPps(extradata: Uint8ArrayInterface) {\n  const bufferReader = new BufferReader(extradata)\n  bufferReader.skip(5)\n\n  const spss = []\n  const ppss = []\n  const spsExts = []\n\n  const spsLength = bufferReader.readUint8() & 0x1f\n  for (let i = 0; i < spsLength; i++) {\n    const length = bufferReader.readUint16()\n    spss.push(bufferReader.readBuffer(length))\n  }\n\n  const ppsLength = bufferReader.readUint8()\n  for (let i = 0; i < ppsLength; i++) {\n    const length = bufferReader.readUint16()\n    ppss.push(bufferReader.readBuffer(length))\n  }\n\n  if (bufferReader.remainingSize() > 4) {\n    bufferReader.skip(3)\n    const spsExtLength = bufferReader.readUint8()\n    if (spsExtLength > 0) {\n      for (let i = 0; i < spsExtLength; i++) {\n        const length = bufferReader.readUint16()\n        spsExts.push(bufferReader.readBuffer(length))\n      }\n    }\n  }\n\n  return {\n    spss,\n    ppss,\n    spsExts\n  }\n}\n\nexport function spsPps2Extradata(spss: Uint8ArrayInterface[], ppss: Uint8ArrayInterface[], spsExts: Uint8ArrayInterface[] = []) {\n\n  if (spss.length > 32) {\n    logger.warn(`h264 metadata\\'s sps max length is 32, but get ${spss.length}`)\n    spss = spss.slice(0, 32)\n  }\n  if (spss.length > 256) {\n    logger.warn(`h264 metadata\\'s pps max length is 256, but get ${spss.length}`)\n    spss = spss.slice(0, 256)\n  }\n\n  let length = 7\n  length = spss.reduce((prev, sps) => {\n    return prev + 2 + sps.length\n  }, length)\n  length = ppss.reduce((prev, pps) => {\n    return prev + 2 + pps.length\n  }, length)\n\n  const sps = spss[0]\n\n  const params = parserSPS(sps)\n\n  if (params.profile !== 66 && params.profile !== 77 && params.profile !== 88) {\n    length += 4\n\n    if (spsExts.length) {\n      length = spsExts.reduce((prev, ext) => {\n        return prev + 2 + ext.length\n      }, length)\n    }\n  }\n\n  const buffer = new Uint8Array(length)\n  const bufferWriter = new BufferWriter(buffer)\n\n  bufferWriter.writeUint8(0x01)\n  bufferWriter.writeUint8(sps[1])\n  bufferWriter.writeUint8(sps[2])\n  bufferWriter.writeUint8(sps[3])\n  bufferWriter.writeUint8(0xfc | NALULengthSizeMinusOne)\n\n  // sps\n  bufferWriter.writeUint8(0xe0 | (spss.length & 0x1f))\n  array.each(spss, (sps) => {\n    bufferWriter.writeUint16(sps.length)\n    bufferWriter.writeBuffer(sps)\n  })\n\n  // pps\n  bufferWriter.writeUint8(ppss.length)\n  array.each(ppss, (pps) => {\n    bufferWriter.writeUint16(pps.length)\n    bufferWriter.writeBuffer(pps)\n  })\n\n  if (params.profile !== 66 && params.profile !== 77 && params.profile !== 88) {\n    bufferWriter.writeUint8(0xfc | params.chromaFormatIdc)\n    bufferWriter.writeUint8(0xf8 | params.bitDepthLumaMinus8)\n    bufferWriter.writeUint8(0xf8 | params.bitDepthChromaMinus8)\n\n    if (spsExts.length) {\n      array.each(spsExts, (ext) => {\n        bufferWriter.writeUint16(ext.length)\n        bufferWriter.writeBuffer(ext)\n      })\n    }\n  }\n\n  return buffer\n}\n\nexport function annexbExtradata2AvccExtradata(data: Uint8ArrayInterface) {\n  let nalus = splitNaluByStartCode(data)\n  if (nalus.length > 1) {\n    const spss = []\n    const ppss = []\n    const spsExts = []\n\n    nalus.forEach((nalu) => {\n      const type = nalu[0] & 0x1f\n      if (type === H264NaluType.kSliceSPS) {\n        spss.push(nalu)\n      }\n      else if (type === H264NaluType.kSlicePPS) {\n        ppss.push(nalu)\n      }\n      else if (type === H264NaluType.kSPSExt) {\n        spsExts.push(nalu)\n      }\n    })\n    if (spss.length && ppss.length) {\n      return spsPps2Extradata(spss, ppss, spsExts)\n    }\n  }\n}\n\n/**\n * \n * annexb 格式的 NALU 转 avcc NALU \n * \n */\nexport function annexb2Avcc(data: Uint8ArrayInterface) {\n\n  let nalus = splitNaluByStartCode(data)\n  let extradata: Uint8Array\n  let key: boolean = false\n\n  if (nalus.length > 1) {\n    const spss = []\n    const ppss = []\n    const spsExts = []\n\n    nalus.forEach((nalu) => {\n      const type = nalu[0] & 0x1f\n      if (type === H264NaluType.kSliceSPS) {\n        spss.push(nalu)\n      }\n      else if (type === H264NaluType.kSlicePPS) {\n        ppss.push(nalu)\n      }\n      else if (type === H264NaluType.kSPSExt) {\n        spsExts.push(nalu)\n      }\n    })\n\n    if (spss.length && ppss.length) {\n      extradata = spsPps2Extradata(spss, ppss, spsExts)\n    }\n\n    nalus = nalus.filter((nalu) => {\n      const type = nalu[0] & 0x1f\n      return type !== H264NaluType.kSliceAUD\n        && type !== H264NaluType.kSlicePPS\n        && type !== H264NaluType.kSliceSPS\n        && type !== H264NaluType.kSPSExt\n    })\n  }\n\n  const length = nalus.reduce((prev, nalu) => {\n    return prev + NALULengthSizeMinusOne + 1 + nalu.length\n  }, 0)\n\n  const bufferPointer = avMalloc(length)\n  const buffer = mapUint8Array(bufferPointer, length)\n\n  const bufferWriter = new BufferWriter(buffer)\n\n  array.each(nalus, (nalu) => {\n    if (NALULengthSizeMinusOne === 3) {\n      bufferWriter.writeUint32(nalu.length)\n    }\n    else if (NALULengthSizeMinusOne === 2) {\n      bufferWriter.writeUint24(nalu.length)\n    }\n    else if (NALULengthSizeMinusOne === 1) {\n      bufferWriter.writeUint16(nalu.length)\n    }\n    else {\n      bufferWriter.writeUint8(nalu.length)\n    }\n    bufferWriter.writeBuffer(nalu.subarray(0))\n\n    const type = nalu[0] & 0x1f\n    if (type === H264NaluType.kSliceIDR) {\n      key = true\n    }\n  })\n\n  return {\n    bufferPointer,\n    length,\n    key,\n    extradata\n  }\n}\n\n/**\n * avcc 格式的 NALU 转 annexb NALU \n * \n */\nexport function avcc2Annexb(data: Uint8ArrayInterface, extradata?: Uint8ArrayInterface) {\n  const naluLengthSizeMinusOne = extradata ? (extradata[4] & 0x03) : NALULengthSizeMinusOne\n  let spss = []\n  let ppss = []\n  let spsExts = []\n  let key = false\n\n  if (extradata) {\n    const result = extradata2SpsPps(extradata)\n    spss = result.spss\n    ppss = result.ppss\n    spsExts = result.spsExts\n\n    key = true\n  }\n\n  const nalus = []\n  const seis = []\n\n  const bufferReader = new BufferReader(data)\n  while (bufferReader.remainingSize() > 0) {\n    let length = 0\n    if (naluLengthSizeMinusOne === 3) {\n      length = bufferReader.readUint32()\n    }\n    else if (naluLengthSizeMinusOne === 2) {\n      length = bufferReader.readUint24()\n    }\n    else if (naluLengthSizeMinusOne === 1) {\n      length = bufferReader.readUint16()\n    }\n    else {\n      length = bufferReader.readUint8()\n    }\n\n    const nalu = data.subarray(static_cast<int32>(bufferReader.getPos()), static_cast<int32>(bufferReader.getPos()) + length)\n    bufferReader.skip(length)\n\n    const naluType = nalu[0] & 0x1f\n\n    if (naluType === H264NaluType.kSliceSEI) {\n      seis.push(nalu)\n    }\n    else if (naluType !== H264NaluType.kSliceAUD) {\n      nalus.push(nalu)\n    }\n  }\n\n  let length = spss.reduce((prev, sps) => {\n    return prev + 4 + sps.length\n  }, 0)\n  length = ppss.reduce((prev, pps) => {\n    return prev + 4 + pps.length\n  }, length)\n  length = spsExts.reduce((prev, ext) => {\n    return prev + 4 + ext.length\n  }, length)\n  length = seis.reduce((prev, sei) => {\n    return prev + 4 + sei.length\n  }, length)\n  length = nalus.reduce((prev, nalu, index) => {\n    return prev + (index ? 3 : 4) + nalu.length\n  }, length)\n\n  const bufferPointer = avMalloc(length + 6)\n  const bufferWriter = new BufferWriter(mapUint8Array(bufferPointer, length + 6))\n\n  // AUD\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(0x01)\n  bufferWriter.writeUint8(0x09)\n  bufferWriter.writeUint8(0xf0)\n\n  array.each(seis, (sei) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(sei)\n  })\n\n  array.each(spss, (sps) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(sps)\n  })\n\n  array.each(ppss, (pps) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(pps)\n  })\n  array.each(spsExts, (ext) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(ext)\n  })\n\n  array.each(nalus, (nalu, index) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    if (!index) {\n      bufferWriter.writeUint8(0x00)\n    }\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(nalu)\n\n    const type = nalu[0] & 0x1f\n    if (type === H264NaluType.kSliceIDR) {\n      key = true\n    }\n  })\n  return {\n    bufferPointer,\n    length: length + 6,\n    key\n  }\n}\n\nexport function parseAvccExtraData(avpacket: pointer<AVPacket>, stream: AVStream) {\n\n  if (!(avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY)) {\n    return\n  }\n\n  const data = getAVPacketData(avpacket)\n\n  if (isAnnexb(data)) {\n    return\n  }\n\n  const naluLengthSizeMinusOne = stream.metadata.naluLengthSizeMinusOne ?? NALULengthSizeMinusOne\n\n  let spss = []\n  let ppss = []\n  let spsExts = []\n  let others = []\n\n  const bufferReader = new BufferReader(data)\n  while (bufferReader.remainingSize() > 0) {\n    let length = 0\n    if (naluLengthSizeMinusOne === 3) {\n      length = bufferReader.readUint32()\n    }\n    else if (naluLengthSizeMinusOne === 2) {\n      length = bufferReader.readUint24()\n    }\n    else if (naluLengthSizeMinusOne === 1) {\n      length = bufferReader.readUint16()\n    }\n    else {\n      length = bufferReader.readUint8()\n    }\n\n    const nalu = data.subarray(static_cast<int32>(bufferReader.getPos()), static_cast<int32>(bufferReader.getPos()) + length)\n    bufferReader.skip(length)\n\n    const naluType = nalu[0] & 0x1f\n\n    if (naluType === H264NaluType.kSliceSPS) {\n      spss.push(nalu)\n    }\n    else if (naluType === H264NaluType.kSlicePPS) {\n      ppss.push(nalu)\n    }\n    else if (naluType === H264NaluType.kSPSExt) {\n      spsExts.push(nalu)\n    }\n    else {\n      others.push(nalu)\n    }\n  }\n\n  if (spss.length || ppss.length) {\n    const extradata = spsPps2Extradata(spss, ppss, spsExts)\n    const extradataPointer = avMalloc(extradata.length)\n    memcpyFromUint8Array(extradataPointer, extradata.length, extradata)\n    addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, extradataPointer, extradata.length)\n  }\n}\n\nexport function parseAnnexbExtraData(avpacket: pointer<AVPacket>, force: boolean = false) {\n  if (!(avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY) && !force) {\n    return\n  }\n\n  const data = getAVPacketData(avpacket)\n\n  if (!isAnnexb(data)) {\n    return\n  }\n\n  let nalus = splitNaluByStartCode(data)\n\n  if (nalus.length > 1) {\n    const spss = []\n    const ppss = []\n    const spsExts = []\n\n    nalus.forEach((nalu) => {\n      const type = nalu[0] & 0x1f\n      if (type === H264NaluType.kSliceSPS) {\n        spss.push(nalu)\n      }\n      else if (type === H264NaluType.kSlicePPS) {\n        ppss.push(nalu)\n      }\n      else if (type === H264NaluType.kSPSExt) {\n        spsExts.push(nalu)\n      }\n    })\n\n    if (spss.length && ppss.length) {\n      const extradata = spsPps2Extradata(spss, ppss, spsExts)\n      const extradataPointer = avMalloc(extradata.length)\n      memcpyFromUint8Array(extradataPointer, extradata.length, extradata)\n      addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, extradataPointer, extradata.length)\n      avpacket.flags |= AVPacketFlags.AV_PKT_FLAG_KEY\n    }\n  }\n}\n\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\n  }\n  if (extradata && extradata.length >= 6) {\n\n    stream.metadata.naluLengthSizeMinusOne = (extradata[4] & 0x03)\n\n    const { spss } = extradata2SpsPps(extradata)\n\n    if (spss.length) {\n      const { profile, level, width, height } = parserSPS(spss[0])\n\n      stream.codecpar.profile = profile\n      stream.codecpar.level = level\n      stream.codecpar.width = width\n      stream.codecpar.height = height\n    }\n  }\n}\n\nexport function parserSPS(sps: Uint8ArrayInterface) {\n\n  if (!sps || sps.length < 3) {\n    return\n  }\n\n  let offset = 0\n  if (sps[0] === 0x00\n    && sps[1] === 0x00\n    && sps[2] === 0x00\n    && sps[3] === 0x01\n  ) {\n    offset = 4\n  }\n\n  const buffer = naluUnescape(sps.subarray(offset))\n  const bitReader = new BitReader(buffer.length)\n  bitReader.appendBuffer(buffer)\n\n  // forbidden_zero_bit\n  bitReader.readU1()\n  // nal_ref_idc\n  bitReader.readU(2)\n  // nal_unit_type\n  bitReader.readU(5)\n\n  const profile = bitReader.readU(8)\n\n  // constraint_set0_flag\n  bitReader.readU1()\n  // constraint_set1_flag\n  bitReader.readU1()\n  // constraint_set2_flag\n  bitReader.readU1()\n  // constraint_set3_flag\n  bitReader.readU1()\n  // constraint_set4_flag\n  bitReader.readU1()\n  // constraint_set4_flag\n  bitReader.readU1()\n  // reserved_zero_2bits\n  bitReader.readU(2)\n\n  const level = bitReader.readU(8)\n\n  // seq_parameter_set_id\n  expgolomb.readUE(bitReader)\n\n  // 摄像机出图大部分格式是 4:2:0\n  let chromaFormatIdc = 1\n  let bitDepthLumaMinus8 = 0\n  let bitDepthChromaMinus8 = 0\n\n  if (profile == 100 || profile == 110 || profile == 122\n    || profile == 244 || profile == 44 || profile == 83\n    || profile == 86 || profile == 118 || profile == 128\n    || profile == 138 || profile == 139 || profile == 134 || profile == 135\n  ) {\n    chromaFormatIdc = expgolomb.readUE(bitReader)\n    if (chromaFormatIdc === 3) {\n      // separate_colour_plane_flag\n      bitReader.readU1()\n    }\n    // bit_depth_luma_minus8\n    bitDepthLumaMinus8 = expgolomb.readUE(bitReader)\n    // bit_depth_chroma_minus8\n    bitDepthChromaMinus8 = expgolomb.readUE(bitReader)\n    // qpprime_y_zero_transform_bypass_flag\n    bitReader.readU1()\n\n    let seqScalingMatrixPresentFlag = bitReader.readU1()\n    if (seqScalingMatrixPresentFlag) {\n      const seqScalingListPresentFlag = new Array(8)\n      for (let i = 0; i < ((chromaFormatIdc != 3) ? 8 : 12); i++) {\n        seqScalingListPresentFlag[i] = bitReader.readU1()\n      }\n    }\n  }\n\n  // log2_max_frame_num_minus4\n  expgolomb.readUE(bitReader)\n\n  const picOrderCntType = expgolomb.readUE(bitReader)\n\n  if (picOrderCntType === 0) {\n    // log2_max_pic_order_cnt_lsb_minus4\n    expgolomb.readUE(bitReader)\n  }\n  else if (picOrderCntType === 1) {\n    // delta_pic_order_always_zero_flag\n    bitReader.readU1()\n\n    // offset_for_non_ref_pic\n    expgolomb.readSE(bitReader)\n    // offset_for_top_to_bottom_field\n    expgolomb.readSE(bitReader)\n\n    const numRefFramesInPicOrderCntCycle = expgolomb.readUE(bitReader)\n    for (let i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n      expgolomb.readSE(bitReader)\n    }\n  }\n\n  // max_num_ref_frames\n  expgolomb.readUE(bitReader)\n  // gaps_in_frame_num_value_allowed_flag\n  bitReader.readU1()\n\n  const picWidthInMbsMinus1 = expgolomb.readUE(bitReader)\n  const picHeightInMapUnitsMinus1 = expgolomb.readUE(bitReader)\n  const frameMbsOnlyFlag = bitReader.readU1()\n\n  let width = (picWidthInMbsMinus1 + 1) * 16\n  let height = (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16\n\n  if (!frameMbsOnlyFlag) {\n    // mb_adaptive_frame_field_flag\n    bitReader.readU1()\n  }\n\n  // direct_8x8_inference_flag\n  bitReader.readU1()\n\n  const frameCroppingFlag = bitReader.readU1()\n  if (frameCroppingFlag) {\n    const frameCropLeftOffset = expgolomb.readUE(bitReader)\n    const frameCropRightOffset = expgolomb.readUE(bitReader)\n    const frameCropTopOffset = expgolomb.readUE(bitReader)\n    const frameCropBottomOffset = expgolomb.readUE(bitReader)\n\n    let cropUnitX = 1\n    let cropUnitY = 2 - frameCroppingFlag\n\n    if (chromaFormatIdc === 1) {\n      cropUnitX = 2\n      cropUnitY = 2 * (2 - frameCroppingFlag)\n    }\n    else if (frameCroppingFlag === 2) {\n      cropUnitX = 2\n      cropUnitY = 2 - frameCroppingFlag\n    }\n\n    width -= cropUnitX * (frameCropLeftOffset + frameCropRightOffset)\n    height -= cropUnitY * (frameCropTopOffset + frameCropBottomOffset)\n  }\n\n  return {\n    profile,\n    level,\n    width,\n    height,\n    chromaFormatIdc,\n    bitDepthLumaMinus8,\n    bitDepthChromaMinus8\n  }\n}\n","/*\n * libmedia hevc util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport * as array from 'common/util/array'\nimport AVPacket, { AVPacketFlags } from 'avutil/struct/avpacket'\nimport BufferWriter from 'common/io/BufferWriter'\nimport BufferReader from 'common/io/BufferReader'\nimport { AVPacketSideDataType } from 'avutil/codec'\nimport BitReader from 'common/io/BitReader'\nimport AVStream from '../AVStream'\nimport { mapUint8Array, memcpyFromUint8Array } from 'cheap/std/memory'\nimport { naluUnescape, splitNaluByStartCode, isAnnexb } from 'avutil/util/nalu'\nimport { addAVPacketSideData, getAVPacketData } from 'avutil/util/avpacket'\nimport { avMalloc } from 'avutil/util/mem'\nimport * as expgolomb from 'avutil/util/expgolomb'\nimport { Uint8ArrayInterface } from 'common/io/interface'\n\nexport const enum HEVCProfile {\n  Main = 1,\n  Main10,\n  MainStillPicture,\n  Main444\n}\n\nexport const HEVCProfile2Name: Record<HEVCProfile, string> = {\n  [HEVCProfile.Main]: 'Main',\n  [HEVCProfile.Main10]: 'Main10',\n  [HEVCProfile.MainStillPicture]: 'MainStillPicture',\n  [HEVCProfile.Main444]: 'Main444'\n}\n\nexport const LevelCapabilities = [\n  { level: 10, maxLumaSamplesPerSecond: 552960, maxLumaPictureSize: 36864, maxBitRate: { main: 128, main10: 150 } },\n  { level: 20, maxLumaSamplesPerSecond: 3686400, maxLumaPictureSize: 122880, maxBitRate: { main: 1500, main10: 1875 } },\n  { level: 21, maxLumaSamplesPerSecond: 7372800, maxLumaPictureSize: 245760, maxBitRate: { main: 3000, main10: 3750 } },\n  { level: 30, maxLumaSamplesPerSecond: 16588800, maxLumaPictureSize: 552960, maxBitRate: { main: 6000, main10: 7500 } },\n  { level: 31, maxLumaSamplesPerSecond: 33177600, maxLumaPictureSize: 983040, maxBitRate: { main: 10000, main10: 12500 } },\n  { level: 40, maxLumaSamplesPerSecond: 66846720, maxLumaPictureSize: 2228224, maxBitRate: { main: 12000, main10: 15000 } },\n  { level: 41, maxLumaSamplesPerSecond: 133693440, maxLumaPictureSize: 2228224, maxBitRate: { main: 20000, main10: 25000 } },\n  { level: 50, maxLumaSamplesPerSecond: 267386880, maxLumaPictureSize: 8912896, maxBitRate: { main: 25000, main10: 40000 } },\n  { level: 51, maxLumaSamplesPerSecond: 534773760, maxLumaPictureSize: 8912896, maxBitRate: { main: 40000, main10: 60000 } },\n  { level: 52, maxLumaSamplesPerSecond: 1069547520, maxLumaPictureSize: 35651584, maxBitRate: { main: 60000, main10: 100000 } },\n  { level: 60, maxLumaSamplesPerSecond: 1069547520, maxLumaPictureSize: 35651584, maxBitRate: { main: 60000, main10: 100000 } },\n  { level: 61, maxLumaSamplesPerSecond: 2139095040, maxLumaPictureSize: 89128960, maxBitRate: { main: 120000, main10: 240000 } },\n  { level: 62, maxLumaSamplesPerSecond: 4278190080, maxLumaPictureSize: 356515840, maxBitRate: { main: 240000, main10: 480000 } }\n]\n\nexport function getLevelByResolution(profile: number, width: number, height: number, fps: number, bitrate: number) {\n\n  bitrate /= 1000\n\n  const selectedProfile = profile === HEVCProfile.Main ? 'main' : 'main10'\n  const lumaSamplesPerSecond = width * height * fps\n  for (const level of LevelCapabilities) {\n    if (lumaSamplesPerSecond <= level.maxLumaSamplesPerSecond && width * height <= level.maxLumaPictureSize && bitrate <= level.maxBitRate[selectedProfile]) {\n      return level.level\n    }\n  }\n}\n\nconst NALULengthSizeMinusOne = 3\n\nexport const enum HEVCNaluType {\n  kSliceTRAIL_N = 0,\n  kSliceTRAIL_R = 1,\n  kSliceTSA_N = 2,\n  kSliceTSA_R = 3,\n  kSliceSTSA_N = 4,\n  kSliceSTSA_R = 5,\n  kSliceRADL_N = 6,\n  kSliceRADL_R = 7,\n  kSliceRASL_N = 8,\n  kSliceRASL_R = 9,\n  kSliceBLA_W_LP = 16,\n  kSliceBLA_W_RADL = 17,\n  kSliceBLA_N_LP = 18,\n  kSliceIDR_W_RADL = 19,\n  kSliceIDR_N_LP = 20,\n  kSliceCRA_NUT = 21,\n  kSliceVPS = 32,\n  kSliceSPS = 33,\n  kSlicePPS = 34,\n  kSliceAUD = 35,\n  kSliceEOS_NUT = 36,\n  kSliceEOB_NUT = 37,\n  kSliceFD_NUT = 38,\n  kSliceSEI_PREFIX = 39,\n  kSliceSEI_SUFFIX = 40\n}\n\n/**\n * \n * avcc 格式的 extradata 转 annexb vps sps pps\n * \n * bits    \n * - 8   configurationVersion( 固定   1)\n * - 2   general_profile_space\n * - 1   general_tier_flag\n * - 5   general_profile_idc\n * - 32  general_profile_compatibility_flags\n * - 48  general_constraint_indicator_flags (6 个 字节）\n * - 8   general_level_idc\n * - 4   reserved1 (1111)\n * - 4   min_spatial_segmentation_idc_L\n * - 8   min_spatial_segmentation_idc_H\n * - 6   reserved2 (111111)\n * - 2   parallelismType\n * - 6   reserved3 (111111)\n * - 2   chromaFormat\n * - 5   reserved4 (11111)\n * - 3   bitDepthLumaMinus8\n * - 5   reserved5(11111)\n * - 3   bitDepthChromaMinus8\n * - 16  avgFrameRate\n * - 2   constantFrameRate\n * - 3   numTemporalLayers\n * - 1   temporalIdNested\n * - 2   lengthSizeMinusOne\n * - 8   numOfArrays\n * - repeated of array (vps/sps/pps)\n * - 1   array_completeness\n * - 1   reserved (0)\n * - 6   NAL_unit_type\n * - 16  numNalus\n * - repeated once per NAL\n * - 16  nalUnitLength\n * - N   NALU data\n * \n */\nexport function extradata2VpsSpsPps(extradata: Uint8ArrayInterface) {\n  const bufferReader = new BufferReader(extradata, true)\n  bufferReader.skip(22)\n\n  let vpss = []\n  let spss = []\n  let ppss = []\n\n  const arrayLen = bufferReader.readUint8()\n\n  for (let i = 0; i < arrayLen; i++) {\n    const naluType = bufferReader.readUint8() & 0x3f\n    const count = bufferReader.readUint16()\n    const list = []\n\n    for (let j = 0; j < count; j++) {\n      const len = bufferReader.readUint16()\n      list.push(bufferReader.readBuffer(len))\n    }\n\n    if (naluType === HEVCNaluType.kSliceVPS) {\n      vpss = list\n    }\n    else if (naluType === HEVCNaluType.kSliceSPS) {\n      spss = list\n    }\n    else if (naluType === HEVCNaluType.kSlicePPS) {\n      ppss = list\n    }\n  }\n\n  return {\n    vpss,\n    spss,\n    ppss\n  }\n}\n\nexport function vpsSpsPps2Extradata(vpss: Uint8ArrayInterface[], spss: Uint8ArrayInterface[], ppss: Uint8ArrayInterface[]) {\n\n  const sps = spss[0]\n\n  let length = 23\n\n\n  if (vpss.length) {\n    // type + count\n    length += 3\n    length = vpss.reduce((prev, value) => {\n      // length + data\n      return prev + 2 + value.length\n    }, length)\n  }\n\n  if (spss.length) {\n    // type + count\n    length += 3\n    length = spss.reduce((prev, value) => {\n      // length + data\n      return prev + 2 + value.length\n    }, length)\n  }\n\n  if (ppss.length) {\n    // type + count\n    length += 3\n    length = ppss.reduce((prev, value) => {\n      // length + data\n      return prev + 2 + value.length\n    }, length)\n  }\n\n  const buffer = new Uint8Array(length)\n  const bufferWriter = new BufferWriter(buffer, true)\n  const spsData = parserSPS(sps)\n\n  bufferWriter.writeUint8(0x01)\n  bufferWriter.writeUint8(sps[1])\n  bufferWriter.writeUint8(sps[2])\n  bufferWriter.writeUint8(sps[3])\n  bufferWriter.writeUint8(sps[4])\n  bufferWriter.writeUint8(sps[5])\n\n  // general_constraint_indicator_flags\n  bufferWriter.writeUint8(sps[6])\n  bufferWriter.writeUint8(sps[7])\n  bufferWriter.writeUint8(sps[8])\n  bufferWriter.writeUint8(sps[9])\n  bufferWriter.writeUint8(sps[10])\n  bufferWriter.writeUint8(sps[11])\n\n  bufferWriter.writeUint8(spsData.level)\n\n  // min_spatial_segmentation_idc\n  bufferWriter.writeUint8((0xff << 2) | 0)\n  bufferWriter.writeUint8(0)\n\n  // parallelismType\n  bufferWriter.writeUint8((0xff << 6) | 0)\n\n  // chromaFormat\n  bufferWriter.writeUint8((0xff << 6) | spsData.chromaFormatIdc)\n\n  // bitDepthLumaMinus8\n  bufferWriter.writeUint8((0xff << 5) | spsData.bitDepthLumaMinus8)\n\n  // bitDepthChromaMinus8\n  bufferWriter.writeUint8((0xff << 5) | spsData.bitDepthChromaMinus8)\n\n  // avgFrameRate\n  bufferWriter.writeUint16(0)\n\n  // constantFrameRate numTemporalLayers temporalIdNested lengthSizeMinusOne\n  bufferWriter.writeUint8((0 << 6) | (1 << 3) | ((sps[0] & 0x01) << 2) | NALULengthSizeMinusOne)\n\n  // numOfArrays\n  let numOfArrays = 0\n  if (vpss.length) {\n    numOfArrays++\n  }\n  if (spss.length) {\n    numOfArrays++\n  }\n  if (ppss.length) {\n    numOfArrays++\n  }\n  bufferWriter.writeUint8(numOfArrays)\n\n  // vps\n  if (vpss.length) {\n    bufferWriter.writeUint8((1 << 7) | HEVCNaluType.kSliceVPS)\n    bufferWriter.writeUint16(vpss.length)\n    array.each(vpss, (vps) => {\n      bufferWriter.writeUint16(vps.length)\n      bufferWriter.writeBuffer(vps)\n    })\n  }\n\n  // sps\n  if (spss.length) {\n    bufferWriter.writeUint8((1 << 7) | HEVCNaluType.kSliceSPS)\n    bufferWriter.writeUint16(spss.length)\n    array.each(spss, (sps) => {\n      bufferWriter.writeUint16(sps.length)\n      bufferWriter.writeBuffer(sps)\n    })\n  }\n\n  // pps\n  if (ppss.length) {\n    bufferWriter.writeUint8((1 << 7) | HEVCNaluType.kSlicePPS)\n    bufferWriter.writeUint16(ppss.length)\n    array.each(ppss, (pps) => {\n      bufferWriter.writeUint16(pps.length)\n      bufferWriter.writeBuffer(pps)\n    })\n  }\n\n  return buffer\n}\n\nexport function annexbExtradata2AvccExtradata(data: Uint8ArrayInterface) {\n  let nalus = splitNaluByStartCode(data)\n\n  if (nalus.length > 2) {\n    const vpss = []\n    const spss = []\n    const ppss = []\n\n    nalus.forEach((nalu) => {\n      const type = (nalu[0] >>> 1) & 0x3f\n      if (type === HEVCNaluType.kSliceVPS) {\n        vpss.push(nalu)\n      }\n      else if (type === HEVCNaluType.kSliceSPS) {\n        spss.push(nalu)\n      }\n      else if (type === HEVCNaluType.kSlicePPS) {\n        ppss.push(nalu)\n      }\n    })\n\n    if (vpss.length && spss.length && ppss.length) {\n      return vpsSpsPps2Extradata(vpss, spss, ppss)\n    }\n  }\n}\n\n/**\n * \n * annexb 格式的 NALU 转 avcc NALU \n * \n */\nexport function annexb2Avcc(data: Uint8ArrayInterface) {\n\n  let extradata: Uint8Array\n  let key: boolean = false\n\n  let nalus = splitNaluByStartCode(data)\n\n  if (nalus.length > 2) {\n    const vpss = []\n    const spss = []\n    const ppss = []\n\n    nalus.forEach((nalu) => {\n      const type = (nalu[0] >>> 1) & 0x3f\n      if (type === HEVCNaluType.kSliceVPS) {\n        vpss.push(nalu)\n      }\n      else if (type === HEVCNaluType.kSliceSPS) {\n        spss.push(nalu)\n      }\n      else if (type === HEVCNaluType.kSlicePPS) {\n        ppss.push(nalu)\n      }\n    })\n\n    if (vpss.length && spss.length && ppss.length) {\n      extradata = vpsSpsPps2Extradata(vpss, spss, ppss)\n\n      nalus = nalus.filter((nalu) => {\n        const type = (nalu[0] >>> 1) & 0x3f\n        return type !== HEVCNaluType.kSliceVPS\n          && type !== HEVCNaluType.kSliceSPS\n          && type !== HEVCNaluType.kSlicePPS\n          && type !== HEVCNaluType.kSliceAUD\n      })\n    }\n  }\n\n  const length = nalus.reduce((prev, nalu) => {\n    return prev + NALULengthSizeMinusOne + 1 + nalu.length\n  }, 0)\n\n  const bufferPointer = avMalloc(length)\n  const buffer = mapUint8Array(bufferPointer, length)\n\n  const bufferWriter = new BufferWriter(buffer)\n\n  array.each(nalus, (nalu) => {\n    if (NALULengthSizeMinusOne === 3) {\n      bufferWriter.writeUint32(nalu.length)\n    }\n    else if (NALULengthSizeMinusOne === 2) {\n      bufferWriter.writeUint24(nalu.length)\n    }\n    else if (NALULengthSizeMinusOne === 1) {\n      bufferWriter.writeUint16(nalu.length)\n    }\n    else {\n      bufferWriter.writeUint8(nalu.length)\n    }\n    bufferWriter.writeBuffer(nalu.subarray(0))\n\n    const type = (nalu[0] >>> 1) & 0x3f\n    if (type === HEVCNaluType.kSliceIDR_W_RADL\n      || type === HEVCNaluType.kSliceIDR_N_LP\n      || type === HEVCNaluType.kSliceCRA_NUT\n    ) {\n      key = true\n    }\n  })\n\n  return {\n    bufferPointer,\n    length,\n    extradata,\n    key\n  }\n}\n\n/**\n * avcc 格式的 NALU 转 annexb NALU \n * \n */\nexport function avcc2Annexb(data: Uint8ArrayInterface, extradata?: Uint8ArrayInterface) {\n  const naluLengthSizeMinusOne = extradata ? (extradata[21] & 0x03) : NALULengthSizeMinusOne\n\n  let vpss = []\n  let spss = []\n  let ppss = []\n  let key = false\n\n  if (extradata) {\n    const result = extradata2VpsSpsPps(extradata)\n    vpss = result.vpss\n    spss = result.spss\n    ppss = result.ppss\n    key = true\n  }\n\n  const nalus = []\n\n  const bufferReader = new BufferReader(data)\n  while (bufferReader.remainingSize() > 0) {\n    let length = 0\n    if (naluLengthSizeMinusOne === 3) {\n      length = bufferReader.readUint32()\n    }\n    else if (naluLengthSizeMinusOne === 2) {\n      length = bufferReader.readUint24()\n    }\n    else if (naluLengthSizeMinusOne === 1) {\n      length = bufferReader.readUint16()\n    }\n    else {\n      length = bufferReader.readUint8()\n    }\n    nalus.push(bufferReader.readBuffer(length))\n  }\n\n  let length = vpss.reduce((prev, vps) => {\n    return prev + 4 + vps.length\n  }, 0)\n  length = spss.reduce((prev, sps) => {\n    return prev + 4 + sps.length\n  }, length)\n  length = ppss.reduce((prev, pps) => {\n    return prev + 4 + pps.length\n  }, length)\n  length = nalus.reduce((prev, nalu, index) => {\n    return prev + (index ? 3 : 4) + nalu.length\n  }, length)\n\n  const bufferPointer = avMalloc(length + 7)\n  const buffer = mapUint8Array(bufferPointer, length + 7)\n\n  const bufferWriter = new BufferWriter(buffer)\n\n  // AUD\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(0x01)\n  bufferWriter.writeUint8(HEVCNaluType.kSliceAUD << 1)\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(0xf0)\n\n  array.each(vpss, (vps) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(vps)\n  })\n\n  array.each(spss, (sps) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(sps)\n  })\n\n  array.each(ppss, (pps) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(pps)\n  })\n\n  array.each(nalus, (nalu, index) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    if (!index) {\n      bufferWriter.writeUint8(0x00)\n    }\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(nalu)\n\n    const type = (nalu[0] >>> 1) & 0x3f\n    if (type === HEVCNaluType.kSliceIDR_W_RADL\n      || type === HEVCNaluType.kSliceIDR_N_LP\n      || type === HEVCNaluType.kSliceCRA_NUT\n    ) {\n      key = true\n    }\n  })\n\n  return {\n    bufferPointer,\n    length: length + 7,\n    key\n  }\n}\n\nexport function parseAvccExtraData(avpacket: pointer<AVPacket>, stream: AVStream) {\n\n  if (!(avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY)) {\n    return\n  }\n\n  const data = getAVPacketData(avpacket)\n\n  if (isAnnexb(data)) {\n    return\n  }\n\n  const naluLengthSizeMinusOne = stream.metadata.naluLengthSizeMinusOne ?? NALULengthSizeMinusOne\n\n  let vpss = []\n  let spss = []\n  let ppss = []\n\n  const bufferReader = new BufferReader(data)\n  while (bufferReader.remainingSize() > 0) {\n    let length = 0\n    if (naluLengthSizeMinusOne === 3) {\n      length = bufferReader.readUint32()\n    }\n    else if (naluLengthSizeMinusOne === 2) {\n      length = bufferReader.readUint24()\n    }\n    else if (naluLengthSizeMinusOne === 1) {\n      length = bufferReader.readUint16()\n    }\n    else {\n      length = bufferReader.readUint8()\n    }\n\n    const nalu = data.subarray(static_cast<int32>(bufferReader.getPos()), static_cast<int32>(bufferReader.getPos()) + length)\n    bufferReader.skip(length)\n\n    const naluType = (nalu[0] >>> 1) & 0x3f\n\n    if (naluType === HEVCNaluType.kSliceSPS) {\n      spss.push(nalu)\n    }\n    else if (naluType === HEVCNaluType.kSlicePPS) {\n      ppss.push(nalu)\n    }\n    else if (naluType === HEVCNaluType.kSliceVPS) {\n      vpss.push(nalu)\n    }\n  }\n\n  if (spss.length || ppss.length || vpss.length) {\n    const extradata = vpsSpsPps2Extradata(vpss, spss, ppss)\n    const extradataPointer = avMalloc(extradata.length)\n    memcpyFromUint8Array(extradataPointer, extradata.length, extradata)\n    addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, extradataPointer, extradata.length)\n  }\n}\n\nexport function parseAnnexbExtraData(avpacket: pointer<AVPacket>, force: boolean = false) {\n  if (!(avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY) && !force) {\n    return\n  }\n\n  const data = getAVPacketData(avpacket)\n\n  if (!isAnnexb(data)) {\n    return\n  }\n\n  let nalus = splitNaluByStartCode(data)\n\n  if (nalus.length > 2) {\n    const vpss = []\n    const spss = []\n    const ppss = []\n\n    nalus.forEach((nalu) => {\n      const type = (nalu[0] >>> 1) & 0x3f\n      if (type === HEVCNaluType.kSliceVPS) {\n        vpss.push(nalu)\n      }\n      else if (type === HEVCNaluType.kSliceSPS) {\n        spss.push(nalu)\n      }\n      else if (type === HEVCNaluType.kSlicePPS) {\n        ppss.push(nalu)\n      }\n    })\n\n    if (vpss.length && spss.length && ppss.length) {\n      const extradata = vpsSpsPps2Extradata(vpss, spss, ppss)\n      const extradataPointer = avMalloc(extradata.length)\n      memcpyFromUint8Array(extradataPointer, extradata.length, extradata)\n      addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, extradataPointer, extradata.length)\n      avpacket.flags |= AVPacketFlags.AV_PKT_FLAG_KEY\n    }\n  }\n}\n\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\n  }\n  if (extradata && extradata.length >= 6) {\n\n    stream.metadata.naluLengthSizeMinusOne = (extradata[21] & 0x03)\n\n    const { spss } = extradata2VpsSpsPps(extradata)\n\n    if (spss.length) {\n      const { profile, level, width, height } = parserSPS(spss[0])\n\n      stream.codecpar.profile = profile\n      stream.codecpar.level = level\n      stream.codecpar.width = width\n      stream.codecpar.height = height\n    }\n  }\n}\n\nexport function parserSPS(sps: Uint8ArrayInterface) {\n\n  if (!sps || sps.length < 3) {\n    return\n  }\n\n  let offset = 0\n  if (sps[0] === 0x00\n    && sps[1] === 0x00\n    && sps[2] === 0x00\n    && sps[3] === 0x01\n  ) {\n    offset = 4\n  }\n\n  let profile = 0\n  let level = 0\n  let width = 0\n  let height = 0\n  let bitDepthLumaMinus8 = 0\n  let bitDepthChromaMinus8 = 0\n  let chromaFormatIdc = 1\n  let generalProfileSpace = 0\n  let generalTierFlag = 0\n  let generalProfileCompatibilityFlag = 0\n  let constraintFlags = 0\n\n  const buffer = naluUnescape(sps.subarray(offset))\n  const bitReader = new BitReader(buffer.length)\n  bitReader.appendBuffer(buffer)\n\n  // forbidden_zero_bit\n  bitReader.readU1()\n\n  // nalu type\n  bitReader.readU(6)\n\n  // layerId\n  bitReader.readU(6)\n\n  // tid\n  bitReader.readU(3)\n\n  // sps_video_parameter_set_id\n  bitReader.readU(4)\n\n  // The value of sps_max_sub_layers_minus1 shall be in the range of 0 to 6, inclusive.\n  const spsMaxSubLayersMinus1 = bitReader.readU(3)\n\n  // sps_temporal_id_nesting_flag\n  bitReader.readU1()\n\n  if (spsMaxSubLayersMinus1 <= 6) {\n    // profile_tier_level(sps_max_sub_layers_minus1)\n\n    // general_profile_space\n    generalProfileSpace = bitReader.readU(2)\n    // general_tier_flag\n    generalTierFlag = bitReader.readU1()\n    // general_profile_idc\n    profile = bitReader.readU(5)\n    // general_profile_compatibility_flag[32]\n    generalProfileCompatibilityFlag = bitReader.readU(32)\n\n    /**\n     * 1 general_progressive_source_flag\n     * 1 general_interlaced_source_flag\n     * 1 general_non_packed_constraint_flag\n     * 1 general_frame_only_constraint_flag\n     * 44 general_reserved_zero_44bits\n     */\n    constraintFlags = bitReader.readU(48)\n\n    // general_level_idc\n    level = bitReader.readU(8)\n\n    const subLayerProfilePresentFlag = new Array(6)\n    const subLayerLevelPresentFlag = new Array(6)\n    for (let i = 0; i < spsMaxSubLayersMinus1; i++) {\n      subLayerProfilePresentFlag[i] = bitReader.readU1()\n      subLayerLevelPresentFlag[i] = bitReader.readU1()\n    }\n\n    if (spsMaxSubLayersMinus1 > 0) {\n      for (let i = spsMaxSubLayersMinus1; i < 8; i++) {\n        // reserved_zero_2bits\n        bitReader.readU(2)\n      }\n    }\n\n    for (let i = 0; i < spsMaxSubLayersMinus1; i++) {\n      if (subLayerProfilePresentFlag[i]) {\n        // sub_layer_profile_space[i]\n        bitReader.readU(2)\n        // sub_layer_tier_flag[i]\n        bitReader.readU(1)\n        // sub_layer_profile_idc[i]\n        bitReader.readU(5)\n        // sub_layer_profile_compatibility_flag[i][32]\n        bitReader.readU(32)\n        // sub_layer_progressive_source_flag[i]\n        bitReader.readU(1)\n        // sub_layer_interlaced_source_flag[i]\n        bitReader.readU(1)\n        // sub_layer_non_packed_constraint_flag[i]\n        bitReader.readU(1)\n        // sub_layer_frame_only_constraint_flag[i]\n        bitReader.readU(1)\n        // sub_layer_reserved_zero_44bits[i]\n        bitReader.readU(44)\n      }\n\n      if (subLayerLevelPresentFlag[i]) {\n        // sub_layer_level_idc[i]\n        bitReader.readU(8)\n      }\n    }\n\n    // \"The  value  of sps_seq_parameter_set_id shall be in the range of 0 to 15, inclusive.\"\n    expgolomb.readUE(bitReader)\n    chromaFormatIdc = expgolomb.readUE(bitReader)\n\n    if (chromaFormatIdc === 3) {\n      // separate_colour_plane_flag\n      bitReader.readU(1)\n    }\n\n    width = expgolomb.readUE(bitReader)\n    height = expgolomb.readUE(bitReader)\n\n    const conformanceWindowFlag = bitReader.readU1()\n\n    let confWinLeftOffset = 0\n    let confWinRightOffset = 0\n    let confWinTopOffset = 0\n    let confWinBottomOffset = 0\n\n    if (conformanceWindowFlag) {\n      confWinLeftOffset = expgolomb.readUE(bitReader)\n      confWinRightOffset = expgolomb.readUE(bitReader)\n      confWinTopOffset = expgolomb.readUE(bitReader)\n      confWinBottomOffset = expgolomb.readUE(bitReader)\n    }\n\n    bitDepthLumaMinus8 = expgolomb.readUE(bitReader)\n    bitDepthChromaMinus8 = expgolomb.readUE(bitReader)\n\n\n    let SubWidthC = 2\n    let SubHeightC = 2\n\n    if (chromaFormatIdc === 0) {\n      SubWidthC = SubHeightC = 0\n    }\n    else if (chromaFormatIdc === 2) {\n      SubWidthC = 2\n      SubHeightC = 1\n    }\n    else if (chromaFormatIdc === 3) {\n      SubWidthC = SubHeightC = 1\n    }\n\n    const cropUnitX = SubWidthC * (1 << (bitDepthLumaMinus8 + 1))\n    const cropUnitY = SubHeightC * (1 << (bitDepthLumaMinus8 + 1))\n\n    width -= cropUnitX * (confWinLeftOffset + confWinRightOffset)\n    height -= cropUnitY * (confWinTopOffset + confWinBottomOffset)\n  }\n\n\n  return {\n    profile,\n    level,\n    width,\n    height,\n    chromaFormatIdc,\n    bitDepthLumaMinus8,\n    bitDepthChromaMinus8,\n    generalProfileSpace,\n    generalTierFlag,\n    generalProfileCompatibilityFlag,\n    constraintFlags\n  }\n}\n","/*\n * libmedia mp3 util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { Uint8ArrayInterface } from 'common/io/interface'\nimport AVStream from '../AVStream'\nimport { NOPTS_VALUE } from 'avutil/constant'\n\nconst MpegAudioV10SampleRateTable = [44100, 48000, 32000, 0]\n\nconst MpegAudioV20SampleRateTable = [22050, 24000, 16000, 0]\n\nconst MpegAudioV25SampleRateTable = [11025, 12000, 8000, 0]\n\nconst MpegAudioV10FrameSizeTable = [0, 1152, 1152, 384]\n\nconst MpegAudioV20FrameSizeTable = [0, 576, 1152, 384]\n\nconst MpegAudioV25FrameSizeTable = [0, 576, 1152, 384]\n\nconst MpegAudioV1L1BitRateTable = [0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1]\n\nconst MpegAudioV1L2BitRateTable = [0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, -1]\n\nconst MpegAudioV1L3BitRateTable = [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1]\n\nconst MpegAudioV2L1BitRateTable = [0, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, -1]\n\nconst MpegAudioV2L2L3BitRateTable = [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1]\n\nexport function getSampleRateByVersionIndex(version: number, samplingFreqIndex: number) {\n  switch (version) {\n    case 0:\n      // MPEG 2.5\n      return MpegAudioV25SampleRateTable[samplingFreqIndex]\n    case 2:\n      // MPEG 2\n      return MpegAudioV20SampleRateTable[samplingFreqIndex]\n    case 3:\n      // MPEG 1\n      return MpegAudioV10SampleRateTable[samplingFreqIndex]\n  }\n  return NOPTS_VALUE\n}\n\nexport function getFrameSizeByVersionLayer(version: number, layer: number) {\n  switch (version) {\n    case 0:\n      // MPEG 2.5\n      return MpegAudioV25FrameSizeTable[layer]\n    case 2:\n      // MPEG 2\n      return MpegAudioV20FrameSizeTable[layer]\n    case 3:\n      // MPEG 1\n      return MpegAudioV10FrameSizeTable[layer]\n  }\n  return NOPTS_VALUE\n}\n\nexport function getBitRateByVersionLayerIndex(version: number, layer: number, index: number) {\n\n  switch (layer) {\n    // layer3\n    case 1:\n      switch (version) {\n        case 0:\n        case 2:\n          return MpegAudioV2L2L3BitRateTable[index]\n        case 3:\n          return MpegAudioV1L3BitRateTable[index]\n      }\n      break\n    // layer2\n    case 2:\n      switch (version) {\n        case 0:\n        case 2:\n          return MpegAudioV2L2L3BitRateTable[index]\n        case 3:\n          return MpegAudioV1L2BitRateTable[index]\n      }\n    // layer1\n    case 3:\n      switch (version) {\n        case 0:\n        case 2:\n          return MpegAudioV2L1BitRateTable[index]\n        case 3:\n          return MpegAudioV1L1BitRateTable[index]\n      }\n  }\n  return NOPTS_VALUE\n}\n\nexport function getProfileByLayer(layer: number) {\n  switch (layer) {\n    case 1:\n      // Layer 3\n      return 34\n    case 2:\n      // Layer 2\n      return 33\n    case 3:\n      // Layer 1\n      return 32\n  }\n  return NOPTS_VALUE\n}\n\nexport const enum MP3Profile {\n  Layer1 = 32,\n  Layer2 = 33,\n  Layer3 = 34\n}\n\nexport const MP3Profile2Name: Record<MP3Profile, string> = {\n  [MP3Profile.Layer1]: 'Layer1',\n  [MP3Profile.Layer2]: 'Layer2',\n  [MP3Profile.Layer3]: 'Layer3'\n}\n\n\nexport function parseAVCodecParameters(stream: AVStream, buffer: Uint8ArrayInterface) {\n  if (buffer && buffer.length >= 4) {\n    const ver = (buffer[1] >>> 3) & 0x03\n    const layer = (buffer[1] & 0x06) >> 1\n    // const bitrateIndex = (buffer[2] & 0xF0) >>> 4\n    const samplingFreqIndex = (buffer[2] & 0x0C) >>> 2\n\n    const channelMode = (buffer[3] >>> 6) & 0x03\n\n    const channelCount = channelMode !== 3 ? 2 : 1\n    const profile = getProfileByLayer(layer)\n    const sampleRate = getSampleRateByVersionIndex(ver, samplingFreqIndex)\n\n    stream.codecpar.profile = profile\n    stream.codecpar.sampleRate = sampleRate\n    stream.codecpar.chLayout.nbChannels = channelCount\n  }\n}\n","/*\n * libmedia opus util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { AVPacketSideDataType } from 'avutil/codec'\nimport AVStream from '../AVStream'\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\nimport BufferReader from 'common/io/BufferReader'\nimport BufferWriter from 'common/io/BufferWriter'\nimport { avRescaleQ } from 'avutil/util/rational'\nimport { Uint8ArrayInterface } from 'common/io/interface'\n\nexport const durations = [\n  /* Silk NB */\n  480, 960, 1920, 2880,\n  /* Silk MB */\n  480, 960, 1920, 2880,\n  /* Silk WB */\n  480, 960, 1920, 2880,\n  /* Hybrid SWB */\n  480, 960,\n  /* Hybrid FB */\n  480, 960,\n  /* CELT NB */\n  120, 240, 480, 960,\n  /* CELT NB */\n  120, 240, 480, 960,\n  /* CELT NB */\n  120, 240, 480, 960,\n  /* CELT NB */\n  120, 240, 480, 960\n]\n\n\nexport function getBufferSamples(buffer: Uint8Array) {\n  let toc = 0, frameDuration = 0, nframes = 0\n\n  if (buffer.length < 1) {\n    return 0\n  }\n\n  toc = buffer[0]\n\n  frameDuration = durations[toc >> 3]\n\n  switch (toc & 3) {\n    case 0:\n      nframes = 1\n      break\n    case 1:\n      nframes = 2\n      break\n    case 2:\n      nframes = 2\n      break\n    case 3:\n      if (buffer.length < 2) {\n        return 0\n      }\n      nframes = buffer[1] & 63\n      break\n  }\n  return nframes * frameDuration\n}\n\n/**\n * opus extradata\n * \n * - 8 bytes Magic Signature: OpusHead\n * - 1 bytes unsigned, 对应值 0x01 version\n * - 1 bytes unsigned, channels 它可能和编码声道数不一致， 它可能被修改成 packet-by-packet, 对应值 0x01\n * - 2 bytes unsigned, preSkip 这是要从开始播放时的解码器输出， 从页面的颗粒位置减去以计算其 PCM 样本位置。\n * - 4 bytes unsigned, sampleRate 原始输入采样率\n * - 2 bytes signed, outputGain 这是解码时要应用的增益， 20 * log10 缩放解码器输出以实现所需的播放音量\n * - 1 bytes unsigned, channelMappingFamily 指示输出渠道的顺序和语音含义。该八位位组的每个当前指定的值表示一个映射系列，它定义了一组允许的通道数，以及每个允许的通道数的通道名称的有序集合\n * - channelMappingTable 可选， 当 Channel Mapping Family 为 0 时被省略。\n *  - 1 bytes, streamCount, unsigned ogg packet 里面编码了多少路 stream\n *  - 1 bytes, coupledStreamCount, unsigned 标识有多少路流是双声声道，必须小于 streamCount\n *  - C bytes, C 为总输出声道数 coupledStreamCount + streamCount\n * \n */\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\n  }\n  if (extradata && extradata.length >= 19) {\n    const reader = new BufferReader(extradata, false)\n    reader.skip(9)\n    stream.codecpar.chLayout.nbChannels = reader.readUint8()\n    stream.codecpar.initialPadding = reader.readUint16()\n    stream.codecpar.sampleRate = reader.readUint32()\n\n    stream.codecpar.seekPreroll = Number(avRescaleQ(\n      80n,\n      {\n        den: 1000,\n        num: 1\n      },\n      {\n        den: 48000,\n        num: 1\n      }\n    ))\n  }\n}\n\nexport function avCodecParameters2Extradata(codecpar: AVCodecParameters) {\n  const extradata = new Uint8Array(19)\n\n  const writer = new BufferWriter(extradata, false)\n\n  writer.writeString('OpusHead')\n  writer.writeUint8(0x01)\n  writer.writeUint8(codecpar.chLayout.nbChannels)\n  writer.writeUint16(codecpar.initialPadding)\n  writer.writeUint32(codecpar.sampleRate)\n\n  return extradata\n}\n","/*\n * libmedia vp9 util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport AVStream from '../AVStream'\nimport { AVPacketSideDataType } from 'avutil/codec'\nimport { Uint8ArrayInterface } from 'common/io/interface'\nimport BitReader from 'common/io/BitReader'\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\nimport { NOPTS_VALUE } from 'avutil/constant'\nimport { PixelFormatDescriptorsMap } from 'avutil/pixelFormatDescriptor'\nimport { avQ2D } from 'avutil/util/rational'\nimport { AVChromaLocation, AVColorRange } from 'avutil/pixfmt'\nimport BufferWriter from 'common/io/BufferWriter'\n\nexport const enum VP9Profile {\n  Profile0,\n  Profile1,\n  Profile2,\n  Profile3\n}\n\nexport const VP9Profile2Name: Record<VP9Profile, string> = {\n  [VP9Profile.Profile0]: 'Profile0',\n  [VP9Profile.Profile1]: 'Profile1',\n  [VP9Profile.Profile2]: 'Profile2',\n  [VP9Profile.Profile3]: 'Profile3'\n}\n\nexport const LevelCapabilities = [\n  { level: 10, maxResolution: 512 * 384, maxFrameRate: 30 },\n  { level: 11, maxResolution: 512 * 384, maxFrameRate: 60 },\n  { level: 20, maxResolution: 960 * 540, maxFrameRate: 30 },\n  { level: 21, maxResolution: 960 * 540, maxFrameRate: 60 },\n  { level: 30, maxResolution: 1920 * 1080, maxFrameRate: 30 },\n  { level: 31, maxResolution: 1920 * 1080, maxFrameRate: 60 },\n  { level: 40, maxResolution: 2560 * 1440, maxFrameRate: 30 },\n  { level: 41, maxResolution: 2560 * 1440, maxFrameRate: 60 },\n  { level: 50, maxResolution: 3840 * 2160, maxFrameRate: 30 },\n  { level: 51, maxResolution: 3840 * 2160, maxFrameRate: 60 },\n  { level: 60, maxResolution: 4096 * 2160, maxFrameRate: 30 },\n  { level: 61, maxResolution: 4096 * 2160, maxFrameRate: 60 },\n  { level: 70, maxResolution: 8192 * 4320, maxFrameRate: 30 },\n  { level: 71, maxResolution: 8192 * 4320, maxFrameRate: 60 }\n]\n\nexport function getLevelByResolution(width: number, height: number, fps: number) {\n  const resolution = width * height;\n  for (const level of LevelCapabilities) {\n    if (resolution <= level.maxResolution && fps <= level.maxFrameRate) {\n      return level.level\n    }\n  }\n}\n\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\n  }\n  if (extradata && extradata.length >= 6) {\n    const params = parseExtraData(extradata)\n    stream.codecpar.profile = params.profile\n    stream.codecpar.level = params.level\n  }\n}\n\n/**\n * - 1 byte profile\n * - 1 byte level\n * - 4 bit bitdepth\n * - 3 bit chroma_subsampling\n * - 1 bit full_range_flag\n * - 1 byte color_primaries\n * - 1 byte color_trc\n * - 1 byte color_space\n * \n * @param extradata \n */\nexport function parseExtraData(extradata: Uint8ArrayInterface) {\n  const bitReader = new BitReader(extradata.length)\n  bitReader.appendBuffer(extradata)\n  const profile = bitReader.readU(8)\n  const level = bitReader.readU(8)\n  let bitDepth = bitReader.readU(4)\n  const chromaSubsampling = bitReader.readU(3)\n  const fullRangeFlag = bitReader.readU1()\n  const colorPrimaries = bitReader.readU(8)\n  const colorTrc = bitReader.readU(8)\n  const colorSpace = bitReader.readU(8)\n\n  return {\n    profile,\n    level,\n    bitDepth,\n    chromaSubsampling,\n    fullRangeFlag,\n    colorPrimaries,\n    colorTrc,\n    colorSpace\n  }\n}\n\nconst enum VPX_CHROMA_SUBSAMPLING {\n  VPX_SUBSAMPLING_420_VERTICAL = 0,\n  VPX_SUBSAMPLING_420_COLLOCATED_WITH_LUMA = 1,\n  VPX_SUBSAMPLING_422 = 2,\n  VPX_SUBSAMPLING_444 = 3\n}\n\nfunction getVpccFeature(codecpar: pointer<AVCodecParameters>) {\n  let profile = codecpar.profile\n  let level = codecpar.level\n  if (level === NOPTS_VALUE) {\n    level = getLevelByResolution(codecpar.width, codecpar.height, avQ2D(codecpar.framerate))\n  }\n  const desc = PixelFormatDescriptorsMap[codecpar.format]\n\n  let bitDepth = codecpar.bitsPerCodedSample\n  let chromaSubsampling = VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_420_COLLOCATED_WITH_LUMA\n  if (desc) {\n    bitDepth = desc.comp[0].depth\n    if (desc.log2ChromaW === 1 && desc.log2ChromaH === 1) {\n      if (codecpar.chromaLocation === AVChromaLocation.AVCHROMA_LOC_LEFT) {\n        chromaSubsampling = VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_420_VERTICAL\n      }\n    }\n    else if (desc.log2ChromaW === 1 && desc.log2ChromaH === 0) {\n      chromaSubsampling = VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_422\n    }\n    else if (desc.log2ChromaW === 0 && desc.log2ChromaH === 0) {\n      chromaSubsampling = VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_444\n    }\n  }\n  const fullRange = codecpar.colorRange === AVColorRange.AVCOL_RANGE_JPEG ? 1 : 0\n\n  if (profile === NOPTS_VALUE && bitDepth) {\n    if (chromaSubsampling == VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_420_VERTICAL\n      || chromaSubsampling == VPX_CHROMA_SUBSAMPLING.VPX_SUBSAMPLING_420_COLLOCATED_WITH_LUMA\n    ) {\n      profile = (bitDepth == 8) ? VP9Profile.Profile0 : VP9Profile.Profile2\n    }\n    else {\n      profile = (bitDepth == 8) ? VP9Profile.Profile1 : VP9Profile.Profile3\n    }\n  }\n  return {\n    profile,\n    level,\n    bitDepth,\n    chromaSubsampling,\n    fullRange\n  }\n}\n\nexport function generateExtradata(codecpar: pointer<AVCodecParameters>) {\n  const ioWriter = new BufferWriter(new Uint8Array(8))\n  const vpcc = getVpccFeature(codecpar)\n  ioWriter.writeUint8(vpcc.profile)\n  ioWriter.writeUint8(vpcc.level)\n  ioWriter.writeUint8((vpcc.bitDepth << 4) | (vpcc.chromaSubsampling << 1) | vpcc.fullRange)\n  ioWriter.writeUint8(codecpar.colorPrimaries)\n  ioWriter.writeUint8(codecpar.colorTrc)\n  ioWriter.writeUint8(codecpar.colorSpace)\n  ioWriter.writeUint16(0)\n  return ioWriter.getWroteBuffer()\n}","/*\n * libmedia vvc util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport * as array from 'common/util/array'\nimport AVPacket, { AVPacketFlags } from 'avutil/struct/avpacket'\nimport BufferWriter from 'common/io/BufferWriter'\nimport BufferReader from 'common/io/BufferReader'\nimport { AVPacketSideDataType } from 'avutil/codec'\nimport BitReader from 'common/io/BitReader'\nimport AVStream from '../AVStream'\nimport { mapUint8Array, memcpyFromUint8Array } from 'cheap/std/memory'\nimport { naluUnescape, splitNaluByStartCode, isAnnexb } from 'avutil/util/nalu'\nimport { addAVPacketSideData, getAVPacketData } from 'avutil/util/avpacket'\nimport { avMalloc } from 'avutil/util/mem'\nimport * as expgolomb from 'avutil/util/expgolomb'\nimport { Uint8ArrayInterface } from 'common/io/interface'\nimport BitWriter from 'common/io/BitWriter'\nimport { Data } from 'common/types/type'\n\nconst NALULengthSizeMinusOne = 3\n\nexport const enum VVCNaluType {\n  kTRAIL_NUT      = 0,\n  kSTSA_NUT       = 1,\n  kRADL_NUT       = 2,\n  kRASL_NUT       = 3,\n  kRSV_VCL_4      = 4,\n  kRSV_VCL_5      = 5,\n  kRSV_VCL_6      = 6,\n  kIDR_W_RADL     = 7,\n  kIDR_N_LP       = 8,\n  kCRA_NUT        = 9,\n  kGDR_NUT        = 10,\n  kRSV_IRAP_11    = 11,\n  kOPI_NUT        = 12,\n  kDCI_NUT        = 13,\n  kVPS_NUT        = 14,\n  kSPS_NUT        = 15,\n  kPPS_NUT        = 16,\n  kPREFIX_APS_NUT = 17,\n  kSUFFIX_APS_NUT = 18,\n  kPH_NUT         = 19,\n  kAUD_NUT        = 20,\n  kEOS_NUT        = 21,\n  kEOB_NUT        = 22,\n  kPREFIX_SEI_NUT = 23,\n  kSUFFIX_SEI_NUT = 24,\n  kFD_NUT         = 25,\n  kRSV_NVCL_26    = 26,\n  kRSV_NVCL_27    = 27,\n  kUNSPEC_28      = 28,\n  kUNSPEC_29      = 29,\n  kUNSPEC_30      = 30,\n  kUNSPEC_31      = 31,\n}\n\nexport const enum VVCSliceType {\n  kB = 0,\n  kP = 1,\n  kI = 2\n}\n\nexport const enum VVCAPSType {\n  kALF     = 0,\n  kLMCS    = 1,\n  kSCALING = 2\n}\n\nfunction parsePTL(bitReader: BitReader) {\n  const olsIdx = bitReader.readU(9)\n  const numSublayers = bitReader.readU(3)\n  const constantFrameRate = bitReader.readU(2)\n  const chromaFormatIdc = bitReader.readU(2)\n  const bitDepthMinus8 = bitReader.readU(3)\n  bitReader.readU(5)\n\n  // VvcPTLRecord\n  bitReader.readU(2)\n  const num_bytes_constraint_info = bitReader.readU(6)\n  const generalProfileIdc = bitReader.readU(7)\n  const generalTierFlag = bitReader.readU(1)\n  const generalLevelIdc = bitReader.readU(8)\n  const ptlFrameOnlyConstraintFlag = bitReader.readU(1)\n  const ptlMultilayerEnabledFlag = bitReader.readU(1)\n  const generalConstraintInfo = []\n  const sublayerLevelIdc = []\n\n  if (num_bytes_constraint_info) {\n    for (let i = 0; i < num_bytes_constraint_info - 1; i++) {\n      generalConstraintInfo[i] = bitReader.readU(8)\n    }\n    generalConstraintInfo[num_bytes_constraint_info - 1] = bitReader.readU(6)\n  }\n  else {\n    bitReader.readU(6)\n  }\n  if (numSublayers > 1) {\n    let ptl_sublayer_present_mask = 0\n    for (let j = numSublayers - 2; j >= 0; --j) {\n      const val = bitReader.readU(1)\n      ptl_sublayer_present_mask |= val << j\n    }\n    for (let j = numSublayers; j <= 8 && numSublayers > 1; ++j) {\n      bitReader.readU(1)\n    }\n    \n    for (let j = numSublayers - 2; j >= 0; --j) {\n      if (ptl_sublayer_present_mask & (1 << j)) {\n        sublayerLevelIdc[j] = bitReader.readU(8)\n      }\n    }\n  }\n  const ptl_num_sub_profiles = bitReader.readU(8)\n  const generalSubProfileIdc = []\n  if (ptl_num_sub_profiles) {\n    for (let i = 0; i < ptl_num_sub_profiles; i++) {\n      generalSubProfileIdc.push(bitReader.readU(8))\n    }\n  }\n\n  const maxPictureWidth = bitReader.readU(16)\n  const maxPictureHeight = bitReader.readU(16)\n  const avgFramerate = bitReader.readU(16)\n\n  return {\n    olsIdx,\n    numSublayers,\n    bitDepthMinus8,\n    chromaFormatIdc,\n    constantFrameRate,\n    generalProfileIdc,\n    generalTierFlag,\n    generalLevelIdc,\n    ptlFrameOnlyConstraintFlag,\n    ptlMultilayerEnabledFlag,\n    generalConstraintInfo,\n    sublayerLevelIdc,\n    generalSubProfileIdc,\n    maxPictureWidth,\n    maxPictureHeight,\n    avgFramerate\n  }\n}\n\n/**\n * \n * vvcc 格式的 extradata 转 annexb vps sps pps\n * \n * bits    \n * - 5   reserved (11111)\n * - 2   lengthSizeMinusOne\n * - 1   ptl_present_flag\n * if ptl_present_flag\n *   - 9   ols_idx\n *   - 3  num_sublayers\n *   - 2  constant_frame_rate\n *   - 2  chroma_format_idc\n *   - 3  bit_depth_minus8\n *   - 5  reserved (11111)\n *   VvcPTLRecord\n *   - 2 reserved (11)\n *   - 6 num_bytes_constraint_info\n *   - 7 general_profile_idc\n *   - 1 general_tier_flag\n *   - 8 general_level_idc\n *   - 1 general_level_idc\n *   - 1 ptl_multilayer_enabled_flag\n *   if num_bytes_constraint_info > 0\n *      for (i = 0; i < num_bytes_constraint_info - 1; i++)\n *        - 8 general_constraint_info[i]\n *      - 6 general_constraint_info[num_bytes_constraint_info - 1]\n *   else\n *      - 6 reserved\n *   if num_sublayers > 1\n *      - num_sublayers - 2 ptl_sublayer_level_present_flag\n *      - 8 - num_sublayers + 1 ptl_reserved_zero_bit\n *      for (i = num_sublayers -2; i >= 0; i--)\n *        if ptl_sublayer_present_mask & (1 << i)\n *          - 8 sublayer_level_idc[i]\n *    - 8 ptl_num_sub_profiles\n *    if ptl_num_sub_profiles\n *      for (i = 0; i < ptl_num_sub_profiles; i++)\n *        - 32 general_sub_profile_idc[i]\n *    - 16 max_picture_width\n *    - 16 max_picture_height\n *    - 16 avg_frame_rate\n * - 8   numOfArrays\n * - repeated of array (vps/sps/pps)\n * - 1   array_completeness\n * - 2   reserved (0)\n * - 5   NAL_unit_type\n * if nalu_type != VVC_NALU_DEC_PARAM && nalu_type != VVC_NALU_OPI\n *    - 16  numNalus\n * else\n *   numNalus = 1\n * - repeated once per NAL\n * - 16  nalUnitLength\n * - N   NALU data\n * \n */\nexport function extradata2VpsSpsPps(extradata: Uint8ArrayInterface) {\n\n  const bufferReader = new BufferReader(extradata, true)\n\n  const ptlPresentFlag = bufferReader.readUint8() & 0x01\n\n  if (ptlPresentFlag) {\n    const bitReader = new BitReader()\n    bitReader.appendBuffer(extradata.subarray(1))\n    parsePTL(bitReader)\n    bufferReader.skip(bitReader.getPos())\n  }\n\n  let vpss = []\n  let spss = []\n  let ppss = []\n\n  const arrayLen = bufferReader.readUint8()\n\n  for (let i = 0; i < arrayLen; i++) {\n    const naluType = bufferReader.readUint8() & 0x1f\n    let count = 1\n\n    if (naluType !== VVCNaluType.kDCI_NUT && naluType !== VVCNaluType.kOPI_NUT) {\n      count = bufferReader.readUint16()\n    }\n    const list = []\n\n    for (let j = 0; j < count; j++) {\n      const len = bufferReader.readUint16()\n      list.push(bufferReader.readBuffer(len))\n    }\n\n    if (naluType === VVCNaluType.kVPS_NUT) {\n      vpss = list\n    }\n    else if (naluType === VVCNaluType.kSPS_NUT) {\n      spss = list\n    }\n    else if (naluType === VVCNaluType.kPPS_NUT) {\n      ppss = list\n    }\n  }\n\n  return {\n    vpss,\n    spss,\n    ppss\n  }\n}\n\nexport function vpsSpsPps2Extradata(vpss: Uint8ArrayInterface[], spss: Uint8ArrayInterface[], ppss: Uint8ArrayInterface[]) {\n  \n  const sps = spss[0]\n  let ptl: Uint8Array\n  if (sps) {\n    const spsParams = parserSPS(sps)\n    const biWriter = new BitWriter()\n    biWriter.writeU(9, 0)\n    biWriter.writeU(3, spsParams.spsMaxSublayersMinus1 + 1)\n    biWriter.writeU(2, 1)\n    biWriter.writeU(2, spsParams.chromaFormatIdc)\n    biWriter.writeU(3, spsParams.bitDepthMinus8)\n    biWriter.writeU(5, 0b11111)\n    biWriter.writeU(2, 0b11)\n    biWriter.writeU(6, spsParams.generalConstraintInfo.length)\n    biWriter.writeU(7, spsParams.profile)\n    biWriter.writeU1(spsParams.tierFlag)\n    biWriter.writeU(8, spsParams.level)\n    biWriter.writeU1(spsParams.ptlFrameOnlyConstraintFlag)\n    biWriter.writeU1(spsParams.ptlMultilayerEnabledFlag)\n\n    if (spsParams.generalConstraintInfo.length) {\n      for (let i = 0; i < spsParams.generalConstraintInfo.length - 1; i++) {\n        biWriter.writeU(8, spsParams.generalConstraintInfo[i])\n      }\n      biWriter.writeU(6, spsParams.generalConstraintInfo[spsParams.generalConstraintInfo.length - 1])\n    }\n    else {\n      biWriter.writeU(6, 0b111111)\n    }\n\n    if (spsParams.spsMaxSublayersMinus1 + 1 > 1) {\n      let ptl_sublayer_level_present_flags = 0\n      for (let i = spsParams.spsMaxSublayersMinus1 - 1; i >= 0; i--) {\n        ptl_sublayer_level_present_flags = (ptl_sublayer_level_present_flags << 1 | spsParams.ptlSublayerLevelPresentFlag[i])\n      }\n      biWriter.writeU(8, ptl_sublayer_level_present_flags)\n    }\n    for (let i = spsParams.spsMaxSublayersMinus1 - 1; i >= 0; i--) {\n      if (spsParams.ptlSublayerLevelPresentFlag[i]) {\n        biWriter.writeU(8, spsParams.sublayerLevelIdc[i])\n      }\n    }\n    biWriter.writeU(8, spsParams.generalSubProfileIdc.length)\n    for (let i = 0; i < spsParams.generalSubProfileIdc.length; i++) {\n      biWriter.writeU(32, spsParams.sublayerLevelIdc[i])\n    }\n    biWriter.writeU(16, spsParams.width)\n    biWriter.writeU(16, spsParams.height)\n    biWriter.writeU(16, 0)\n    biWriter.padding()\n    ptl = biWriter.getBuffer().subarray(0, biWriter.getPointer())\n  }\n\n  let length = 1 + (ptl ? ptl.length : 0)\n\n  if (vpss.length) {\n    // type + count\n    length += 3\n    length = vpss.reduce((prev, value) => {\n      // length + data\n      return prev + 2 + value.length\n    }, length)\n  }\n\n  if (spss.length) {\n    // type + count\n    length += 3\n    length = spss.reduce((prev, value) => {\n      // length + data\n      return prev + 2 + value.length\n    }, length)\n  }\n\n  if (ppss.length) {\n    // type + count\n    length += 3\n    length = ppss.reduce((prev, value) => {\n      // length + data\n      return prev + 2 + value.length\n    }, length)\n  }\n\n  const buffer = new Uint8Array(length)\n  const bufferWriter = new BufferWriter(buffer, true)\n\n  bufferWriter.writeUint8(NALULengthSizeMinusOne << 1 | (ptl ? 1 : 0) | 0xf8)\n\n  if (ptl) {\n    bufferWriter.writeBuffer(ptl)\n  }\n\n  // numOfArrays\n  let numOfArrays = 0\n  if (vpss.length) {\n    numOfArrays++\n  }\n  if (spss.length) {\n    numOfArrays++\n  }\n  if (ppss.length) {\n    numOfArrays++\n  }\n  bufferWriter.writeUint8(numOfArrays)\n\n  // vps\n  if (vpss.length) {\n    bufferWriter.writeUint8((1 << 7) | VVCNaluType.kVPS_NUT)\n    bufferWriter.writeUint16(vpss.length)\n    array.each(vpss, (vps) => {\n      bufferWriter.writeUint16(vps.length)\n      bufferWriter.writeBuffer(vps)\n    })\n  }\n\n  // sps\n  if (spss.length) {\n    bufferWriter.writeUint8((1 << 7) | VVCNaluType.kSPS_NUT)\n    bufferWriter.writeUint16(spss.length)\n    array.each(spss, (sps) => {\n      bufferWriter.writeUint16(sps.length)\n      bufferWriter.writeBuffer(sps)\n    })\n  }\n\n  // pps\n  if (ppss.length) {\n    bufferWriter.writeUint8((1 << 7) | VVCNaluType.kPPS_NUT)\n    bufferWriter.writeUint16(ppss.length)\n    array.each(ppss, (pps) => {\n      bufferWriter.writeUint16(pps.length)\n      bufferWriter.writeBuffer(pps)\n    })\n  }\n\n  return buffer\n}\n\nexport function annexbExtradata2AvccExtradata(data: Uint8ArrayInterface) {\n  let nalus = splitNaluByStartCode(data)\n\n  if (nalus.length > 2) {\n    const vpss = []\n    const spss = []\n    const ppss = []\n\n    nalus.forEach((nalu) => {\n      const type = (nalu[0] >>> 1) & 0x3f\n      if (type === VVCNaluType.kVPS_NUT) {\n        vpss.push(nalu)\n      }\n      else if (type === VVCNaluType.kSPS_NUT) {\n        spss.push(nalu)\n      }\n      else if (type === VVCNaluType.kPPS_NUT) {\n        ppss.push(nalu)\n      }\n    })\n\n    if (vpss.length && spss.length && ppss.length) {\n      return vpsSpsPps2Extradata(vpss, spss, ppss)\n    }\n  }\n}\n\n/**\n * \n * annexb 格式的 NALU 转 avcc NALU \n * \n */\nexport function annexb2Avcc(data: Uint8ArrayInterface) {\n  let extradata: Uint8Array\n  let key: boolean = false\n\n  let nalus = splitNaluByStartCode(data)\n\n  if (nalus.length > 2) {\n    const vpss = []\n    const spss = []\n    const ppss = []\n\n    nalus.forEach((nalu) => {\n      const type = (nalu[0] >>> 1) & 0x3f\n      if (type === VVCNaluType.kVPS_NUT) {\n        vpss.push(nalu)\n      }\n      else if (type === VVCNaluType.kSPS_NUT) {\n        spss.push(nalu)\n      }\n      else if (type === VVCNaluType.kPPS_NUT) {\n        ppss.push(nalu)\n      }\n    })\n\n    if (vpss.length && spss.length && ppss.length) {\n      extradata = vpsSpsPps2Extradata(vpss, spss, ppss)\n\n      nalus = nalus.filter((nalu) => {\n        const type = (nalu[0] >>> 1) & 0x3f\n        return type !== VVCNaluType.kVPS_NUT\n          && type !== VVCNaluType.kSPS_NUT\n          && type !== VVCNaluType.kPPS_NUT\n          && type !== VVCNaluType.kAUD_NUT\n      })\n    }\n  }\n\n  const length = nalus.reduce((prev, nalu) => {\n    return prev + NALULengthSizeMinusOne + 1 + nalu.length\n  }, 0)\n\n  const bufferPointer = avMalloc(length)\n  const buffer = mapUint8Array(bufferPointer, length)\n\n  const bufferWriter = new BufferWriter(buffer)\n\n  array.each(nalus, (nalu) => {\n    if (NALULengthSizeMinusOne === 3) {\n      bufferWriter.writeUint32(nalu.length)\n    }\n    else if (NALULengthSizeMinusOne === 2) {\n      bufferWriter.writeUint24(nalu.length)\n    }\n    else if (NALULengthSizeMinusOne === 1) {\n      bufferWriter.writeUint16(nalu.length)\n    }\n    else {\n      bufferWriter.writeUint8(nalu.length)\n    }\n    bufferWriter.writeBuffer(nalu.subarray(0))\n\n    const type = (nalu[0] >>> 1) & 0x3f\n    if (type === VVCNaluType.kIDR_N_LP\n      || type === VVCNaluType.kIDR_W_RADL\n      || type === VVCNaluType.kCRA_NUT\n      || type === VVCNaluType.kGDR_NUT\n    ) {\n      key = true\n    }\n  })\n\n  return {\n    bufferPointer,\n    length,\n    extradata,\n    key\n  }\n}\n\n/**\n * avcc 格式的 NALU 转 annexb NALU \n * \n */\nexport function avcc2Annexb(data: Uint8ArrayInterface, extradata?: Uint8ArrayInterface) {\n  const naluLengthSizeMinusOne = extradata ? ((extradata[0] >>> 1) & 0x03) : NALULengthSizeMinusOne\n\n  let vpss = []\n  let spss = []\n  let ppss = []\n  let key = false\n\n  if (extradata) {\n    const result = extradata2VpsSpsPps(extradata)\n    vpss = result.vpss\n    spss = result.spss\n    ppss = result.ppss\n    key = true\n  }\n\n  const nalus = []\n\n  const bufferReader = new BufferReader(data)\n  while (bufferReader.remainingSize() > 0) {\n    let length = 0\n    if (naluLengthSizeMinusOne === 3) {\n      length = bufferReader.readUint32()\n    }\n    else if (naluLengthSizeMinusOne === 2) {\n      length = bufferReader.readUint24()\n    }\n    else if (naluLengthSizeMinusOne === 1) {\n      length = bufferReader.readUint16()\n    }\n    else {\n      length = bufferReader.readUint8()\n    }\n    nalus.push(bufferReader.readBuffer(length))\n  }\n\n  let length = vpss.reduce((prev, vps) => {\n    return prev + 4 + vps.length\n  }, 0)\n  length = spss.reduce((prev, sps) => {\n    return prev + 4 + sps.length\n  }, length)\n  length = ppss.reduce((prev, pps) => {\n    return prev + 4 + pps.length\n  }, length)\n  length = nalus.reduce((prev, nalu, index) => {\n    return prev + (index ? 3 : 4) + nalu.length\n  }, length)\n\n  const bufferPointer = avMalloc(length + 7)\n  const buffer = mapUint8Array(bufferPointer, length + 7)\n\n  const bufferWriter = new BufferWriter(buffer)\n\n  // AUD\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(0x01)\n  bufferWriter.writeUint8(0x00)\n  bufferWriter.writeUint8(VVCNaluType.kAUD_NUT << 3)\n  bufferWriter.writeUint8(0xf0)\n\n  array.each(vpss, (vps) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(vps)\n  })\n\n  array.each(spss, (sps) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(sps)\n  })\n\n  array.each(ppss, (pps) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(pps)\n  })\n\n  array.each(nalus, (nalu, index) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    if (!index) {\n      bufferWriter.writeUint8(0x00)\n    }\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(nalu)\n\n    const type = (nalu[0] >>> 1) & 0x3f\n    if (type === VVCNaluType.kIDR_N_LP\n      || type === VVCNaluType.kIDR_W_RADL\n      || type === VVCNaluType.kCRA_NUT\n      || type === VVCNaluType.kGDR_NUT\n    ) {\n      key = true\n    }\n  })\n\n  return {\n    bufferPointer,\n    length: length + 7,\n    key\n  }\n}\n\nexport function parseAvccExtraData(avpacket: pointer<AVPacket>, stream: AVStream) {\n  if (!(avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY)) {\n    return\n  }\n\n  const data = getAVPacketData(avpacket)\n\n  if (isAnnexb(data)) {\n    return\n  }\n\n  const naluLengthSizeMinusOne = stream.metadata.naluLengthSizeMinusOne ?? NALULengthSizeMinusOne\n\n  let vpss = []\n  let spss = []\n  let ppss = []\n\n  const bufferReader = new BufferReader(data)\n  while (bufferReader.remainingSize() > 0) {\n    let length = 0\n    if (naluLengthSizeMinusOne === 3) {\n      length = bufferReader.readUint32()\n    }\n    else if (naluLengthSizeMinusOne === 2) {\n      length = bufferReader.readUint24()\n    }\n    else if (naluLengthSizeMinusOne === 1) {\n      length = bufferReader.readUint16()\n    }\n    else {\n      length = bufferReader.readUint8()\n    }\n\n    const nalu = data.subarray(static_cast<int32>(bufferReader.getPos()), static_cast<int32>(bufferReader.getPos()) + length)\n    bufferReader.skip(length)\n\n    const naluType = (nalu[0] >>> 1) & 0x3f\n\n    if (naluType === VVCNaluType.kSPS_NUT) {\n      spss.push(nalu)\n    }\n    else if (naluType === VVCNaluType.kPPS_NUT) {\n      ppss.push(nalu)\n    }\n    else if (naluType === VVCNaluType.kVPS_NUT) {\n      vpss.push(nalu)\n    }\n  }\n\n  if (spss.length || ppss.length || vpss.length) {\n    const extradata = vpsSpsPps2Extradata(vpss, spss, ppss)\n    const extradataPointer = avMalloc(extradata.length)\n    memcpyFromUint8Array(extradataPointer, extradata.length, extradata)\n    addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, extradataPointer, extradata.length)\n  }\n}\n\nexport function parseAnnexbExtraData(avpacket: pointer<AVPacket>, force: boolean = false) {\n  if (!(avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY) && !force) {\n    return\n  }\n\n  const data = getAVPacketData(avpacket)\n\n  if (!isAnnexb(data)) {\n    return\n  }\n\n  let nalus = splitNaluByStartCode(data)\n\n  if (nalus.length > 2) {\n    const vpss = []\n    const spss = []\n    const ppss = []\n\n    nalus.forEach((nalu) => {\n      const type = (nalu[0] >>> 1) & 0x3f\n      if (type === VVCNaluType.kVPS_NUT) {\n        vpss.push(nalu)\n      }\n      else if (type === VVCNaluType.kSPS_NUT) {\n        spss.push(nalu)\n      }\n      else if (type === VVCNaluType.kPPS_NUT) {\n        ppss.push(nalu)\n      }\n    })\n\n    if (vpss.length && spss.length && ppss.length) {\n      const extradata = vpsSpsPps2Extradata(vpss, spss, ppss)\n      const extradataPointer = avMalloc(extradata.length)\n      memcpyFromUint8Array(extradataPointer, extradata.length, extradata)\n      addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, extradataPointer, extradata.length)\n      avpacket.flags |= AVPacketFlags.AV_PKT_FLAG_KEY\n    }\n  }\n}\n\nexport function parseAVCodecParameters(stream: AVStream, extradata?: Uint8ArrayInterface) {\n  if (!extradata && stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]) {\n    extradata = stream.sideData[AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA]\n  }\n  if (extradata && extradata.length >= 6) {\n\n    stream.metadata.naluLengthSizeMinusOne = (extradata[0] >>> 1) & 0x03\n\n    const { spss } = extradata2VpsSpsPps(extradata)\n\n    if (spss.length) {\n      const { profile, level, width, height } = parserSPS(spss[0])\n\n      stream.codecpar.profile = profile\n      stream.codecpar.level = level\n      stream.codecpar.width = width\n      stream.codecpar.height = height\n    }\n  }\n}\n\nexport function parserSPS(sps: Uint8ArrayInterface) {\n  if (!sps || sps.length < 3) {\n    return\n  }\n\n  let offset = 0\n  if (sps[0] === 0x00\n    && sps[1] === 0x00\n    && sps[2] === 0x00\n    && sps[3] === 0x01\n  ) {\n    offset = 4\n  }\n\n  let profile = 0\n  let level = 0\n  let width = 0\n  let height = 0\n  let bitDepthMinus8 = 0\n  let chromaFormatIdc = 1\n  let generalProfileSpace = 0\n  let tierFlag = 0\n  let ptlFrameOnlyConstraintFlag = 0\n  let ptlMultilayerEnabledFlag = 0\n\n  const generalConstraintInfo = []\n  const ptlSublayerLevelPresentFlag = []\n  const sublayerLevelIdc = []\n  const generalSubProfileIdc = []\n\n  const buffer = naluUnescape(sps.subarray(offset))\n  const bitReader = new BitReader(buffer.length)\n  bitReader.appendBuffer(buffer)\n\n  // forbidden_zero_bit\n  bitReader.readU1()\n  // nuh_reserved_zero_bit\n  bitReader.readU1()\n  // layerId\n  bitReader.readU(6)\n  // nalu type\n  bitReader.readU(5)\n  // tid\n  bitReader.readU(3)\n\n  // sps_seq_parameter_set_id && sps_video_parameter_set_id\n  bitReader.readU(8)\n\n  const spsMaxSublayersMinus1 = bitReader.readU(3)\n  chromaFormatIdc = bitReader.readU(2)\n  const sps_log2_ctu_size_minus5 = bitReader.readU(2)\n  const sps_ptl_dpb_hrd_params_present_flag = bitReader.readU(1)\n  if (sps_ptl_dpb_hrd_params_present_flag) {\n    profile = bitReader.readU(7)\n    tierFlag = bitReader.readU(1)\n    level = bitReader.readU(8)\n    ptlFrameOnlyConstraintFlag = bitReader.readU(1)\n    ptlMultilayerEnabledFlag = bitReader.readU(1)\n    const gci_present_flag = bitReader.readU(1)\n    if (gci_present_flag) {\n      for (let j = 0; j < 8; j++) {\n        generalConstraintInfo[j] = bitReader.readU(8)\n      }\n      generalConstraintInfo[8] = bitReader.readU(7)\n      const gci_num_reserved_bits = bitReader.readU(8)\n      bitReader.readU(gci_num_reserved_bits)\n    }\n    bitReader.skipPadding()\n    for (let i = spsMaxSublayersMinus1 - 1; i >= 0; i--) {\n      ptlSublayerLevelPresentFlag[i] = bitReader.readU(1)\n    }\n    bitReader.skipPadding()\n    for (let i = spsMaxSublayersMinus1 - 1; i >= 0; i--) {\n      if (ptlSublayerLevelPresentFlag[i]) {\n        sublayerLevelIdc[i] = bitReader.readU(8)\n      }\n    }\n\n    const ptl_num_sub_profiles = bitReader.readU(8)\n    if (ptl_num_sub_profiles) {\n      for (let i = 0; i < ptl_num_sub_profiles; i++) {\n        generalSubProfileIdc[i] = bitReader.readU(32)\n      }\n    } \n  }\n\n  // sps_gdr_enabled_flag\n  bitReader.readU1()\n  const sps_ref_pic_resampling_enabled_flag = bitReader.readU1()\n  if (sps_ref_pic_resampling_enabled_flag) {\n    // sps_res_change_in_clvs_allowed_flag\n    bitReader.readU1()\n  }\n\n  const sps_pic_width_max_in_luma_samples = width = expgolomb.readUE(bitReader)\n  const sps_pic_height_max_in_luma_samples = height = expgolomb.readUE(bitReader)\n\n  if (bitReader.readU1()) {\n    // sps_conf_win_left_offset\n    expgolomb.readUE(bitReader)\n    // sps_conf_win_right_offset\n    expgolomb.readUE(bitReader)\n    // sps_conf_win_top_offset\n    expgolomb.readUE(bitReader)\n    // sps_conf_win_bottom_offset\n    expgolomb.readUE(bitReader)\n  }\n\n  if (bitReader.readU1()) {\n    const sps_num_subpics_minus1 = expgolomb.readUE(bitReader)\n    const ctb_log2_size_y = sps_log2_ctu_size_minus5 + 5\n    const ctb_size_y      = 1 << ctb_log2_size_y\n    const tmp_width_val   = sps_pic_width_max_in_luma_samples / (1 << ctb_log2_size_y)\n    const tmp_height_val  = sps_pic_height_max_in_luma_samples / (1 << ctb_log2_size_y)\n    const wlen            = Math.ceil(Math.log2(tmp_width_val))\n    const hlen            = Math.ceil(Math.log2(tmp_height_val))\n\n    let sps_subpic_id_len = 0\n    let sps_subpic_same_size_flag = 0\n    let sps_independent_subpics_flag = 0\n     // sps_num_subpics_minus1\n    if (sps_num_subpics_minus1 > 0) {\n      sps_independent_subpics_flag = bitReader.readU1()\n      sps_subpic_same_size_flag = bitReader.readU1()\n    }\n    for (let i = 0; sps_num_subpics_minus1 > 0 && i <= sps_num_subpics_minus1; i++) {\n      if (!sps_subpic_same_size_flag || i == 0) {\n        if (i > 0 && sps_pic_width_max_in_luma_samples > ctb_size_y) {\n          bitReader.readU(wlen)\n        }\n        if (i > 0 && sps_pic_height_max_in_luma_samples > ctb_size_y) {\n          bitReader.readU(hlen)\n        }\n        if (i < sps_num_subpics_minus1 && sps_pic_width_max_in_luma_samples > ctb_size_y) {\n          bitReader.readU(wlen)\n        }\n        if (i < sps_num_subpics_minus1 && sps_pic_height_max_in_luma_samples > ctb_size_y) {\n          bitReader.readU(hlen)\n        }\n      }\n      if (!sps_independent_subpics_flag) {\n        // sps_subpic_treated_as_pic_flag && sps_loop_filter_across_subpic_enabled_flag\n        bitReader.readU(2)\n      }\n    }\n    sps_subpic_id_len = expgolomb.readUE(bitReader) + 1\n    // sps_subpic_id_mapping_explicitly_signalled_flag\n    if (bitReader.readU(1)) {\n       // sps_subpic_id_mapping_present_flag\n      if (bitReader.readU(1)) {\n        for (let i = 0; i <= sps_num_subpics_minus1; i++) {\n          // sps_subpic_id[i]\n          bitReader.readU(sps_subpic_id_len)\n        }\n      }\n    }\n  }\n\n  bitDepthMinus8 = expgolomb.readUE(bitReader)\n\n  return {\n    profile,\n    level,\n    width,\n    height,\n    chromaFormatIdc,\n    bitDepthMinus8,\n    generalProfileSpace,\n    tierFlag,\n    generalConstraintInfo,\n    generalSubProfileIdc,\n    ptlFrameOnlyConstraintFlag,\n    ptlMultilayerEnabledFlag,\n    spsMaxSublayersMinus1,\n    ptlSublayerLevelPresentFlag,\n    sublayerLevelIdc\n  }\n}\n\nexport function parseExtraData(extradata: Uint8ArrayInterface) {\n  const bitReader = new BitReader()\n  bitReader.appendBuffer(extradata)\n  const ptlPresentFlag = bitReader.readU(8) & 0x01\n  if (ptlPresentFlag) {\n    return parsePTL(bitReader)\n  }\n  return {} as Data\n}","import { AVFormatContext, AVFormatContextInterface, AVIFormatContext, AVOFormatContext } from './AVFormatContext'\nimport { AVDisposition, AVStreamInterface } from './AVStream'\nimport * as object from 'common/util/object'\nimport * as stringEnum from 'avutil/stringEnum'\nimport * as is from 'common/util/is'\nimport { avQ2D, avReduce, avRescaleQ } from 'avutil/util/rational'\nimport { AV_MILLI_TIME_BASE_Q, NOPTS_VALUE } from 'avutil/constant'\nimport * as string from 'common/util/string'\nimport toString from 'common/function/toString'\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\n\nimport * as aac from './codecs/aac'\nimport * as opus from './codecs/opus'\nimport * as h264 from './codecs/h264'\nimport * as hevc from './codecs/hevc'\nimport * as vvc from './codecs/vvc'\nimport * as av1 from './codecs/av1'\nimport * as vp9 from './codecs/vp9'\nimport * as mp3 from './codecs/mp3'\nimport { AVFormat } from './avformat'\n\nexport interface DumpIOInfo {\n  from: string\n  tag: 'Input' | 'Output'\n}\n\nexport function dumpTime(time: int64) {\n  if (time < 0) {\n    time = 0n\n  }\n  const ms = static_cast<int32>(time % 1000n)\n  const secs = static_cast<int32>(time / 1000n % 60n)\n  const mins = static_cast<int32>(time / 1000n / 60n % 60n)\n  const hours = static_cast<int32>(time / 1000n / 3600n)\n  return string.format('%02d:%02d:%02d.%03d', hours, mins, secs, ms)\n}\n\nexport function dumpInt64(v: int64) {\n  if (v < 10000n) {\n    return toString(static_cast<int32>(v))\n  }\n  return static_cast<int32>(v / 1000n) + 'k'\n}\n\nexport function dumpBitrate(v: int64) {\n  if (v < 10000n) {\n    return toString(static_cast<int32>(v)) + ' bps/s'\n  }\n  return static_cast<int32>(v / 1000n) + ' kbps/s'\n}\n\nexport function dumpKey<T>(obj: Record<string, T>, value: T, defaultValue: string = 'unknown') {\n  let name = defaultValue\n  object.each(obj, (v, k) => {\n    if (value === v) {\n      name = k\n      return false\n    }\n  })\n  return name\n}\n\nexport function dumpCodecName(codecType: AVMediaType, codecId: AVCodecID) {\n  if (codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\n    return dumpKey(stringEnum.AudioCodecString2CodecId, codecId)\n  }\n  else if (codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\n    return dumpKey(stringEnum.VideoCodecString2CodecId, codecId)\n  }\n  return 'unknown'\n}\n\nexport function dumpFormatName(format: AVFormat) {\n  return dumpKey(stringEnum.Format2AVFormat, format)\n}\n\nfunction dumpProfileName(codecId: AVCodecID, profile: int32) {\n  switch (codecId) {\n    case AVCodecID.AV_CODEC_ID_AAC:\n      return aac.AACProfile2Name[profile] || 'LC'\n    case AVCodecID.AV_CODEC_ID_MP3:\n      return mp3.MP3Profile2Name[profile] || 'Layer3'\n    case AVCodecID.AV_CODEC_ID_H264:\n      return h264.H264Profile2Name[profile] || 'High'\n    case AVCodecID.AV_CODEC_ID_HEVC:\n      return hevc.HEVCProfile2Name[profile] || 'Main'\n    case AVCodecID.AV_CODEC_ID_AV1:\n      return av1.AV1Profile2Name[profile] || 'Main'\n    case AVCodecID.AV_CODEC_ID_VP9:\n      return vp9.VP9Profile2Name[profile] || 'Profile0'\n  }\n}\n\nfunction dumpAVStreamInterface(stream: AVStreamInterface, index: number, prefix: string) {\n  const mediaType = dumpKey(stringEnum.mediaType2AVMediaType, stream.codecpar.codecType)\n\n  const list = []\n\n  if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO) {\n    const profileName = dumpProfileName(stream.codecpar.codecId, stream.codecpar.profile)\n    const codecName = dumpKey(stringEnum.AudioCodecString2CodecId, stream.codecpar.codecId)\n    list.push(`${codecName}${profileName ? ` (${profileName})` : ''}`)\n\n    list.push(`${stream.codecpar.sampleRate} Hz`)\n    let channel = `${stream.codecpar.chLayout.nbChannels} channels`\n    if (stream.codecpar.chLayout.nbChannels === 1) {\n      channel = 'mono'\n    }\n    else if (stream.codecpar.chLayout.nbChannels === 2) {\n      channel = 'stereo'\n    }\n    list.push(channel)\n    list.push(dumpKey(stringEnum.SampleFmtString2SampleFormat, stream.codecpar.format))\n    if (stream.codecpar.bitRate > 0n) {\n      list.push(`${dumpBitrate(stream.codecpar.bitRate)}`)\n    }\n  }\n  else if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\n    const profileName = dumpProfileName(stream.codecpar.codecId, stream.codecpar.profile)\n    const codecName = dumpKey(stringEnum.VideoCodecString2CodecId, stream.codecpar.codecId)\n    list.push(`${codecName}${profileName ? ` (${profileName})` : ''}`)\n\n    if (stream.codecpar.format !== NOPTS_VALUE) {\n      const pixfmt = dumpKey(stringEnum.PixfmtString2AVPixelFormat, stream.codecpar.format)\n      const range = dumpKey(stringEnum.colorRange2AVColorRange, stream.codecpar.colorRange, 'tv')\n      const space = dumpKey(stringEnum.colorSpace2AVColorSpace, stream.codecpar.colorSpace, 'bt709')\n      list.push(`${pixfmt}(${range}, ${space})`)\n    }\n    \n    const dar = {\n      num: stream.codecpar.width * stream.codecpar.sampleAspectRatio.num,\n      den: stream.codecpar.height * stream.codecpar.sampleAspectRatio.den\n    }\n    avReduce(dar)\n\n    list.push(`${stream.codecpar.width}x${stream.codecpar.height} [SAR: ${stream.codecpar.sampleAspectRatio.num}:${stream.codecpar.sampleAspectRatio.den} DAR ${dar.num}:${dar.den}]`)\n\n    if (stream.codecpar.bitRate > 0n) {\n      list.push(`${dumpBitrate(stream.codecpar.bitRate)}`)\n    }\n    if (avQ2D(stream.codecpar.framerate) > 0) {\n      list.push(`${avQ2D(stream.codecpar.framerate).toFixed(2)} fps`)\n      list.push(`${avQ2D(stream.codecpar.framerate).toFixed(2)} tbr`)\n    }\n    list.push(`${dumpInt64(static_cast<int64>(avQ2D({\n      num: stream.timeBase.den,\n      den: stream.timeBase.num\n    })))} tbn`)\n\n   \n  }\n  else {\n    if (stream.codecpar.bitRate > 0n) {\n      list.push(`${dumpBitrate(stream.codecpar.bitRate)}`)\n    }\n  }\n\n  if (stream.disposition) {\n    let disposition = ''\n    if (stream.disposition & AVDisposition.DEFAULT) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.DEFAULT)}) `\n    }\n    if (stream.disposition & AVDisposition.DUB) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.DUB)}) `\n    }\n    if (stream.disposition & AVDisposition.ORIGINAL) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.ORIGINAL)}) `\n    }\n    if (stream.disposition & AVDisposition.COMMENT) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.COMMENT)}) `\n    }\n    if (stream.disposition & AVDisposition.LYRICS) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.LYRICS)}) `\n    }\n    if (stream.disposition & AVDisposition.KARAOKE) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.KARAOKE)}) `\n    }\n    if (stream.disposition & AVDisposition.FORCED) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.FORCED)}) `\n    }\n    if (stream.disposition & AVDisposition.HEARING_IMPAIRED) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.HEARING_IMPAIRED)}) `\n    }\n    if (stream.disposition & AVDisposition.VISUAL_IMPAIRED) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.VISUAL_IMPAIRED)}) `\n    }\n    if (stream.disposition & AVDisposition.CLEAN_EFFECTS) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.CLEAN_EFFECTS)}) `\n    }\n    if (stream.disposition & AVDisposition.ATTACHED_PIC) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.ATTACHED_PIC)}) `\n    }\n    if (stream.disposition & AVDisposition.TIMED_THUMBNAILS) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.TIMED_THUMBNAILS)}) `\n    }\n    if (stream.disposition & AVDisposition.CAPTIONS) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.CAPTIONS)}) `\n    }\n    if (stream.disposition & AVDisposition.DESCRIPTIONS) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.DESCRIPTIONS)}) `\n    }\n    if (stream.disposition & AVDisposition.METADATA) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.METADATA)}) `\n    }\n    if (stream.disposition & AVDisposition.DEPENDENT) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.DEPENDENT)}) `\n    }\n    if (stream.disposition & AVDisposition.STILL_IMAGE) {\n      disposition += `(${dumpKey(stringEnum.disposition2AVDisposition, AVDisposition.STILL_IMAGE)}) `\n    }\n    if (disposition) {\n      list.push(disposition)\n    }\n  }\n\n  let dump = `${prefix}Stream #${index}:${stream.index} ${mediaType}: ${list.join(', ')}\\n`\n\n  if (Object.keys(stream.metadata).length) {\n    dump += `${prefix}  Metadata:\\n`\n    object.each(stream.metadata, (value, key) => {\n      if (!is.object(value) || !is.array(value)) {\n        dump += `${prefix}    ${key}: ${value}\\n`\n      }\n    })\n  }\n\n  return dump\n}\n\nfunction dumpAVFormatContextInterface(formatContext: AVFormatContextInterface, index: number, input: DumpIOInfo) {\n  let dump = `${input.tag} #${index}, ${dumpKey(stringEnum.Format2AVFormat, formatContext.format)}, from '${input.from}:'\\n`\n  if (Object.keys(formatContext.metadata).length) {\n    dump += `  Metadata:\\n`\n    object.each(formatContext.metadata, (value, key) => {\n      if (!is.object(value) || !is.array(value)) {\n        dump += `    ${key}: ${value}\\n`\n      }\n    })\n  }\n\n  let duration = 0n\n  let bitrate = 0n\n  let start = -1n\n\n  formatContext.streams.forEach((stream) => {\n    const d = avRescaleQ(stream.duration, accessof(stream.timeBase), AV_MILLI_TIME_BASE_Q)\n    const s = avRescaleQ(stream.startTime, accessof(stream.timeBase), AV_MILLI_TIME_BASE_Q)\n\n    if (d > duration) {\n      duration = d\n    }\n    if (s < start || start === -1n) {\n      start = s\n    }\n    bitrate += stream.codecpar.bitRate\n  })\n\n  dump += `  Duration: ${dumpTime(duration)}, start: ${dumpTime(start)}, bitrate: ${dumpBitrate(bitrate)}\\n`\n  formatContext.streams.forEach((stream, i) => {\n    dump += dumpAVStreamInterface(stream, index, '  ')\n  })\n  return dump\n}\n\nexport default function dump(formatContexts: (AVFormatContextInterface | AVIFormatContext | AVOFormatContext)[], inputs: DumpIOInfo[]) {\n  let dump = ''\n  formatContexts.forEach((formatContext, index) => {\n    if (formatContext instanceof AVFormatContext) {\n      const streams: AVStreamInterface[] = []\n      for (let i = 0; i < formatContext.streams.length; i++) {\n        const stream = formatContext.streams[i]\n        streams.push({\n          index: stream.index,\n          id: stream.id,\n          codecpar: addressof(stream.codecpar),\n          nbFrames: stream.nbFrames,\n          metadata: stream.metadata,\n          duration: stream.duration,\n          startTime: stream.startTime,\n          disposition: stream.disposition,\n          timeBase: addressof(stream.timeBase)\n        })\n      }\n      formatContext = {\n        metadata: formatContext.metadata,\n        format: formatContext.format,\n        streams\n      }\n    }\n    dump += dumpAVFormatContextInterface(formatContext as AVFormatContextInterface, index, inputs[index])\n  })\n  return dump\n}","/*\n * libmedia abstract format encoder\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { AVCodecID } from 'avutil/codec'\nimport { AVFormat } from '../avformat'\nimport { AVOFormatContext } from '../AVFormatContext'\nimport AVPacket from 'avutil/struct/avpacket'\n\nexport default abstract class OFormat {\n\n  public type: AVFormat = AVFormat.UNKNOWN\n\n  public abstract init(formatContext: AVOFormatContext): number\n\n  public destroy(formatContext: AVOFormatContext): void {}\n\n  public abstract writeHeader(formatContext: AVOFormatContext): number\n\n  public abstract writeAVPacket(formatContext: AVOFormatContext, avpacket: pointer<AVPacket>): number\n\n  public abstract flush(formatContext: AVOFormatContext): number\n\n  public abstract writeTrailer(formatContext: AVOFormatContext): number\n\n}\n\nexport const OFormatSupportedCodecs: Record<Exclude<AVFormat, AVFormat.UNKNOWN>, AVCodecID[]> = {\n  [AVFormat.AAC]: [AVCodecID.AV_CODEC_ID_AAC],\n  [AVFormat.AVI]: [\n    AVCodecID.AV_CODEC_ID_MP3,\n    AVCodecID.AV_CODEC_ID_AC3,\n    AVCodecID.AV_CODEC_ID_AAC,\n\n    AVCodecID.AV_CODEC_ID_MPEG4,\n    AVCodecID.AV_CODEC_ID_H264\n  ],\n  [AVFormat.FLAC]: [AVCodecID.AV_CODEC_ID_FLAC],\n  [AVFormat.FLV]: [\n    AVCodecID.AV_CODEC_ID_MP3,\n    AVCodecID.AV_CODEC_ID_AAC,\n    AVCodecID.AV_CODEC_ID_SPEEX,\n    AVCodecID.AV_CODEC_ID_ADPCM_SWF,\n    AVCodecID.AV_CODEC_ID_NELLYMOSER,\n    AVCodecID.AV_CODEC_ID_PCM_ALAW,\n    AVCodecID.AV_CODEC_ID_PCM_MULAW,\n\n    AVCodecID.AV_CODEC_ID_MPEG4,\n    AVCodecID.AV_CODEC_ID_H264,\n    AVCodecID.AV_CODEC_ID_HEVC,\n    AVCodecID.AV_CODEC_ID_AV1,\n    AVCodecID.AV_CODEC_ID_VP9,\n    AVCodecID.AV_CODEC_ID_VVC\n  ],\n  [AVFormat.IVF]: [AVCodecID.AV_CODEC_ID_VP8, AVCodecID.AV_CODEC_ID_VP9],\n  [AVFormat.MATROSKA]: [\n    AVCodecID.AV_CODEC_ID_VORBIS,\n    AVCodecID.AV_CODEC_ID_OPUS,\n    AVCodecID.AV_CODEC_ID_AAC,\n    AVCodecID.AV_CODEC_ID_MP3,\n    AVCodecID.AV_CODEC_ID_FLAC,\n    AVCodecID.AV_CODEC_ID_ALAC,\n    AVCodecID.AV_CODEC_ID_DTS,\n    AVCodecID.AV_CODEC_ID_EAC3,\n    AVCodecID.AV_CODEC_ID_PCM_F32LE,\n    AVCodecID.AV_CODEC_ID_PCM_S16BE,\n    AVCodecID.AV_CODEC_ID_PCM_S16LE,\n\n    AVCodecID.AV_CODEC_ID_VP8,\n    AVCodecID.AV_CODEC_ID_VP9,\n    AVCodecID.AV_CODEC_ID_AV1,\n    AVCodecID.AV_CODEC_ID_H264,\n    AVCodecID.AV_CODEC_ID_HEVC,\n    AVCodecID.AV_CODEC_ID_VVC,\n    AVCodecID.AV_CODEC_ID_MPEG4,\n    \n    AVCodecID.AV_CODEC_ID_WEBVTT\n  ],\n  [AVFormat.WEBM]: [\n    AVCodecID.AV_CODEC_ID_VORBIS,\n    AVCodecID.AV_CODEC_ID_OPUS,\n\n    AVCodecID.AV_CODEC_ID_VP8,\n    AVCodecID.AV_CODEC_ID_VP9,\n    AVCodecID.AV_CODEC_ID_AV1,\n    \n    AVCodecID.AV_CODEC_ID_WEBVTT\n  ],\n  [AVFormat.MOV]: [\n    AVCodecID.AV_CODEC_ID_VORBIS,\n    AVCodecID.AV_CODEC_ID_OPUS,\n    AVCodecID.AV_CODEC_ID_AAC,\n    AVCodecID.AV_CODEC_ID_MP3,\n    AVCodecID.AV_CODEC_ID_FLAC,\n    AVCodecID.AV_CODEC_ID_SPEEX,\n    AVCodecID.AV_CODEC_ID_AC3,\n\n    AVCodecID.AV_CODEC_ID_VP9,\n    AVCodecID.AV_CODEC_ID_AV1,\n    AVCodecID.AV_CODEC_ID_H264,\n    AVCodecID.AV_CODEC_ID_HEVC,\n    AVCodecID.AV_CODEC_ID_VVC,\n    AVCodecID.AV_CODEC_ID_MPEG4,\n    \n    AVCodecID.AV_CODEC_ID_WEBVTT,\n    AVCodecID.AV_CODEC_ID_MOV_TEXT\n  ],\n  [AVFormat.MP3]: [AVCodecID.AV_CODEC_ID_MP3],\n  [AVFormat.MPEGTS]: [\n    AVCodecID.AV_CODEC_ID_OPUS,\n    AVCodecID.AV_CODEC_ID_AAC,\n    AVCodecID.AV_CODEC_ID_MP3,\n    AVCodecID.AV_CODEC_ID_AC3,,\n    AVCodecID.AV_CODEC_ID_DTS,\n    AVCodecID.AV_CODEC_ID_AAC_LATM,\n    AVCodecID.AV_CODEC_ID_EAC3,\n\n    AVCodecID.AV_CODEC_ID_MPEG4,\n    AVCodecID.AV_CODEC_ID_AV1,\n    AVCodecID.AV_CODEC_ID_H264,\n    AVCodecID.AV_CODEC_ID_HEVC,\n    AVCodecID.AV_CODEC_ID_VVC\n  ],\n  [AVFormat.OGGS]: [\n    AVCodecID.AV_CODEC_ID_VORBIS\n  ],\n  [AVFormat.WAV]: [],\n  [AVFormat.WEBVTT]: [AVCodecID.AV_CODEC_ID_WEBVTT]\n}","/*\n * libmedia mpegts encoder\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { AVOFormatContext } from '../AVFormatContext'\nimport AVPacket, { AVPacketFlags } from 'avutil/struct/avpacket'\nimport createMpegtsContext from './mpegts/function/createMpegtsContext'\nimport { PAT, PES, PMT, SectionPacket, TSPacket } from './mpegts/struct'\nimport { MpegtsContext, MpegtsStreamContext } from './mpegts/type'\nimport OFormat from './OFormat'\nimport * as mpegts from './mpegts/mpegts'\nimport * as ompegts from './mpegts/ompegts'\nimport * as array from 'common/util/array'\nimport * as object from 'common/util/object'\nimport { AVCodecID, AVMediaType, AVPacketSideDataType } from 'avutil/codec'\nimport createMpegtsStreamContext from './mpegts/function/createMpegtsStreamContext'\nimport AVBSFilter from '../bsf/AVBSFilter'\nimport AACRaw2ADTSFilter from '../bsf/aac/Raw2ADTSFilter'\nimport AACRaw2LATMFilter from '../bsf/aac/Raw2LATMFilter'\nimport OpusRaw2MpegtsFilter from '../bsf/opus/Raw2MpegtsFilter'\nimport Avcc2AnnexbFilter from '../bsf/h2645/Avcc2AnnexbFilter'\nimport { AV_TIME_BASE, AV_TIME_BASE_Q, NOPTS_VALUE_BIGINT } from 'avutil/constant'\nimport { AVFormat } from '../avformat'\nimport { memcpy } from 'cheap/std/memory'\nimport { avRescaleQ } from 'avutil/util/rational'\nimport { addAVPacketSideData, getAVPacketData, hasAVPacketSideData } from 'avutil/util/avpacket'\nimport { avMalloc } from 'avutil/util/mem'\nimport * as logger from 'common/util/logger'\n\nexport interface OMpegtsFormatOptions {\n  pesMaxSize?: number\n  delay?: number\n  latm?: boolean\n  patPeriod?: number\n}\n\nconst defaultOMpegtsFormatOptions = {\n  pesMaxSize: (16 - 1) * 184 + 170,\n  delay: 1.4,\n  latm: false,\n  patPeriod: 0.1\n}\n\nexport default class OMpegtsFormat extends OFormat {\n\n  public type: AVFormat = AVFormat.MPEGTS\n\n  private context: MpegtsContext\n\n  private sdtPacket: SectionPacket\n\n  private patPacket: SectionPacket\n\n  private pmtPacket: SectionPacket\n\n  private options: OMpegtsFormatOptions\n\n  private firstDtsCheck: boolean\n\n  private firstVideoCheck: boolean\n\n  private lastPatDst: bigint\n\n  private patPeriod: bigint\n\n  constructor(options: OMpegtsFormatOptions = {}) {\n    super()\n    this.context = createMpegtsContext()\n    this.options = object.extend({}, defaultOMpegtsFormatOptions, options)\n\n    this.options.pesMaxSize = this.options.pesMaxSize ? (this.options.pesMaxSize + 14 + 183) / 184 * 184 - 14 : 0\n    this.firstDtsCheck = false\n    this.firstVideoCheck = false\n\n    this.patPeriod = static_cast<int64>(this.options.patPeriod * AV_TIME_BASE)\n  }\n\n  public init(context: AVOFormatContext): number {\n    context.ioWriter.setEndian(true)\n    return 0\n  }\n\n  public destroy(context: AVOFormatContext): void {\n    super.destroy(context)\n    array.each(context.streams, (stream) => {\n      const streamContext = stream.privData as MpegtsStreamContext\n      if (streamContext.filter) {\n        streamContext.filter.destroy()\n        streamContext.filter = null\n      }\n    })\n  }\n\n  public writeHeader(context: AVOFormatContext): number {\n\n    this.context.pat = new PAT()\n    this.context.pat.program2PmtPid.set(1, 4096)\n\n    this.context.pmt = new PMT()\n    this.context.pmt.programNumber = 1\n\n    array.each(context.streams, (stream) => {\n\n      stream.timeBase.den = 90000\n      stream.timeBase.num = 1\n\n      const pid = this.context.startPid++\n\n      if (this.context.pmt.pcrPid <= 0) {\n        this.context.pmt.pcrPid = pid\n      }\n\n      let streamType = ompegts.getStreamType(stream)\n\n      const streamContext = createMpegtsStreamContext()\n\n      stream.privData = streamContext\n\n      const tsPacket = new TSPacket()\n      tsPacket.pid = pid\n      tsPacket.adaptationFieldControl = 0x01\n\n      streamContext.tsPacket = tsPacket\n      streamContext.pid = pid\n\n      let filter: AVBSFilter = null\n\n      switch (streamType) {\n        case mpegts.TSStreamType.AUDIO_AAC:\n          if (this.options.latm) {\n            streamContext.latm = true\n            streamType = mpegts.TSStreamType.AUDIO_AAC_LATM\n            filter = new AACRaw2LATMFilter()\n          }\n          else {\n            filter = new AACRaw2ADTSFilter()\n          }\n\n          break\n        case mpegts.TSStreamType.VIDEO_H264:\n        case mpegts.TSStreamType.VIDEO_HEVC:\n          filter = new Avcc2AnnexbFilter()\n          break\n        case mpegts.TSStreamType.PRIVATE_DATA:\n          if (stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_OPUS) {\n            filter = new OpusRaw2MpegtsFilter()\n          }\n          break\n      }\n\n      if (filter) {\n        filter.init(addressof(stream.codecpar), addressof(stream.timeBase))\n      }\n\n      streamContext.filter = filter\n      this.context.pmt.pid2StreamType.set(pid, streamType)\n\n      const pes = new PES()\n      pes.pid = pid\n      pes.streamType = streamType\n      pes.streamId = ompegts.getStreamId(stream)\n      streamContext.pes = pes\n    })\n\n    this.patPacket = new SectionPacket()\n    this.pmtPacket = new SectionPacket()\n    this.sdtPacket = new SectionPacket()\n\n    this.sdtPacket.pid = mpegts.TSPid.SDT\n    this.sdtPacket.adaptationFieldControl = 0x01\n    this.patPacket.pid = mpegts.TSPid.PAT\n    this.patPacket.adaptationFieldControl = 0x01\n    this.pmtPacket.pid = 4096\n    this.pmtPacket.adaptationFieldControl = 0x01\n\n    this.sdtPacket.payload = ompegts.getSDTPayload()\n    this.patPacket.payload = ompegts.getPATPayload(this.context.pat)\n    this.pmtPacket.payload = ompegts.getPMTPayload(this.context.pmt, context.streams)\n\n    ompegts.writeSection(context.ioWriter, this.sdtPacket, this.context)\n    ompegts.writeSection(context.ioWriter, this.patPacket, this.context)\n    ompegts.writeSection(context.ioWriter, this.pmtPacket, this.context)\n\n    return 0\n  }\n\n  public writeAVPacket(formatContext: AVOFormatContext, avpacket: pointer<AVPacket>): number {\n\n    if (!avpacket.size) {\n      logger.warn(`packet\\'s size is 0: ${avpacket.streamIndex}, ignore it`)\n      return\n    }\n\n    const stream = formatContext.getStreamByIndex(avpacket.streamIndex)\n\n    if (!stream) {\n      logger.warn(`can not found the stream width the packet\\'s streamIndex: ${avpacket.streamIndex}, ignore it`)\n      return\n    }\n\n    if (!this.firstDtsCheck) {\n      if (avRescaleQ(avpacket.dts, avpacket.timeBase, stream.timeBase)\n        < static_cast<int64>(this.options.delay * 90000)\n      ) {\n        this.context.delay = static_cast<int64>(this.options.delay * 90000)\n        - avRescaleQ(avpacket.dts, avpacket.timeBase, stream.timeBase)\n      }\n      this.firstDtsCheck = true\n      this.lastPatDst = avRescaleQ(avpacket.dts, avpacket.timeBase, AV_TIME_BASE_Q)\n    }\n\n    if (this.patPeriod > 0n\n      && avRescaleQ(avpacket.dts, avpacket.timeBase, AV_TIME_BASE_Q) - this.lastPatDst > this.patPeriod\n    ) {\n      ompegts.writeSection(formatContext.ioWriter, this.sdtPacket, this.context)\n      ompegts.writeSection(formatContext.ioWriter, this.patPacket, this.context)\n      ompegts.writeSection(formatContext.ioWriter, this.pmtPacket, this.context)\n      this.lastPatDst = avRescaleQ(avpacket.dts, avpacket.timeBase, AV_TIME_BASE_Q)\n    }\n\n    const streamContext = stream.privData as MpegtsStreamContext\n\n    let buffer = getAVPacketData(avpacket)\n\n    if (streamContext.filter) {\n      if (!this.firstVideoCheck\n        && !hasAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA)\n        && stream.codecpar.extradata\n        && (\n          stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_H264\n            || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_HEVC\n            || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_VVC\n            || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_MPEG4\n        )\n      ) {\n        this.firstVideoCheck = true\n        const extradata = avMalloc(stream.codecpar.extradataSize)\n        memcpy(extradata, stream.codecpar.extradata, stream.codecpar.extradataSize)\n        addAVPacketSideData(avpacket, AVPacketSideDataType.AV_PKT_DATA_NEW_EXTRADATA, extradata, stream.codecpar.extradataSize)\n      }\n      streamContext.filter.sendAVPacket(avpacket)\n      streamContext.filter.receiveAVPacket(avpacket)\n      buffer = getAVPacketData(avpacket)\n    }\n\n    if (!buffer.length) {\n      return 0\n    }\n\n    buffer = buffer.slice()\n\n    let currentWrote = false\n\n    if (streamContext.pesSlices.total + buffer.length > this.options.pesMaxSize\n      || stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO\n    ) {\n      if (streamContext.pesSlices.total === 0) {\n        streamContext.pesSlices.total = buffer.length\n        streamContext.pesSlices.buffers.push(buffer)\n        if (avpacket.dts !== NOPTS_VALUE_BIGINT) {\n          streamContext.pes.dts = avRescaleQ(avpacket.dts, avpacket.timeBase, stream.timeBase) + this.context.delay\n        }\n        if (avpacket.pts !== NOPTS_VALUE_BIGINT) {\n          streamContext.pes.pts = avRescaleQ(avpacket.pts, avpacket.timeBase, stream.timeBase) + this.context.delay\n        }\n        currentWrote = true\n      }\n\n      if (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY) {\n        streamContext.pes.randomAccessIndicator = 1\n      }\n\n      ompegts.writePES(formatContext.ioWriter, streamContext.pes, streamContext.pesSlices, stream, this.context)\n\n      streamContext.pesSlices.total = 0\n      streamContext.pesSlices.buffers = []\n    }\n\n    if (!currentWrote) {\n      if (streamContext.pesSlices.total === 0) {\n        if (avpacket.dts !== NOPTS_VALUE_BIGINT) {\n          streamContext.pes.dts = avRescaleQ(avpacket.dts, avpacket.timeBase, stream.timeBase) + this.context.delay\n        }\n        if (avpacket.pts !== NOPTS_VALUE_BIGINT) {\n          streamContext.pes.pts = avRescaleQ(avpacket.pts, avpacket.timeBase, stream.timeBase) + this.context.delay\n        }\n        if (avpacket.flags & AVPacketFlags.AV_PKT_FLAG_KEY) {\n          streamContext.pes.randomAccessIndicator = 1\n        }\n      }\n      streamContext.pesSlices.total += buffer.length\n      streamContext.pesSlices.buffers.push(buffer)\n    }\n\n    return 0\n  }\n\n  public writeTrailer(context: AVOFormatContext): number {\n\n    array.each(context.streams, (stream) => {\n      const streamContext = stream.privData as MpegtsStreamContext\n      if (streamContext.pesSlices.total) {\n        ompegts.writePES(context.ioWriter, streamContext.pes, streamContext.pesSlices, stream, this.context)\n      }\n      streamContext.pesSlices.total = 0\n      streamContext.pesSlices.buffers = []\n    })\n\n    context.ioWriter.flush()\n\n    return 0\n  }\n\n  public flush(context: AVOFormatContext): number {\n    context.ioWriter.flush()\n    return 0\n  }\n\n}\n","/*\n * libmedia calculate crc32\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nexport function calculateCRC32(data: Uint8Array) {\n  const generatorPolynomial = 0x04C11DB7\n  let crc = 0xFFFFFFFF\n  for (let i = 0; i < data.length; i++) {\n    crc ^= data[i] << 24\n    for (let j = 0; j < 8; j++) {\n      if (crc & 0x80000000) {\n        crc = (crc << 1) ^ generatorPolynomial\n      }\n      else {\n        crc <<= 1\n      }\n    }\n  }\n  return crc >>> 0\n}\n","/*\n * libmedia create mpegts context\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { NOPTS_VALUE } from 'avutil/constant'\nimport { PAT, PMT } from '../struct'\nimport { MpegtsContext } from '../type'\n\nexport default function createMpegtsContext(): MpegtsContext {\n\n  return {\n    currentProgram: NOPTS_VALUE,\n    currentPmtPid: NOPTS_VALUE,\n    tsPacketSize: NOPTS_VALUE,\n    hasPAT: false,\n    hasPMT: false,\n    tsSliceQueueMap: new Map(),\n    pat: new PAT(),\n    pmt: new PMT(),\n    program2Pmt: new Map(),\n    ioEnd: false,\n\n    startPid: 0x100,\n    delay: 0n\n  }\n}\n","/*\n * libmedia create mpegts stream context\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { NOPTS_VALUE } from 'avutil/constant'\nimport { MpegtsStreamContext } from '../type'\n\nexport default function createMpegtsStreamContext(): MpegtsStreamContext {\n  return {\n    pid: NOPTS_VALUE,\n    filter: null,\n    tsPacket: null,\n    pes: null,\n    continuityCounter: 0,\n    pesSlices: {\n      total: 0,\n      buffers: []\n    },\n    latm: false\n  }\n}\n","/*\n * libmedia mpegts identify defined\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\n\nexport const TS_FEC_PACKET_SIZE = 204\n\nexport const TS_DVHS_PACKET_SIZE = 192\n\nexport const TS_PACKET_SIZE = 188\n\nexport const TS_MAX_PACKET_SIZE = 204\n\nexport const NB_PID_MAX = 8192\n\nexport const USUAL_SECTION_SIZE = 1024\n\nexport const MAX_SECTION_SIZE = 4096\n\nexport const PROBE_PACKET_MAX_BUF = 8192\n\nexport const PROBE_PACKET_MARGIN = 5\n\n/**\n * maximum size in which we look for synchronization if\n * synchronization is lost \n */\nexport const MAX_RESYNC_SIZE = 65536\n\nexport const MAX_PES_PAYLOAD = 200 * 1024\n\nexport const MAX_MP4_DESCR_COUNT = 16\n\nexport const REGISTRATION_DESCRIPTOR = 0x05\n\nexport const ISO_639_LANGUAGE_DESCRIPTOR = 0x0a\n\nexport const enum TSPid {\n  /**\n   * Program Association Table\n   */\n  PAT = 0x0000,\n  /**\n   * Conditional Access Table\n   */\n  CAT = 0x0001,\n  /**\n   * Transport Stream Description Table\n   */\n  TSDT = 0x0002,\n  IPMP = 0x0003,\n\n  /**\n   * PID from 0x0004 to 0x000F are reserved\n   */\n\n  /**\n   * Network Information Table\n   */\n  NIT = 0x0010,\n  /**\n   * Service Description Table\n   */\n  SDT = 0x0011,\n  /**\n   * Bouquet Association Table\n   */\n  BAT = 0x0011,\n  /**\n   * Event Information Table\n   */\n  EIT = 0x0012,\n  /**\n   * Running Status Table\n   */\n  RST = 0x0013,\n  /**\n   * Time and Date Table \n   */\n  TDT = 0x0014,\n  TOT = 0x0014,\n  NET_SYNC = 0x0015,\n  /**\n   * RAR Notification Table\n   */\n  RNT = 0x0016,\n\n  /**\n   * PID from 0x0017 to 0x001B are reserved for future use\n   * \n   */\n\n  /**\n   * PID value 0x001C allocated to link-local inband signalling shall not be\n   * used on any broadcast signals. It shall only be used between devices in a\n   * controlled environment. \n   */\n  LINK_LOCAL = 0x001C,\n  MEASUREMENT = 0x001D,\n  /**\n   * Discontinuity Information Table\n   */\n  DIT = 0x001E,\n  /**\n   * Selection Information Table\n   */\n  SIT = 0x001F,\n  /**\n   * PID from 0x0020 to 0x1FFA may be assigned as needed to PMT, elementary\n   * streams and other data tables\n   */\n  FIRST_OTHER = 0x0020,\n  LAST_OTHER = 0x1FFA,\n  /**\n   * PID 0x1FFB is used by DigiCipher 2/ATSC MGT metadata\n   * PID from 0x1FFC to 0x1FFE may be assigned as needed to PMT, elementary\n   * streams and other data tables\n   */\n\n  /**\n   * Null packet (used for fixed bandwidth padding)\n   */\n  NULL = 0x1FFF,\n  /**\n   * m2ts pids\n   */\n  M2TS_PMT = 0x0100,\n  M2TS_PCR = 0x1001,\n  M2TS_VIDEO = 0x1011,\n  M2TS_AUDIO_START = 0x1100,\n  M2TS_PGSSUB_START = 0x1200,\n  M2TS_TEXTSUB = 0x1800,\n  M2TS_SECONDARY_AUDIO_START = 0x1A00,\n  M2TS_SECONDARY_VIDEO_START = 0x1B00\n}\n\nexport const enum TSTid {\n  /**\n   * Program Association section\n   */\n  PAT = 0x00,\n  /**\n   * Conditional Access section \n   */\n  CAT = 0x01,\n  /**\n   * Program Map section\n   */\n  PMT = 0x02,\n  /**\n   * Transport Stream Description section \n   */\n  TSDT = 0x03,\n\n  /**\n   * TID from 0x04 to 0x3F are reserved\n   */\n\n  M4OD = 0x05,\n  /**\n   * Network Information section - actual network\n   */\n  NIT = 0x40,\n  /**\n   * Network Information section - actual network\n   */\n  ONIT = 0x41,\n  /**\n   * Service Description section - actual TS\n   */\n  SDT = 0x42,\n\n  /**\n   * TID from 0x43 to 0x45 are reserved for future use\n   */\n\n  /**\n   * Service Descrition section - other TS \n   */\n  OSDT = 0x46,\n\n  /**\n   * TID from 0x47 to 0x49 are reserved for future use\n   */\n\n  /**\n   * Bouquet Association section\n   */\n  BAT = 0x4A,\n  /**\n   * Update Notification Table section\n   */\n  UNT = 0x4B,\n  /**\n   * Downloadable Font Info section\n   */\n  DFI = 0x4C,\n\n  /**\n   * TID 0x4D is reserved for future use \n   */\n\n  /**\n   * Event Information section - actual TS\n   */\n  EIT = 0x4E,\n  /**\n   * Event Information section - other TS\n   */\n  OEIT = 0x4F,\n  /**\n   * Event Information section schedule - actual TS \n   */\n  EITS_START = 0x50,\n  /**\n   * Event Information section schedule - actual TS \n   */\n  EITS_END = 0x5F,\n  /**\n   *  Event Information section schedule - other TS\n   */\n  OEITS_START = 0x60,\n  /**\n   * Event Information section schedule - other TS\n   */\n  OEITS_END = 0x6F,\n  /**\n   * Time Date section\n   */\n  TDT = 0x70,\n  /**\n   * Running Status section\n   */\n  RST = 0x71,\n  /**\n   * Stuffing section\n   */\n  ST = 0x72,\n  /**\n   * Time Offset section\n   */\n  TOT = 0x73,\n  /**\n   * Application Inforamtion section\n   */\n  AIT = 0x74,\n  /**\n   * Container section\n   */\n  CT = 0x75,\n  /**\n   * Related Content section\n   */\n  RCT = 0x76,\n  /**\n   * Related Content section\n   */\n  CIT = 0x77,\n  /**\n   * MPE-FEC section\n   */\n  MPE_FEC = 0x78,\n  /**\n   * Resolution Provider Notification section\n   */\n  RPNT = 0x79,\n  /**\n   * MPE-IFEC section\n   */\n  MPE_IFEC = 0x7A,\n  /**\n   * Protection Message section\n   */\n  PROTMT = 0x7B,\n\n  /**\n   * TID from 0x7C to 0x7D are reserved for future use\n   */\n\n  /**\n   * Discontinuity Information section\n   */\n  DIT = 0x7E,\n  /**\n   * Selection Information section\n   */\n  SIT = 0x7F\n\n  /**\n   * TID from 0x80 to 0xFE are user defined\n   * TID 0xFF is reserved\n   */\n}\n\nexport const enum TSStreamType {\n  NONE = 0x00,\n  VIDEO_MPEG1 = 0x01,\n  VIDEO_MPEG2 = 0x02,\n  AUDIO_MPEG1 = 0x03,\n  AUDIO_MPEG2 = 0x04,\n  PRIVATE_SECTION = 0x05,\n  PRIVATE_DATA = 0x06,\n  AUDIO_AAC = 0x0f,\n  AUDIO_AAC_LATM = 0x11,\n  VIDEO_MPEG4 = 0x10,\n  METADATA = 0x15,\n  VIDEO_H264 = 0x1b,\n  VIDEO_HEVC = 0x24,\n  VIDEO_VVC = 0x33,\n  VIDEO_CAVS = 0x42,\n  VIDEO_VC1 = 0xea,\n  VIDEO_DIRAC = 0xd1,\n\n  AUDIO_AC3 = 0x81,\n  AUDIO_DTS = 0x82,\n  AUDIO_TRUEHD = 0x83,\n  kSCTE35 = 0x86,\n  AUDIO_EAC3 = 0x87\n}\n\n/**\n * ISO/IEC 13818-1 Table 2-22\n */\nexport const enum TSStreamId {\n  PROGRAM_STREAM_MAP = 0xbc,\n  PRIVATE_STREAM_1 = 0xbd,\n  PADDING_STREAM = 0xbe,\n  PRIVATE_STREAM_2 = 0xbf,\n  AUDIO_STREAM_0 = 0xc0,\n  VIDEO_STREAM_0 = 0xe0,\n  ECM_STREAM = 0xf0,\n  EMM_STREAM = 0xf1,\n  DSMCC_STREAM = 0xf2,\n  TYPE_E_STREAM = 0xf8,\n  METADATA_STREAM = 0xfc,\n  EXTENDED_STREAM_ID = 0xfd,\n  PROGRAM_STREAM_DIRECTORY = 0xff\n}\n\n/**\n * ISO/IEC 13818-1 Table 2-45\n */\nexport const enum TSDescriptor {\n  VIDEO_STREAM = 0x02,\n  REGISTRATION = 0x05,\n  ISO_639_LANGUAGE = 0x0a,\n  IOD = 0x1d,\n  SL = 0x1e,\n  FMC = 0x1f,\n  METADATA = 0x26,\n  METADATA_STD = 0x27\n}\n\nexport const StreamType2AVCodecId: Partial<Record<TSStreamType, [AVMediaType, AVCodecID]>> = {\n  [TSStreamType.AUDIO_AAC]: [AVMediaType.AVMEDIA_TYPE_AUDIO, AVCodecID.AV_CODEC_ID_AAC],\n  [TSStreamType.AUDIO_AAC_LATM]: [AVMediaType.AVMEDIA_TYPE_AUDIO, AVCodecID.AV_CODEC_ID_AAC],\n  [TSStreamType.AUDIO_MPEG1]: [AVMediaType.AVMEDIA_TYPE_AUDIO, AVCodecID.AV_CODEC_ID_MP3],\n  [TSStreamType.AUDIO_MPEG2]: [AVMediaType.AVMEDIA_TYPE_AUDIO, AVCodecID.AV_CODEC_ID_MP3],\n  [TSStreamType.VIDEO_H264]: [AVMediaType.AVMEDIA_TYPE_VIDEO, AVCodecID.AV_CODEC_ID_H264],\n  [TSStreamType.VIDEO_MPEG4]: [AVMediaType.AVMEDIA_TYPE_VIDEO, AVCodecID.AV_CODEC_ID_MPEG4],\n  [TSStreamType.VIDEO_HEVC]: [AVMediaType.AVMEDIA_TYPE_VIDEO, AVCodecID.AV_CODEC_ID_HEVC],\n  [TSStreamType.VIDEO_VVC]: [AVMediaType.AVMEDIA_TYPE_VIDEO, AVCodecID.AV_CODEC_ID_VVC],\n  [TSStreamType.AUDIO_AC3]: [AVMediaType.AVMEDIA_TYPE_AUDIO, AVCodecID.AV_CODEC_ID_AC3],\n  [TSStreamType.AUDIO_EAC3]: [AVMediaType.AVMEDIA_TYPE_AUDIO, AVCodecID.AV_CODEC_ID_EAC3]\n}\n","/*\n * libmedia mpegts encode util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport IOWriter from 'common/io/IOWriterSync'\nimport { PAT, PES, PMT, SectionPacket, TSPacket } from './struct'\nimport { MpegtsContext, MpegtsStreamContext } from './type'\nimport * as mpegts from './mpegts'\nimport * as logger from 'common/util/logger'\nimport Stream from '../../AVStream'\nimport mktag from '../../function/mktag'\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\nimport concatTypeArray from 'common/function/concatTypeArray'\nimport { NOPTS_VALUE_BIGINT, UINT16_MAX } from 'avutil/constant'\nimport { calculateCRC32 } from './function/crc32'\n\nfunction getAdaptationFieldLength(tsPacket: TSPacket) {\n  if (tsPacket.adaptationFieldControl !== 0x02 && tsPacket.adaptationFieldControl !== 0x03) {\n    return 0\n  }\n\n  if (tsPacket.adaptationFieldControl === 0x02) {\n    return mpegts.TS_PACKET_SIZE - 4\n  }\n\n  let len = 2\n\n  if (tsPacket.adaptationFieldInfo.pcrFlag) {\n    len += 6\n  }\n  if (tsPacket.adaptationFieldInfo.opcrFlag) {\n    len += 6\n  }\n  if (tsPacket.adaptationFieldInfo.splicingPointFlag) {\n    len += 1\n  }\n  if (tsPacket.adaptationFieldInfo.transportPrivateDataFlag) {\n    len += tsPacket.adaptationFieldInfo.transportPrivateData\n      ? tsPacket.adaptationFieldInfo.transportPrivateData.length\n      : 0\n  }\n  if (tsPacket.adaptationFieldInfo.adaptationFieldExtensionFlag) {\n    len += tsPacket.adaptationFieldInfo.extension ? tsPacket.adaptationFieldInfo.extension.length : 0\n  }\n\n  if (len > 256) {\n    logger.warn('adaptationField size is too large')\n  }\n\n  return len\n}\n\nfunction getPESHeaderLength(pes: PES) {\n  let len = 6\n\n  const streamId = pes.streamId\n\n  if (streamId !== mpegts.TSStreamId.PROGRAM_STREAM_MAP\n    && streamId !== mpegts.TSStreamId.PADDING_STREAM\n    && streamId !== mpegts.TSStreamId.PRIVATE_STREAM_2\n    && streamId !== mpegts.TSStreamId.ECM_STREAM\n    && streamId !== mpegts.TSStreamId.EMM_STREAM\n    && streamId !== mpegts.TSStreamId.PROGRAM_STREAM_DIRECTORY\n    && streamId !== mpegts.TSStreamId.DSMCC_STREAM\n    && streamId !== mpegts.TSStreamId.TYPE_E_STREAM\n  ) {\n    len += 3\n\n    if (pes.pts !== NOPTS_VALUE_BIGINT) {\n      len += 5\n    }\n    if (pes.dts !== NOPTS_VALUE_BIGINT && pes.pts !== NOPTS_VALUE_BIGINT && pes.dts !== pes.pts) {\n      len += 5\n    }\n  }\n\n  return len\n}\n\nfunction writePESPayload(\n  ioWriter: IOWriter,\n  pes: PES,\n  payload: Uint8Array,\n  stream: Stream,\n  mpegtsContext: MpegtsContext\n) {\n\n  const streamContext = stream.privData as MpegtsStreamContext\n  const tsPacket = streamContext.tsPacket\n\n  if (pes.pid === mpegtsContext.pmt.pcrPid) {\n    tsPacket.adaptationFieldControl = 0x03\n    tsPacket.adaptationFieldInfo.pcrFlag = 1\n    tsPacket.adaptationFieldInfo.pcr = pes.dts * 300n\n  }\n  tsPacket.adaptationFieldInfo.randomAccessIndicator = pes.randomAccessIndicator\n\n  if (pes.randomAccessIndicator) {\n    tsPacket.adaptationFieldControl = 0x03\n  }\n\n  let adaptationFieldLength = getAdaptationFieldLength(tsPacket)\n\n  let continuityCounter = streamContext.continuityCounter\n\n  if (4 + adaptationFieldLength + payload.length <= mpegts.TS_PACKET_SIZE) {\n    tsPacket.payloadUnitStartIndicator = 0x01\n    tsPacket.payload = payload\n    tsPacket.continuityCounter = (continuityCounter++) % 16\n\n    writeTSPacket(ioWriter, tsPacket, mpegtsContext)\n\n    streamContext.continuityCounter = continuityCounter % 16\n    return\n  }\n\n  let len = mpegts.TS_PACKET_SIZE - (4 + adaptationFieldLength)\n  let pos = 0\n\n  while (pos < payload.length) {\n\n    let next = Math.min(pos + len, payload.length)\n\n    if (pos === 0) {\n      tsPacket.payloadUnitStartIndicator = 0x01\n    }\n    else {\n      tsPacket.payloadUnitStartIndicator = 0x00\n    }\n\n    if (tsPacket.adaptationFieldControl === 0x01 && (next - pos + 4 === mpegts.TS_PACKET_SIZE - 1)) {\n      // padding 至少需要 2 字节\n      next--\n    }\n\n    tsPacket.payload = payload.subarray(pos, next)\n    tsPacket.continuityCounter = (continuityCounter++) % 16\n\n    writeTSPacket(ioWriter, tsPacket, mpegtsContext)\n\n    if (pos === 0) {\n      tsPacket.adaptationFieldInfo.randomAccessIndicator = 0\n      tsPacket.adaptationFieldControl = 0x01\n      tsPacket.adaptationFieldInfo.pcrFlag = 0\n      adaptationFieldLength = getAdaptationFieldLength(tsPacket)\n      len = mpegts.TS_PACKET_SIZE - (4 + adaptationFieldLength)\n    }\n\n    pos = next\n  }\n\n  streamContext.continuityCounter = continuityCounter % 16\n}\n\nexport function getStreamType(stream: Stream) {\n\n  const context = stream.privData as MpegtsStreamContext || {} as any\n\n  switch (stream.codecpar.codecId) {\n    case AVCodecID.AV_CODEC_ID_MPEG1VIDEO:\n    case AVCodecID.AV_CODEC_ID_MPEG2VIDEO:\n      return mpegts.TSStreamType.VIDEO_MPEG2\n    case AVCodecID.AV_CODEC_ID_MPEG4:\n      return mpegts.TSStreamType.VIDEO_MPEG4\n    case AVCodecID.AV_CODEC_ID_H264:\n      return mpegts.TSStreamType.VIDEO_H264\n    case AVCodecID.AV_CODEC_ID_CAVS:\n      return mpegts.TSStreamType.VIDEO_CAVS\n    case AVCodecID.AV_CODEC_ID_HEVC:\n      return mpegts.TSStreamType.VIDEO_HEVC\n    case AVCodecID.AV_CODEC_ID_VVC:\n      return mpegts.TSStreamType.VIDEO_VVC\n    case AVCodecID.AV_CODEC_ID_DIRAC:\n      return mpegts.TSStreamType.VIDEO_DIRAC\n    case AVCodecID.AV_CODEC_ID_VC1:\n      return mpegts.TSStreamType.VIDEO_VC1\n\n    case AVCodecID.AV_CODEC_ID_MP2:\n    case AVCodecID.AV_CODEC_ID_MP3:\n      return stream.codecpar.sampleRate < 32000\n        ? mpegts.TSStreamType.AUDIO_MPEG2\n        : mpegts.TSStreamType.AUDIO_MPEG1\n\n    case AVCodecID.AV_CODEC_ID_AAC:\n      return context.latm\n        ? mpegts.TSStreamType.AUDIO_AAC_LATM\n        : mpegts.TSStreamType.AUDIO_AAC\n    case AVCodecID.AV_CODEC_ID_AAC_LATM:\n      return mpegts.TSStreamType.AUDIO_AAC_LATM\n    case AVCodecID.AV_CODEC_ID_AC3:\n      return mpegts.TSStreamType.AUDIO_AC3\n    case AVCodecID.AV_CODEC_ID_OPUS:\n    case AVCodecID.AV_CODEC_ID_AV1:\n      return mpegts.TSStreamType.PRIVATE_DATA\n    case AVCodecID.AV_CODEC_ID_TRUEHD:\n      return mpegts.TSStreamType.AUDIO_TRUEHD\n    case AVCodecID.AV_CODEC_ID_EAC3:\n      return mpegts.TSStreamType.AUDIO_EAC3\n    case AVCodecID.AV_CODEC_ID_DTS:\n      return mpegts.TSStreamType.AUDIO_DTS\n    case AVCodecID.AV_CODEC_ID_DVB_SUBTITLE:\n    case AVCodecID.AV_CODEC_ID_SMPTE_KLV:\n      return mpegts.TSStreamType.PRIVATE_DATA\n\n    default:\n      return mpegts.TSStreamType.PRIVATE_DATA\n  }\n}\n\nexport function getStreamId(stream: Stream) {\n  if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_VIDEO) {\n    if (stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_DIRAC) {\n      return mpegts.TSStreamId.EXTENDED_STREAM_ID\n    }\n    else {\n      return mpegts.TSStreamId.VIDEO_STREAM_0\n    }\n  }\n  else if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO\n    && (\n      stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_MP2\n        || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_MP3\n        || stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_AAC\n    )\n  ) {\n    return mpegts.TSStreamId.AUDIO_STREAM_0\n  }\n  else if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_AUDIO\n    && stream.codecpar.codecId === AVCodecID.AV_CODEC_ID_AC3\n  ) {\n    return mpegts.TSStreamId.EXTENDED_STREAM_ID\n  }\n  else if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_DATA) {\n    return mpegts.TSStreamId.METADATA_STREAM\n  }\n  else {\n    return mpegts.TSStreamId.PRIVATE_STREAM_1\n  }\n}\n\nexport function getPATPayload(pat: PAT) {\n\n  const buffer = new Uint8Array(1024)\n\n  buffer[1] = 0x00\n  buffer[2] = 0xb0\n\n  // transport_stream_id 1 \n  buffer[5] = 1\n\n  // current_next_indicator\n  buffer[6] = (3 << 6) | 0x01\n\n  let pos = 9\n\n  if (pat.networkPid > -1) {\n    pos += 2\n    buffer[pos++] = (7 << 5) | ((pat.networkPid >> 8) & 0x1f)\n    buffer[pos++] = (pat.networkPid & 0xff)\n  }\n\n  pat.program2PmtPid.forEach((pid, programNumber) => {\n    buffer[pos++] = (programNumber >> 8) & 0xff\n    buffer[pos++] = programNumber & 0xff\n    buffer[pos++] = (7 << 5) | (pid >> 8) & 0x1f\n    buffer[pos++] = pid & 0xff\n  })\n\n  const crcPos = pos\n  pos += 4\n\n  for (let i = pos; i < mpegts.TS_PACKET_SIZE - 4; i++) {\n    buffer[i] = 0xff\n  }\n\n  const len = (pos - 1) - 3\n\n  buffer[2] |= ((len >> 8) & 0x0f)\n  buffer[3] = len & 0xff\n\n  // CRC32\n  const crc32 = calculateCRC32(buffer.subarray(1, crcPos))\n  buffer[crcPos] = (crc32 >> 24) & 0xff\n  buffer[crcPos + 1] = (crc32 >> 16) & 0xff\n  buffer[crcPos + 2] = (crc32 >> 8) & 0xff\n  buffer[crcPos + 3] = crc32 & 0xff\n\n  return buffer.slice(0, mpegts.TS_PACKET_SIZE - 4)\n}\n\nexport function getPMTPayload(pmt: PMT, streams: Stream[]) {\n  const buffer = new Uint8Array(1024)\n\n  buffer[1] = 0x02\n  buffer[2] = 0xb0\n\n  buffer[4] = ((pmt.programNumber >> 8) & 0x0f)\n  buffer[5] = pmt.programNumber & 0xff\n\n  // current_next_indicator\n  buffer[6] = (3 << 6) | 0x01\n\n  let pos = 9\n\n  buffer[pos++] = (7 << 5) | (pmt.pcrPid >> 8) & 0x1f\n  buffer[pos++] = pmt.pcrPid & 0xff\n\n  const programInfoLengthPos = pos\n  pos += 2\n\n  function putRegistrationDescriptor(tag: number) {\n    buffer[pos++] = mpegts.REGISTRATION_DESCRIPTOR\n    buffer[pos++] = 4\n    buffer[pos++] = tag >> 24\n    buffer[pos++] = tag >> 16\n    buffer[pos++] = tag >> 8\n    buffer[pos++] = tag\n  }\n\n  let len = 0xf000 | (pos - programInfoLengthPos - 2)\n  buffer[programInfoLengthPos] = len >> 8\n  buffer[programInfoLengthPos + 1] = len\n\n  for (let i = 0; i < streams.length; i++) {\n    const streamType = getStreamType(streams[i])\n    buffer[pos++] = streamType\n\n    const streamContext = streams[i].privData as MpegtsStreamContext\n\n    buffer[pos++] = (7 << 5) | (streamContext.pid >> 8) & 0x1f\n    buffer[pos++] = streamContext.pid  & 0xff\n\n    const descLengthPos = pos\n    pos += 2\n\n    const codecId = streams[i].codecpar.codecId\n\n    switch (streams[i].codecpar.codecType) {\n      case AVMediaType.AVMEDIA_TYPE_AUDIO: {\n        if (codecId === AVCodecID.AV_CODEC_ID_AC3) {\n          putRegistrationDescriptor(mktag('AC-3'))\n        }\n        if (codecId === AVCodecID.AV_CODEC_ID_EAC3) {\n          putRegistrationDescriptor(mktag('EAC3'))\n        }\n        if (codecId === AVCodecID.AV_CODEC_ID_S302M) {\n          putRegistrationDescriptor(mktag('BSSD'))\n        }\n        if (codecId === AVCodecID.AV_CODEC_ID_OPUS) {\n          putRegistrationDescriptor(mktag('Opus'))\n          buffer[pos++] = 0x7f\n          buffer[pos++] = 2\n          buffer[pos++] = 0x80\n          buffer[pos++] = streams[i].codecpar.chLayout.nbChannels\n        }\n        // language und\n        buffer[pos++] = mpegts.ISO_639_LANGUAGE_DESCRIPTOR\n        buffer[pos++] = 4\n        buffer[pos++] = 117\n        buffer[pos++] = 110\n        buffer[pos++] = 100\n        buffer[pos++] = 0\n        break\n      }\n      case AVMediaType.AVMEDIA_TYPE_VIDEO: {\n        if (codecId === AVCodecID.AV_CODEC_ID_AV1) {\n          putRegistrationDescriptor(mktag('AV01'))\n          if (streams[i].codecpar.extradata) {\n            buffer[pos++] = 0x80\n            buffer[pos++] = streams[i].codecpar.extradataSize\n            for (let j = 0; j < streams[i].codecpar.extradataSize; j++) {\n              buffer[pos++] = accessof(reinterpret_cast<pointer<uint8>>(streams[i].codecpar.extradata + j))\n            }\n          }\n        }\n      }\n    }\n\n    let len = 0xf000 | (pos - descLengthPos - 2)\n    buffer[descLengthPos] = len >> 8\n    buffer[descLengthPos + 1] = len\n  }\n\n  const crcPos = pos\n  pos += 4\n\n  for (let i = pos; i < mpegts.TS_PACKET_SIZE - 4; i++) {\n    buffer[i] = 0xff\n  }\n\n  len = (pos - 1) - 3\n  buffer[2] |= ((len >> 8) & 0x0f)\n  buffer[3] = len & 0xff\n\n  // CRC32\n  const crc32 = calculateCRC32(buffer.subarray(1, crcPos))\n  buffer[crcPos] = (crc32 >> 24) & 0xff\n  buffer[crcPos + 1] = (crc32 >> 16) & 0xff\n  buffer[crcPos + 2] = (crc32 >> 8) & 0xff\n  buffer[crcPos + 3] = crc32 & 0xff\n  return buffer.slice(0, mpegts.TS_PACKET_SIZE - 4)\n}\n\nexport function getSDTPayload() {\n  const buffer = new Uint8Array(1024)\n\n  buffer[1] = 0x42\n  buffer[2] = 0xf0\n\n  // transport_stream_id 1 \n  buffer[5] = 1\n\n  // current_next_indicator\n  buffer[6] = (3 << 6) | 0x01\n\n  let pos = 9\n\n  // original_network_id\n  buffer[pos++] = 0xff\n  buffer[pos++] = 1\n\n  buffer[pos++] = 0xff\n\n  /*\n   * put service\n   * service id\n   */\n  buffer[pos++] = 0\n  buffer[pos++] = 1\n\n  /* currently no EIT info */\n  buffer[pos++] =  0xfc | 0x00\n\n  const descListLenPtr = pos\n  pos += 2\n\n  // write only one descriptor for the service name and provider */\n  buffer[pos++] = 0x48\n\n  const descLenPtr = pos++\n\n  // service_type\n  buffer[pos++] = 1\n\n  const providerName = 'format-js'\n  const serviceName = 'Service01'\n\n  buffer[pos++] = providerName.length\n  for (let i = 0; i < providerName.length; i++) {\n    buffer[pos] = providerName.charCodeAt(i)\n    pos++\n  }\n\n  buffer[pos++] = serviceName.length\n  for (let i = 0; i < serviceName.length; i++) {\n    buffer[pos] = serviceName.charCodeAt(i)\n    pos++\n  }\n\n  buffer[descLenPtr] = pos - descLenPtr - 1\n\n  // fill descriptor length \n  let value = (4 << 13) | (0 << 12) | (pos - descListLenPtr - 2)\n  buffer[descListLenPtr] = (value >> 8) & 0xff\n  buffer[descListLenPtr + 1] = value & 0xff\n\n  const crcPos = pos\n  pos += 4\n\n  for (let i = pos; i < mpegts.TS_PACKET_SIZE - 4; i++) {\n    buffer[i] = 0xff\n  }\n\n  const len = (pos - 1) - 3\n\n  buffer[2] |= ((len >> 8) & 0x0f)\n  buffer[3] = len & 0xff\n\n  // CRC32\n  const crc32 = calculateCRC32(buffer.subarray(1, crcPos))\n  buffer[crcPos] = (crc32 >> 24) & 0xff\n  buffer[crcPos + 1] = (crc32 >> 16) & 0xff\n  buffer[crcPos + 2] = (crc32 >> 8) & 0xff\n  buffer[crcPos + 3] = crc32 & 0xff\n\n  return buffer.slice(0, mpegts.TS_PACKET_SIZE - 4)\n}\n\nexport function writeTSPacket(ioWriter: IOWriter, tsPacket: TSPacket, mpegtsContext: MpegtsContext) {\n  // TODO\n  if (mpegtsContext.tsPacketSize === mpegts.TS_DVHS_PACKET_SIZE) {\n    // skip ATS field (2-bits copy-control + 30-bits timestamp) for m2ts\n    ioWriter.skip(4)\n  }\n\n  if (!tsPacket.payload || tsPacket.payload.length === 0) {\n    tsPacket.adaptationFieldControl = 0x02\n  }\n\n  if (tsPacket.adaptationFieldControl === 0x01\n        && (tsPacket.payload.length + 4) < mpegts.TS_PACKET_SIZE\n  ) {\n    tsPacket.adaptationFieldControl = 0x03\n  }\n\n  const pos = ioWriter.getPos()\n\n  ioWriter.writeUint8(0x47)\n\n  let byte = 0\n\n  if (tsPacket.payloadUnitStartIndicator) {\n    // Payload unit start indicator\n    byte |= (1 << 6)\n  }\n\n  byte |= (tsPacket.transportPriority << 5)\n\n  // pid 高 5 位\n  byte |= (tsPacket.pid >> 8)\n\n  ioWriter.writeUint8(byte)\n  // pid 低 8 位\n  ioWriter.writeUint8(tsPacket.pid & 0xff)\n\n  byte = ((tsPacket.transportScramblingControl & 0x03) << 6)\n  byte |= ((tsPacket.adaptationFieldControl & 0x03) << 4)\n  byte |= (tsPacket.continuityCounter & 0x0f)\n  ioWriter.writeUint8(byte)\n\n  let adaptationFieldLength = getAdaptationFieldLength(tsPacket)\n\n  let paddingLen = mpegts.TS_PACKET_SIZE - 4 - adaptationFieldLength\n  if (tsPacket.payload?.length) {\n    paddingLen -= tsPacket.payload.length\n  }\n\n  if (tsPacket.adaptationFieldControl === 0x02 || tsPacket.adaptationFieldControl === 0x03) {\n    const now = ioWriter.getPos()\n\n    ioWriter.writeUint8(adaptationFieldLength - 1 + paddingLen)\n\n    byte = ((tsPacket.adaptationFieldInfo.discontinuityIndicator & 0x01) << 7)\n    byte |= ((tsPacket.adaptationFieldInfo.randomAccessIndicator & 0x01) << 6)\n    byte |= ((tsPacket.adaptationFieldInfo.elementaryStreamPriorityIndicator & 0x01) << 5)\n    byte |= ((tsPacket.adaptationFieldInfo.pcrFlag & 0x01) << 4)\n    byte |= ((tsPacket.adaptationFieldInfo.opcrFlag & 0x01) << 3)\n    byte |= ((tsPacket.adaptationFieldInfo.splicingPointFlag & 0x01) << 2)\n    byte |= ((tsPacket.adaptationFieldInfo.transportPrivateDataFlag & 0x01) << 1)\n    byte |= (tsPacket.adaptationFieldInfo.adaptationFieldExtensionFlag & 0x01)\n\n    ioWriter.writeUint8(byte)\n\n    if (tsPacket.adaptationFieldInfo.pcrFlag) {\n      const pcrLow = Number(tsPacket.adaptationFieldInfo.pcr % 300n)\n      const pcrHigh = Number((tsPacket.adaptationFieldInfo.pcr - static_cast<int64>(pcrLow)) / 300n)\n      ioWriter.writeUint8((pcrHigh >> 25) & 0xff)\n      ioWriter.writeUint8((pcrHigh >> 17) & 0xff)\n      ioWriter.writeUint8((pcrHigh >> 9) & 0xff)\n      ioWriter.writeUint8((pcrHigh >> 1) & 0xff)\n      ioWriter.writeUint8((pcrHigh << 7) | (pcrLow >> 8) | 0x7e)\n      ioWriter.writeUint8(pcrLow)\n    }\n    if (tsPacket.adaptationFieldInfo.opcrFlag) {\n      const pcrLow = Number(tsPacket.adaptationFieldInfo.pcr % 300n)\n      const pcrHigh = Number((tsPacket.adaptationFieldInfo.pcr - static_cast<int64>(pcrLow)) / 300n)\n      ioWriter.writeUint8((pcrHigh >> 25) & 0xff)\n      ioWriter.writeUint8((pcrHigh >> 17) & 0xff)\n      ioWriter.writeUint8((pcrHigh >> 9) & 0xff)\n      ioWriter.writeUint8((pcrHigh >> 1) & 0xff)\n      ioWriter.writeUint8((pcrHigh << 7) | (pcrLow >> 8) | 0x7e)\n      ioWriter.writeUint8(pcrLow)\n    }\n\n    if (tsPacket.adaptationFieldInfo.splicingPointFlag) {\n      ioWriter.writeUint8(tsPacket.adaptationFieldInfo.spliceCountDown)\n    }\n\n    if (tsPacket.adaptationFieldInfo.transportPrivateDataFlag) {\n      if (tsPacket.adaptationFieldInfo.transportPrivateData\n        && tsPacket.adaptationFieldInfo.transportPrivateData.length\n      ) {\n        ioWriter.writeUint8(tsPacket.adaptationFieldInfo.transportPrivateData.length)\n        ioWriter.writeBuffer(tsPacket.adaptationFieldInfo.transportPrivateData)\n      }\n      else {\n        ioWriter.writeUint8(0)\n      }\n    }\n\n    if (tsPacket.adaptationFieldInfo.adaptationFieldExtensionFlag) {\n      if (tsPacket.adaptationFieldInfo.extension && tsPacket.adaptationFieldInfo.extension.length) {\n        ioWriter.writeUint8(tsPacket.adaptationFieldInfo.extension.length)\n        ioWriter.writeBuffer(tsPacket.adaptationFieldInfo.extension)\n      }\n      else {\n        ioWriter.writeUint8(0)\n      }\n    }\n\n    const wroteAdaptationFieldLength = Number(ioWriter.getPos() - now)\n\n    if (wroteAdaptationFieldLength < adaptationFieldLength) {\n      ioWriter.skip(adaptationFieldLength - wroteAdaptationFieldLength)\n    }\n\n    while (paddingLen > 0) {\n      ioWriter.writeUint8(0xff)\n      paddingLen--\n    }\n  }\n\n  if ((tsPacket.adaptationFieldControl === 0x01 || tsPacket.adaptationFieldControl === 0x03)) {\n    if (tsPacket.payload?.length) {\n      ioWriter.writeBuffer(tsPacket.payload)\n    }\n  }\n\n  if (Number(ioWriter.getPos() - pos) !== mpegts.TS_PACKET_SIZE) {\n    logger.error(`write error data size to ts packet, need ${mpegts.TS_PACKET_SIZE}, wrote: ${Number(ioWriter.getPos() - pos)}`)\n  }\n\n  // TODO\n  if (mpegtsContext.tsPacketSize === mpegts.TS_FEC_PACKET_SIZE) {\n    // 16 crc\n    ioWriter.skip(16)\n  }\n}\n\nfunction writePts(buffer: Uint8Array, pos: number, fourBits: number, pts: bigint) {\n  let value = fourBits << 4 | ((Number(pts >> 30n) & 0x07) << 1) | 1\n  buffer[pos++] = value\n  value = ((Number(pts >> 15n) & 0x7fff) << 1) | 1\n  buffer[pos++] = (value >> 8) & 0xff\n  buffer[pos++] = value & 0xff\n  value = (Number(pts & 0x7fffn) << 1) | 1\n  buffer[pos++] = (value >> 8) & 0xff\n  buffer[pos++] = value & 0xff\n}\n\nexport function writePES(\n  ioWriter: IOWriter,\n  pes: PES,\n  pesSlices: {\n    total: number\n    buffers: Uint8Array[]\n  },\n  stream: Stream,\n  mpegtsContext: MpegtsContext\n) {\n  const streamId = pes.streamId\n  const header = new Uint8Array(getPESHeaderLength(pes))\n\n  header[2] = 0x01\n  header[3] = streamId\n\n  let len = pesSlices.total\n\n  if (streamId !== mpegts.TSStreamId.PROGRAM_STREAM_MAP\n    && streamId !== mpegts.TSStreamId.PADDING_STREAM\n    && streamId !== mpegts.TSStreamId.PRIVATE_STREAM_2\n    && streamId !== mpegts.TSStreamId.ECM_STREAM\n    && streamId !== mpegts.TSStreamId.EMM_STREAM\n    && streamId !== mpegts.TSStreamId.PROGRAM_STREAM_DIRECTORY\n    && streamId !== mpegts.TSStreamId.DSMCC_STREAM\n    && streamId !== mpegts.TSStreamId.TYPE_E_STREAM\n  ) {\n    let flags = 0\n    let headerLen = 0\n    if (pes.pts !== NOPTS_VALUE_BIGINT) {\n      headerLen += 5\n      flags |= 0x80\n    }\n    if (pes.dts !== NOPTS_VALUE_BIGINT && pes.pts !== NOPTS_VALUE_BIGINT && pes.dts !== pes.pts) {\n      headerLen += 5\n      flags |= 0x40\n    }\n\n    let value  = 0x80\n    /* data alignment indicator is required for subtitle and data streams */\n    if (stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_SUBTITLE\n      || stream.codecpar.codecType === AVMediaType.AVMEDIA_TYPE_DATA\n    ) {\n      value |= 0x04\n    }\n    header[6] = value\n    header[7] = flags\n    header[8] = headerLen\n\n    len += (headerLen + 3)\n\n    if (pes.pts !== NOPTS_VALUE_BIGINT) {\n      writePts(header, 9, flags >> 6, pes.pts)\n    }\n    if (pes.dts !== NOPTS_VALUE_BIGINT && pes.pts !== NOPTS_VALUE_BIGINT && pes.dts !== pes.pts) {\n      writePts(header, 14, 1, pes.dts)\n    }\n  }\n\n  if (len <= UINT16_MAX && stream.codecpar.codecType !== AVMediaType.AVMEDIA_TYPE_VIDEO) {\n    header[4] = (len >> 8) & 0xff\n    header[5] = len & 0xff\n  }\n\n  writePESPayload(ioWriter, pes, concatTypeArray(Uint8Array, [header, ...pesSlices.buffers]), stream, mpegtsContext)\n}\n\nexport function writeSection(ioWriter: IOWriter, packet: SectionPacket, mpegtsContext: MpegtsContext) {\n  const adaptationFieldLength = getAdaptationFieldLength(packet)\n\n  let continuityCounter = packet.continuityCounter\n\n  if (4 + adaptationFieldLength + packet.payload.length <= mpegts.TS_PACKET_SIZE) {\n    packet.payloadUnitStartIndicator = 0x01\n    packet.continuityCounter = (continuityCounter++) % 16\n    writeTSPacket(ioWriter, packet, mpegtsContext)\n\n    packet.continuityCounter = continuityCounter % 16\n\n    return\n  }\n\n  const len = mpegts.TS_PACKET_SIZE - (4 + adaptationFieldLength)\n\n  let pos = 0\n\n  const payload = packet.payload\n  while (pos < payload.length) {\n    let next = Math.min(pos + len, payload.length)\n    if (pos === 0) {\n      packet.payloadUnitStartIndicator = 0x01\n    }\n    else {\n      packet.payloadUnitStartIndicator = 0x00\n    }\n\n    const currentLen = next - pos\n\n    if (currentLen + 4 === mpegts.TS_PACKET_SIZE) {\n      packet.adaptationFieldControl = 0x01\n    }\n    else if (adaptationFieldLength === 0 && currentLen + 4 + 1 === mpegts.TS_PACKET_SIZE) {\n      // adaptationFieldLength 需要至少 2 byte\n      next--\n    }\n\n    packet.payload = payload.subarray(pos, next)\n    packet.continuityCounter = (continuityCounter++) % 16\n\n    writeTSPacket(ioWriter, packet, mpegtsContext)\n    pos = next\n  }\n\n  packet.continuityCounter = continuityCounter % 16\n}\n","/*\n * libmedia mpegts struct defined\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { NOPTS_VALUE, NOPTS_VALUE_BIGINT } from 'avutil/constant'\nimport { TSStreamType } from './mpegts'\nimport { PID } from './type'\n\nexport class TSPacketAdaptationFieldInfo {\n  discontinuityIndicator: number = 0\n  randomAccessIndicator: number = 0\n  elementaryStreamPriorityIndicator: number = 0\n  pcrFlag: number = 0\n  opcrFlag: number = 0\n  splicingPointFlag: number = 0\n  transportPrivateDataFlag: number = 0\n  adaptationFieldExtensionFlag: number = 0\n  pcr: bigint = 0n\n  opcr: bigint = 0n\n  spliceCountDown: number = 0\n  transportPrivateData: Uint8Array = null\n  extension: Uint8Array = null\n}\n\nexport class TSPacket {\n  pos: bigint = NOPTS_VALUE_BIGINT\n  payloadUnitStartIndicator: number = 0\n  transportPriority: number = 0\n  pid: PID = NOPTS_VALUE\n  adaptationFieldControl: number = 0\n  continuityCounter: number = 0\n  transportScramblingControl: number = 0\n  adaptationFieldInfo: TSPacketAdaptationFieldInfo = new TSPacketAdaptationFieldInfo()\n  payload: Uint8Array = null\n}\n\nexport class TSSliceQueue {\n  slices: Uint8Array[] = []\n  totalLength: number = 0\n  expectedLength: number = NOPTS_VALUE\n  randomAccessIndicator: number = 0\n  pid: PID = NOPTS_VALUE\n  streamType: TSStreamType = TSStreamType.NONE\n  pos: bigint = NOPTS_VALUE_BIGINT\n}\n\nexport class PAT {\n  versionNumber: number = 0\n  networkPid: PID = NOPTS_VALUE\n  program2PmtPid: Map<number, PID> = new Map()\n}\n\nexport class SectionPacket extends TSPacket {\n}\n\nexport class ESDescriptor {\n  tag: number\n  buffer: Uint8Array\n}\n\nexport class PMT {\n  versionNumber: number = 0\n  programNumber: number = 0\n  pcrPid: PID = 0\n  pid2StreamType: Map<number, TSStreamType> = new Map()\n  pid2ESDescriptor: Map<number, ESDescriptor[]> = new Map()\n}\n\nexport class PES {\n  pid: PID = NOPTS_VALUE\n  streamType: TSStreamType = TSStreamType.NONE\n  streamId: number = NOPTS_VALUE\n  dts: bigint = NOPTS_VALUE_BIGINT\n  pts: bigint = NOPTS_VALUE_BIGINT\n  pos: bigint = NOPTS_VALUE_BIGINT\n  payload: Uint8Array = null\n  data: Uint8Array = null\n  randomAccessIndicator: number = 0\n}\n","/*\n * libmedia string tag to uint32 in little end\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport * as logger from 'common/util/logger'\n\nexport default function mktag(tag: string): number {\n  if (tag.length !== 4) {\n    logger.warn(`tag length is not 4, tag: ${tag}`)\n  }\n\n  let value = 0\n  for (let i = 0; i < 4; i++) {\n    value = (value << 8) | tag.charCodeAt(i)\n  }\n\n  return value\n}\n","/*\n * libmedia mux util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport AVPacket from 'avutil/struct/avpacket'\nimport { AVOFormatContext } from './AVFormatContext'\nimport * as object from 'common/util/object'\nimport * as logger from 'common/util/logger'\nimport { OFormatSupportedCodecs } from './formats/OFormat'\nimport * as array from 'common/util/array'\nimport { AVFormat } from './avformat'\nimport { AVCodecID } from 'avutil/codec'\nimport * as errorType from 'avutil/error'\nimport { dumpCodecName, dumpFormatName } from './dump'\n\nexport type MuxOptions = {\n  paddingZero?: boolean\n}\n\ninterface MuxPrivateData {\n  first: Map<number, bigint>\n}\n\nconst defaultMuxOptions: MuxOptions = {\n  paddingZero: false\n}\n\nexport function open(formatContext: AVOFormatContext, options: MuxOptions = {}) {\n  const opts = object.extend({}, defaultMuxOptions, options)\n  if (!formatContext.ioWriter) {\n    logger.fatal('need ioWriter')\n  }\n  if (!formatContext.oformat) {\n    logger.fatal('need oformat')\n  }\n  formatContext.options = opts\n\n  formatContext.processPrivateData = {\n    first: new Map()\n  }\n\n  let supportCodecs = OFormatSupportedCodecs[formatContext.oformat.type]\n  if (supportCodecs) {\n    for (let i = 0; i < formatContext.streams.length; i++) {\n      const codecId = formatContext.streams[i].codecpar.codecId\n      if (formatContext.oformat.type === AVFormat.WAV) {\n        if (codecId < AVCodecID.AV_CODEC_ID_PCM_S16LE\n          || codecId > AVCodecID.AV_CODEC_ID_ADPCM_XMD\n        ) {\n          logger.error(`format ${dumpFormatName(formatContext.oformat.type)} not support codecId ${dumpCodecName(formatContext.streams[i].codecpar.codecType, codecId)}`)\n          return errorType.CODEC_NOT_SUPPORT\n        }\n      }\n      else if (!array.has(supportCodecs, codecId)) {\n        logger.error(`format ${dumpFormatName(formatContext.oformat.type)} not support codecId ${dumpCodecName(formatContext.streams[i].codecpar.codecType, codecId)}`)\n        return errorType.CODEC_NOT_SUPPORT\n      }\n    }\n  }\n  return formatContext.oformat.init(formatContext)\n}\n\nexport function writeHeader(formatContext: AVOFormatContext): number {\n  formatContext.oformat.writeHeader(formatContext)\n  return 0\n}\n\nexport function writeAVPacket(formatContext: AVOFormatContext, avpacket: pointer<AVPacket>): number {\n  const privateData = formatContext.processPrivateData as MuxPrivateData\n  if (!privateData.first.has(avpacket.streamIndex)) {\n    if (avpacket.dts > 0n) {\n      privateData.first.set(avpacket.streamIndex, avpacket.dts)\n    }\n    else {\n      privateData.first.set(avpacket.streamIndex, 0n)\n    }\n  }\n  if ((formatContext.options as MuxOptions).paddingZero) {\n    avpacket.dts -= privateData.first.get(avpacket.streamIndex)\n    avpacket.pts -= privateData.first.get(avpacket.streamIndex)\n  }\n\n  return formatContext.oformat.writeAVPacket(formatContext, avpacket)\n}\n\nexport function writeTrailer(formatContext: AVOFormatContext): number {\n  formatContext.oformat.writeTrailer(formatContext)\n  return 0\n}\n\nexport function flush(formatContext: AVOFormatContext) {\n  formatContext.oformat.flush(formatContext)\n}\n","/*\n * libmedia constant\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { Rational } from './struct/rational'\n\nexport const NOPTS_VALUE_BIGINT: int64 = -1n\n\nexport const NOPTS_VALUE: int32 = -1\n\nexport const AV_TIME_BASE: int32 = 1000000\n\nexport const AV_MILLI_TIME_BASE: int32 = 1000\n\n/**\n * 微秒时间基\n */\nexport const AV_TIME_BASE_Q = new Rational({den: AV_TIME_BASE, num: 1})\n\n/**\n * 毫秒时间基\n */\nexport const AV_MILLI_TIME_BASE_Q = new Rational({den: AV_MILLI_TIME_BASE, num: 1})\n\n/**\n * 秒时间基\n */\nexport const AV_TIME_BASE1_Q = new Rational({den: 1, num: 1})\n\nexport const INT8_MAX: int8 = 127\nexport const INT16_MAX: int16 = 32767\nexport const INT32_MAX: int32 = 2147483647\n\nexport const INT8_MIN: int8  = -128\nexport const INT16_MIN: int16 = -32768\nexport const INT32_MIN: int32 = -INT32_MAX - 1\n\nexport const UINT8_MAX: uint8 = 255\nexport const UINT16_MAX: uint16 = 65535\nexport const UINT32_MAX: uint32 = 4294967295\n","\n/*\n * libmedia error defined\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nexport const FORMAT_NOT_SUPPORT = -1\n\nexport const DATA_INVALID = -2\n\nexport const INVALID_ARGUMENT = -3\n\nexport const NO_MEMORY = -4\n\nexport const INVALID_OPERATE = -5\n\nexport const EAGAIN = -6\n\nexport const EOF = -7\n\nexport const CODEC_NOT_SUPPORT = -8\n","/*\n * libmedia pixel format descriptor\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { AVPixelFormat } from './pixfmt'\n\nexport const enum PixelFormatFlags {\n  /**\n   * Pixel format is big-endian.\n   */\n  BIG_ENDIAN = 1 << 0,\n  /**\n   * Pixel format has a palette in data[1], values are indexes in this palette.\n   */\n  PALETTE = 1 << 1,\n  /**\n   * All values of a component are bit-wise packed end to end.\n   */\n  BIT_STREAM = 1 << 2,\n  /**\n   * At least one pixel component is not in the first data plane.\n   */\n  PLANER = 1 << 4,\n  /**\n   * The pixel format contains RGB-like data (as opposed to YUV/grayscale).\n   */\n  RGB = 1 << 5,\n  /**\n   * The pixel format has an alpha channel. This is set on all formats that\n   * support alpha in some way, including AV_PIX_FMT_PAL8. The alpha is always\n   * straight, never pre-multiplied.\n   *\n   * If a codec or a filter does not support alpha, it should set all alpha to\n   * opaque, or use the equivalent pixel formats without alpha component, e.g.\n   * AV_PIX_FMT_RGB0 (or AV_PIX_FMT_RGB24 etc.) instead of AV_PIX_FMT_RGBA.\n   */\n  ALPHA = 1 << 7,\n  /**\n   * The pixel format is following a Bayer pattern\n   */\n  BAYER = 1 << 8,\n  /**\n   * The pixel format contains IEEE-754 floating point values. Precision (double,\n   * single, or half) should be determined by the pixel size (64, 32, or 16 bits).\n   */\n  FLOAT = 1 << 9\n}\n\nexport type PixelFormatDescriptor = {\n  nbComponents: number\n  /**\n   * Amount to shift the luma width right to find the chroma width.\n   * For YV12 this is 1 for example.\n   * chroma_width = AV_CEIL_RSHIFT(luma_width, log2_chroma_w)\n   * The note above is needed to ensure rounding up.\n   * This value only refers to the chroma components.\n   */\n  log2ChromaW: number\n\n  /**\n   * Amount to shift the luma height right to find the chroma height.\n   * For YV12 this is 1 for example.\n   * chroma_height= AV_CEIL_RSHIFT(luma_height, log2_chroma_h)\n   * The note above is needed to ensure rounding up.\n   * This value only refers to the chroma components.\n   */\n  log2ChromaH: number\n\n  /**\n   * Combination of AV_PIX_FMT_FLAG_... flags.\n   */\n  flags: number\n\n  /**\n   * Parameters that describe how pixels are packed.\n   * If the format has 1 or 2 components, then luma is 0.\n   * If the format has 3 or 4 components:\n   *   if the RGB flag is set then 0 is red, 1 is green and 2 is blue;\n   *   otherwise 0 is luma, 1 is chroma-U and 2 is chroma-V.\n   *\n   * If present, the Alpha channel is always the last component.\n   */\n  comp: {\n    /**\n     * Which of the 4 planes contains the component.\n     */\n    plane: number\n    /**\n     * Number of elements between 2 horizontally consecutive pixels.\n     * Elements are bits for bitstream formats, bytes otherwise.\n     */\n    step: number\n\n    /**\n     * Number of elements before the component of the first pixel.\n     * Elements are bits for bitstream formats, bytes otherwise.\n     */\n    offset: number\n\n    /**\n     * Number of least significant bits that must be shifted away\n     * to get the value.\n     */\n    shift: number\n\n    /**\n     * Number of bits in the component.\n     */\n    depth: number\n  }[]\n}\n\nexport const PixelFormatDescriptorsMap: Partial<Record<AVPixelFormat, PixelFormatDescriptor>> = {\n  /**\n   * 1 字节\n   */\n  [AVPixelFormat.AV_PIX_FMT_YUV420P]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUVJ420P]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV422P]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUVJ422P]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV444P]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUVJ444P]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n\n  [AVPixelFormat.AV_PIX_FMT_NV12]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 1,\n        step: 2,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 1,\n        step: 2,\n        offset: 1,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n\n  /**\n   * 2 字节 yuv420\n   */\n  [AVPixelFormat.AV_PIX_FMT_YUV420P9BE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV420P9LE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV420P10BE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV420P10LE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV420P12BE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV420P12LE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV420P14BE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV420P14LE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV420P16BE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV420P16LE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      }\n    ]\n  },\n\n  /**\n   * 2 字节 yuv422\n   */\n  [AVPixelFormat.AV_PIX_FMT_YUV422P9BE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV422P9LE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV422P10BE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV422P10LE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV422P12BE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV422P12LE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV422P14BE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV422P14LE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV422P16BE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV422P16LE]: {\n    nbComponents: 3,\n    log2ChromaW: 1,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      }\n    ]\n  },\n\n  /**\n   * 2 字节 yuv444\n   */\n  [AVPixelFormat.AV_PIX_FMT_YUV444P9BE]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV444P9LE]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 9\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV444P10BE]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV444P10LE]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 10\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV444P12BE]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV444P12LE]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 12\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV444P14BE]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV444P14LE]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 14\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV444P16BE]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.BIG_ENDIAN | PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      }\n    ]\n  },\n  [AVPixelFormat.AV_PIX_FMT_YUV444P16LE]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.PLANER,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 16\n      }\n    ]\n  },\n\n  [AVPixelFormat.AV_PIX_FMT_RGBA]: {\n    nbComponents: 4,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.RGB | PixelFormatFlags.ALPHA,\n    comp: [\n      {\n        plane: 0,\n        step: 4,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 0,\n        step: 4,\n        offset: 1,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 0,\n        step: 4,\n        offset: 2,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 0,\n        step: 4,\n        offset: 3,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n\n  [AVPixelFormat.AV_PIX_FMT_RGB0]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.RGB,\n    comp: [\n      {\n        plane: 0,\n        step: 4,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 0,\n        step: 4,\n        offset: 1,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 0,\n        step: 4,\n        offset: 2,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n\n  [AVPixelFormat.AV_PIX_FMT_BGRA]: {\n    nbComponents: 4,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.RGB | PixelFormatFlags.ALPHA,\n    comp: [\n      {\n        plane: 0,\n        step: 4,\n        offset: 2,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 0,\n        step: 4,\n        offset: 1,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 0,\n        step: 4,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 0,\n        step: 4,\n        offset: 3,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n\n  [AVPixelFormat.AV_PIX_FMT_BGR0]: {\n    nbComponents: 3,\n    log2ChromaW: 0,\n    log2ChromaH: 0,\n    flags: PixelFormatFlags.RGB,\n    comp: [\n      {\n        plane: 0,\n        step: 4,\n        offset: 2,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 0,\n        step: 4,\n        offset: 1,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 0,\n        step: 4,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  },\n\n  [AVPixelFormat.AV_PIX_FMT_YUVA420P]: {\n    nbComponents: 4,\n    log2ChromaW: 1,\n    log2ChromaH: 1,\n    flags: PixelFormatFlags.PLANER | PixelFormatFlags.ALPHA,\n    comp: [\n      {\n        plane: 0,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 1,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 2,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      },\n      {\n        plane: 3,\n        step: 1,\n        offset: 0,\n        shift: 0,\n        depth: 8\n      }\n    ]\n  }\n}\n\n","import { AVFormat } from 'avformat/avformat'\nimport { AVCodecID, AVMediaType } from './codec'\nimport { AVColorPrimaries, AVColorRange, AVColorSpace, AVColorTransferCharacteristic, AVPixelFormat } from './pixfmt'\nimport { AVSampleFormat } from './audiosamplefmt'\nimport { AVDisposition } from 'avformat/AVStream'\nimport { IOType } from 'avpipeline/IOPipeline'\n\nexport const Ext2Format: Record<string, AVFormat> = {\n  'flv': AVFormat.FLV,\n  'mp4': AVFormat.MOV,\n  'mov': AVFormat.MOV,\n  'ts': AVFormat.MPEGTS,\n  'ivf': AVFormat.IVF,\n  'opus': AVFormat.OGGS,\n  'ogg': AVFormat.OGGS,\n  'm3u8': AVFormat.MPEGTS,\n  'm3u': AVFormat.MPEGTS,\n  'mpd': AVFormat.MOV,\n  'mp3': AVFormat.MP3,\n  'mkv': AVFormat.MATROSKA,\n  'mka': AVFormat.MATROSKA,\n  'webm': AVFormat.WEBM,\n  'aac': AVFormat.AAC,\n  'flac': AVFormat.FLAC,\n  'wav': AVFormat.WAV\n}\n\nexport const Ext2IOLoader: Record<string, IOType> = {\n  'm3u8': IOType.HLS,\n  'm3u': IOType.HLS,\n  'mpd': IOType.DASH\n}\n\nexport const VideoCodecString2CodecId = {\n  'copy': AVCodecID.AV_CODEC_ID_NONE,\n  'h264': AVCodecID.AV_CODEC_ID_H264,\n  'avc': AVCodecID.AV_CODEC_ID_H264,\n  'hevc': AVCodecID.AV_CODEC_ID_HEVC,\n  'h265': AVCodecID.AV_CODEC_ID_HEVC,\n  'vvc': AVCodecID.AV_CODEC_ID_VVC,\n  'h266': AVCodecID.AV_CODEC_ID_VVC,\n  'av1': AVCodecID.AV_CODEC_ID_AV1,\n  'vp9': AVCodecID.AV_CODEC_ID_VP9,\n  'vp8': AVCodecID.AV_CODEC_ID_VP8,\n  'mpeg4': AVCodecID.AV_CODEC_ID_MPEG4\n}\n\nexport const AudioCodecString2CodecId = {\n  'copy': AVCodecID.AV_CODEC_ID_NONE,\n  'aac': AVCodecID.AV_CODEC_ID_AAC,\n  'mp3': AVCodecID.AV_CODEC_ID_MP3,\n  'opus': AVCodecID.AV_CODEC_ID_OPUS,\n  'flac': AVCodecID.AV_CODEC_ID_FLAC,\n  'speex': AVCodecID.AV_CODEC_ID_SPEEX,\n  'vorbis': AVCodecID.AV_CODEC_ID_VORBIS,\n  'g711a': AVCodecID.AV_CODEC_ID_PCM_ALAW,\n  'g711u': AVCodecID.AV_CODEC_ID_PCM_MULAW\n}\n\nexport const PixfmtString2AVPixelFormat = {\n  'yuv420p': AVPixelFormat.AV_PIX_FMT_YUV420P,\n  'yuv422p': AVPixelFormat.AV_PIX_FMT_YUV422P,\n  'yuv444p': AVPixelFormat.AV_PIX_FMT_YUV444P,\n\n  'yuv420p10le': AVPixelFormat.AV_PIX_FMT_YUV420P10LE,\n  'yuv422p10le': AVPixelFormat.AV_PIX_FMT_YUV422P10LE,\n  'yuv444p10le': AVPixelFormat.AV_PIX_FMT_YUV444P10LE,\n\n  'yuv420p10be': AVPixelFormat.AV_PIX_FMT_YUV420P10BE,\n  'yuv422p10be': AVPixelFormat.AV_PIX_FMT_YUV422P10BE,\n  'yuv444p10be': AVPixelFormat.AV_PIX_FMT_YUV444P10BE,\n}\n\nexport const SampleFmtString2SampleFormat = {\n  'u8': AVSampleFormat.AV_SAMPLE_FMT_U8,\n  'u8p': AVSampleFormat.AV_SAMPLE_FMT_U8P,\n  's16': AVSampleFormat.AV_SAMPLE_FMT_S16,\n  's16p': AVSampleFormat.AV_SAMPLE_FMT_S16P,\n  's32': AVSampleFormat.AV_SAMPLE_FMT_S32,\n  's32p': AVSampleFormat.AV_SAMPLE_FMT_S32P,\n  's64': AVSampleFormat.AV_SAMPLE_FMT_S64,\n  's64p': AVSampleFormat.AV_SAMPLE_FMT_S64P,\n  'float': AVSampleFormat.AV_SAMPLE_FMT_FLT,\n  'floatp': AVSampleFormat.AV_SAMPLE_FMT_FLTP,\n  'double': AVSampleFormat.AV_SAMPLE_FMT_DBL,\n  'doublep': AVSampleFormat.AV_SAMPLE_FMT_DBLP,\n}\n\nexport const Format2AVFormat: Record<string, AVFormat> = {\n  'flv': AVFormat.FLV,\n  'mp4': AVFormat.MOV,\n  'mov': AVFormat.MOV,\n  'ts': AVFormat.MPEGTS,\n  'mpegts': AVFormat.MPEGTS,\n  'ivf': AVFormat.IVF,\n  'opus': AVFormat.OGGS,\n  'ogg': AVFormat.OGGS,\n  'm3u8': AVFormat.MPEGTS,\n  'm3u': AVFormat.MPEGTS,\n  'mpd': AVFormat.MOV,\n  'mp3': AVFormat.MP3,\n  'mkv': AVFormat.MATROSKA,\n  'matroska': AVFormat.MATROSKA,\n  'mka': AVFormat.MATROSKA,\n  'webm': AVFormat.WEBM,\n  'aac': AVFormat.AAC,\n  'flac': AVFormat.FLAC,\n  'wav': AVFormat.WAV\n}\n\nexport const colorRange2AVColorRange: Record<string, AVColorRange> = {\n  'tv': AVColorRange.AVCOL_RANGE_MPEG,\n  'pc': AVColorRange.AVCOL_RANGE_JPEG\n}\n\nexport const colorSpace2AVColorSpace: Record<string, AVColorSpace> = {\n  'bt709': AVColorSpace.AVCOL_SPC_BT709,\n  'fcc': AVColorSpace.AVCOL_SPC_FCC,\n  'bt470bg': AVColorSpace.AVCOL_SPC_BT470BG,\n  'smpte170m': AVColorSpace.AVCOL_SPC_SMPTE170M,\n  'smpte240m': AVColorSpace.AVCOL_SPC_SMPTE240M,\n  'ycgco': AVColorSpace.AVCOL_SPC_YCGCO,\n  'gbr': AVColorSpace.AVCOL_SPC_RGB,\n  'bt2020ncl': AVColorSpace.AVCOL_SPC_BT2020_NCL\n}\n\nexport const colorPrimaries2AVColorPrimaries: Record<string, AVColorPrimaries> = {\n  'bt709': AVColorPrimaries.AVCOL_PRI_BT709,\n  'bt470m': AVColorPrimaries.AVCOL_PRI_BT470M,\n  'bt470bg': AVColorPrimaries.AVCOL_PRI_BT470BG,\n  'smpte170m': AVColorPrimaries.AVCOL_PRI_SMPTE170M,\n  'smpte240m': AVColorPrimaries.AVCOL_PRI_SMPTE240M,\n  'smpte428': AVColorPrimaries.AVCOL_PRI_SMPTE428,\n  'film': AVColorPrimaries.AVCOL_PRI_FILM,\n  'smpte431': AVColorPrimaries.AVCOL_PRI_SMPTE431,\n  'smpte432': AVColorPrimaries.AVCOL_PRI_SMPTE432,\n  'bt2020': AVColorPrimaries.AVCOL_PRI_BT2020,\n  'jedec-p22': AVColorPrimaries.AVCOL_PRI_JEDEC_P22,\n  'ebu3213': AVColorPrimaries.AVCOL_PRI_EBU3213\n}\n\nexport const colorTrc2AVColorTransferCharacteristic: Record<string, AVColorTransferCharacteristic> = {\n  'bt709': AVColorTransferCharacteristic.AVCOL_TRC_BT709,\n  'gamma22': AVColorTransferCharacteristic.AVCOL_TRC_GAMMA22,\n  'gamma28': AVColorTransferCharacteristic.AVCOL_TRC_GAMMA28,\n  'smpte170m': AVColorTransferCharacteristic.AVCOL_TRC_SMPTE170M,\n  'smpte240m': AVColorTransferCharacteristic.AVCOL_TRC_SMPTE240M,\n  'srgb': AVColorTransferCharacteristic.AVCOL_TRC_IEC61966_2_1,\n  'xvycc': AVColorTransferCharacteristic.AVCOL_TRC_IEC61966_2_4,\n  'bt2020-10': AVColorTransferCharacteristic.AVCOL_TRC_BT2020_10,\n  'bt2020-12': AVColorTransferCharacteristic.AVCOL_TRC_BT2020_12\n}\n\nexport const mediaType2AVMediaType: Record<string, AVMediaType> = {\n  'Audio': AVMediaType.AVMEDIA_TYPE_AUDIO,\n  'Video': AVMediaType.AVMEDIA_TYPE_VIDEO,\n  'Subtitle': AVMediaType.AVMEDIA_TYPE_SUBTITLE,\n  'Attachment': AVMediaType.AVMEDIA_TYPE_ATTACHMENT,\n  'Data': AVMediaType.AVMEDIA_TYPE_DATA\n}\n\nexport const disposition2AVDisposition: Record<string, AVDisposition> = {\n  'default': AVDisposition.DEFAULT,\n  'dub': AVDisposition.DUB,\n  'original': AVDisposition.ORIGINAL,\n  'comment': AVDisposition.COMMENT,\n  'lyrics': AVDisposition.LYRICS,\n  'karaoke': AVDisposition.KARAOKE,\n  'forced': AVDisposition.FORCED,\n  'hearing impaired': AVDisposition.HEARING_IMPAIRED,\n  'visual impaired': AVDisposition.VISUAL_IMPAIRED,\n  'clean effects': AVDisposition.CLEAN_EFFECTS,\n  'attached pic': AVDisposition.ATTACHED_PIC,\n  'timed thumbnails': AVDisposition.TIMED_THUMBNAILS,\n  'captions': AVDisposition.CAPTIONS,\n  'descriptions': AVDisposition.DESCRIPTIONS,\n  'metadata': AVDisposition.METADATA,\n  'dependent': AVDisposition.DEPENDENT,\n  'still image': AVDisposition.STILL_IMAGE\n}","/*\n * libmedia AVChannelLayout\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { AVChannel, AVChannelOrder } from '../audiosamplefmt'\n\n@struct\nexport class AVChannelCustom {\n  id: AVChannel\n  name: array<char, 16>\n  opaque: pointer<void>\n}\n\n@struct\nexport class AVChannelLayout {\n  /**\n   * Channel order used in this layout.\n   * This is a mandatory field.\n   */\n  order: AVChannelOrder\n\n  /**\n   * Number of channels in this layout. Mandatory field.\n   */\n  nbChannels: int32\n\n  /**\n   * Details about which channels are present in this layout.\n   * For AV_CHANNEL_ORDER_UNSPEC, this field is undefined and must not be\n   * used.\n   */\n  u: union<{\n    /**\n     * This member must be used for AV_CHANNEL_ORDER_NATIVE, and may be used\n     * for AV_CHANNEL_ORDER_AMBISONIC to signal non-diegetic channels.\n     * It is a bitmask, where the position of each set bit means that the\n     * AVChannel with the corresponding value is present.\n     *\n     * I.e. when (mask & (1 << AV_CHAN_FOO)) is non-zero, then AV_CHAN_FOO\n     * is present in the layout. Otherwise it is not present.\n     *\n     * @note when a channel layout using a bitmask is constructed or\n     * modified manually (i.e.  not using any of the av_channel_layout_*\n     * functions), the code doing it must ensure that the number of set bits\n     * is equal to nb_channels.\n     */\n    mask: uint64\n\n    /**\n     * This member must be used when the channel order is\n     * AV_CHANNEL_ORDER_CUSTOM. It is a nb_channels-sized array, with each\n     * element signalling the presence of the AVChannel with the\n     * corresponding value in map[i].id.\n     *\n     * I.e. when map[i].id is equal to AV_CHAN_FOO, then AV_CH_FOO is the\n     * i-th channel in the audio data.\n     *\n     * When map[i].id is in the range between AV_CHAN_AMBISONIC_BASE and\n     * AV_CHAN_AMBISONIC_END (inclusive), the channel contains an ambisonic\n     * component with ACN index (as defined above)\n     * n = map[i].id - AV_CHAN_AMBISONIC_BASE.\n     *\n     * map[i].name may be filled with a 0-terminated string, in which case\n     * it will be used for the purpose of identifying the channel with the\n     * convenience functions below. Otherwise it must be zeroed.\n     */\n    map: pointer<AVChannelCustom>\n  }>\n\n  /**\n   * For some private data of the user.\n   */\n  opaque: pointer<void>\n}\n","/*\n * libmedia AVBuffer defined\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { avFree } from '../util/mem'\nimport { Mutex } from 'cheap/thread/mutex'\n\nexport const enum AVBufferFlags {\n  NONE = 0,\n  READONLY = 1 << 0\n}\n\n@struct\nexport class AVBuffer {\n  /**\n   * data described by this buffer\n   */\n  data: pointer<uint8> = nullptr\n\n  /**\n   * size of data in bytes\n   */\n  size: size = 0\n\n  /**\n   *  number of existing AVBufferRef instances referring to this buffer\n   */\n  refcount: atomic_uint32 = 0\n\n  /**\n   * a callback for freeing the data\n   */\n  free: pointer<(opaque: pointer<void>, data: pointer<uint8>) => void> = nullptr\n\n  /**\n   * an opaque pointer, to be used by the freeing callback\n   */\n  opaque: pointer<void> = nullptr\n\n  /**\n   * A combination of AV_BUFFER_FLAG_*\n   */\n  flags: AVBufferFlags = AVBufferFlags.NONE\n\n  /**\n   * A combination of BUFFER_FLAG_*\n   */\n  flagsInternal: int32 = 0\n}\n\nfunction avbufferDefaultFree(opaque: pointer<void>, data: pointer<uint8>) {\n  avFree(data)\n}\n\n@struct\nexport class AVBufferRef {\n  buffer: pointer<AVBuffer> = nullptr\n\n  /**\n   * The data buffer. It is considered writable if and only if\n   * this is the only reference to the buffer, in which case\n   * av_buffer_is_writable() returns 1.\n   */\n  data: pointer<uint8> = nullptr\n\n  /**\n   * Size of data in bytes.\n   */\n  size: size = 0\n}\n\n@struct\nexport class AVBufferPool {\n  mutex: Mutex\n\n  pool: pointer<BufferPoolEntry> = nullptr\n\n  /**\n   *  number of existing AVBufferRef instances referring to this buffer\n   */\n  refcount: atomic_uint32 = 0\n\n  /**\n   * Size of data in bytes.\n   */\n  size: size = 0\n\n  /**\n   * an opaque pointer, to be used by the freeing callback\n   */\n  opaque: pointer<void> = nullptr\n  alloc: pointer<(size: size) => AVBufferRef> = nullptr\n  alloc2: pointer<(opaque: pointer<void>, size: size) => AVBufferRef> = nullptr\n  poolFree: pointer<(opaque: pointer<void>) => void> = nullptr\n}\n\n@struct\nexport class BufferPoolEntry {\n  data: pointer<uint8> = nullptr\n  /**\n   * an opaque pointer, to be used by the freeing callback\n   */\n  opaque: pointer<void> = nullptr\n\n  /**\n   * a callback for freeing the data\n   */\n  free: pointer<(opaque: pointer<void>, data: pointer<uint8>) => void> = nullptr\n\n  pool: pointer<AVBufferPool> = nullptr\n\n  next: pointer<BufferPoolEntry> = nullptr\n  /*\n   * An AVBuffer structure to (re)use as AVBuffer for subsequent uses\n   * of this BufferPoolEntry.\n   */\n  buffer: AVBuffer\n}\n","/*\n * libmedia AVCodecParameters defined\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { NOPTS_VALUE } from '../constant'\nimport { AVCodecID, AVMediaType } from '../codec'\nimport { AVChromaLocation, AVColorPrimaries, AVColorRange, AVColorSpace,\n  AVColorTransferCharacteristic, AVFieldOrder, AVPixelFormat\n} from '../pixfmt'\nimport { AVSampleFormat } from '../audiosamplefmt'\nimport { Rational } from './rational'\nimport { AVPacketSideData } from './avpacket'\nimport { AVChannelLayout } from './audiosample'\nimport { freeCodecParameters } from '../util/codecparameters'\nimport { symbolStructAddress } from 'cheap/symbol'\n\n/**\n * FFmpeg AVCodecParameters 定义\n */\n@struct\nexport default class AVCodecParameters {\n  /**\n   * General type of the encoded data.\n   */\n  codecType: AVMediaType = AVMediaType.AVMEDIA_TYPE_UNKNOWN\n  /**\n   * Specific type of the encoded data (the codec used).\n   */\n  codecId: AVCodecID = AVCodecID.AV_CODEC_ID_NONE\n  /**\n   * Additional information about the codec (corresponds to the AVI FOURCC).\n   */\n  codecTag: uint32 = 0\n\n  /**\n   * Extra binary data needed for initializing the decoder, codec-dependent.\n   *\n   * Must be allocated with av_malloc() and will be freed by\n   * avcodec_parameters_free(). The allocated size of extradata must be at\n   * least extradata_size + AV_INPUT_BUFFER_PADDING_SIZE, with the padding\n   * bytes zeroed.\n   */\n  extradata: pointer<uint8> = nullptr\n  extradataSize: int32 = 0\n\n  /**\n   * Additional data associated with the entire stream.\n   *\n   * Should be allocated with av_packet_side_data_new() or\n   * av_packet_side_data_add(), and will be freed by avcodec_parameters_free().\n   */\n  codedSideData: pointer<AVPacketSideData> = nullptr\n\n  /**\n   * Amount of entries in @ref coded_side_data.\n   */\n  nbCodedSideData: int32 = 0\n\n  /**\n   * - video: the pixel format, the value corresponds to enum AVPixelFormat.\n   * - audio: the sample format, the value corresponds to enum AVSampleFormat.\n   */\n  format: AVPixelFormat | AVSampleFormat = NOPTS_VALUE\n\n  /**\n   * The average bitrate of the encoded data (in bits per second).\n   */\n  bitRate: int64 = 0n\n\n  /**\n   * The number of bits per sample in the codedwords.\n   *\n   * This is basically the bitrate per sample. It is mandatory for a bunch of\n   * formats to actually decode them. It's the number of bits for one sample in\n   * the actual coded bitstream.\n   *\n   * This could be for example 4 for ADPCM\n   * For PCM formats this matches bits_per_raw_sample\n   * Can be 0\n   */\n  bitsPerCodedSample: int32 = 0\n  /**\n   * This is the number of valid bits in each output sample. If the\n   * sample format has more bits, the least significant bits are additional\n   * padding bits, which are always 0. Use right shifts to reduce the sample\n   * to its actual size. For example, audio formats with 24 bit samples will\n   * have bits_per_raw_sample set to 24, and format set to AV_SAMPLE_FMT_S32.\n   * To get the original sample use \"(int32_t)sample >> 8\".\"\n   *\n   * For ADPCM this might be 12 or 16 or similar\n   * Can be 0\n   */\n  bitsPerRawSample: int32 = 0\n\n  /**\n   * Codec-specific bitstream restrictions that the stream conforms to.\n   */\n  profile: int32 = NOPTS_VALUE\n  level: int32 = NOPTS_VALUE\n\n  /**\n   * Video only. The dimensions of the video frame in pixels.\n   */\n  width: int32 = 0\n  height: int32 = 0\n\n  /**\n   * Video only. The aspect ratio (width / height) which a single pixel\n   * should have when displayed.\n   *\n   * When the aspect ratio is unknown / undefined, the numerator should be\n   * set to 0 (the denominator may have any value).\n   */\n  sampleAspectRatio: Rational = new Rational({den: 1, num: 1})\n\n  /**\n   * Video only. Number of frames per second, for streams with constant frame\n   * durations. Should be set to { 0, 1 } when some frames have differing\n   * durations or if the value is not known.\n   *\n   * @note This field correponds to values that are stored in codec-level\n   * headers and is typically overridden by container/transport-layer\n   * timestamps, when available. It should thus be used only as a last resort,\n   * when no higher-level timing information is available.\n   */\n  framerate: Rational = new Rational({den: 1, num: 0})\n\n  /**\n   * Video only. The order of the fields in interlaced video.\n   */\n  fieldOrder: AVFieldOrder = AVFieldOrder.AV_FIELD_UNKNOWN\n\n  /**\n   * Video only. Additional colorspace characteristics.\n   */\n  colorRange: AVColorRange = AVColorRange.AVCOL_RANGE_UNSPECIFIED\n  colorPrimaries: AVColorPrimaries = AVColorPrimaries.AVCOL_PRI_UNSPECIFIED\n  colorTrc: AVColorTransferCharacteristic = AVColorTransferCharacteristic.AVCOL_TRC_UNSPECIFIED\n  colorSpace: AVColorSpace = AVColorSpace.AVCOL_SPC_UNSPECIFIED\n  chromaLocation: AVChromaLocation = AVChromaLocation.AVCHROMA_LOC_UNSPECIFIED\n\n  /**\n   * Video only. Number of delayed frames.\n   */\n  videoDelay: int32 = 0\n\n  /**\n   * Audio only. The channel layout and number of channels.\n   */\n  chLayout: AVChannelLayout\n\n  /**\n   * Audio only. The number of audio samples per second.\n   */\n  sampleRate: int32 = NOPTS_VALUE\n  /**\n   * Audio only. The number of bytes per coded audio frame, required by some\n   * formats.\n   *\n   * Corresponds to nBlockAlign in WAVEFORMATEX.\n   */\n  blockAlign: int32 = 0\n\n  /**\n   * Audio only. Audio frame size, if known. Required by some formats to be static.\n   */\n  frameSize: int32 = 0\n\n  /**\n   * Audio only. The amount of padding (in samples) inserted by the encoder at\n   * the beginning of the audio. I.e. this number of leading decoded samples\n   * must be discarded by the caller to get the original audio without leading\n   * padding.\n   */\n  initialPadding: int32 = 0\n\n  /**\n   * Audio only. The amount of padding (in samples) appended by the encoder to\n   * the end of the audio. I.e. this number of decoded samples must be\n   * discarded by the caller from the end of the stream to get the original\n   * audio without any trailing padding.\n   */\n  trailingPadding: int32 = 0\n  /**\n   * Audio only. Number of samples to skip after a discontinuity.\n   */\n  seekPreroll: int32 = 0\n\n  /**\n   * 码流格式\n   * 对于 h264/h265 标记是 annexb 还是 avcc 格式\n   */\n  bitFormat: int32 = 0\n\n  destroy() {\n    freeCodecParameters(addressof(this as AVCodecParameters))\n    this[symbolStructAddress] = nullptr\n  }\n}\n","/*\n * libmedia AVPacket defined\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { AVPacketSideDataType } from '../codec'\nimport { AV_TIME_BASE, NOPTS_VALUE, NOPTS_VALUE_BIGINT } from '../constant'\nimport { AVBufferRef } from './avbuffer'\nimport { Rational } from './rational'\n\nexport const enum AVPacketType {\n  AUDIO,\n  VIDEO\n}\n\nexport const enum AVPacketFlags {\n  /**\n   * The packet contains a keyframe\n   */\n  AV_PKT_FLAG_KEY = 1,\n  /**\n   * The packet content is corrupted\n   */\n  AV_PKT_FLAG_CORRUPT = 2,\n  /**\n   * Flag is used to discard packets which are required to maintain valid\n   * decoder state but are not required for output and should be dropped\n   * after decoding.\n   */\n  AV_PKT_FLAG_DISCARD = 4,\n  /**\n   * The packet comes from a trusted source.\n   *\n   * Otherwise-unsafe constructs such as arbitrary pointers to data\n   * outside the packet may be followed.\n   */\n  AV_PKT_FLAG_TRUSTED = 8,\n  /**\n   * Flag is used to indicate packets that contain frames that can\n   * be discarded by the decoder.  I.e. Non-reference frames.\n   */\n  AV_PKT_FLAG_DISPOSABLE = 16,\n\n  /**\n   * The stream is end\n   */\n  AV_PKT_FLAG_END = 32\n}\n\n@struct\nexport class AVPacketSideData {\n  data: pointer<uint8> = nullptr\n\n  size: size = NOPTS_VALUE\n\n  type: AVPacketSideDataType = AVPacketSideDataType.AV_PKT_DATA_UNKNOWN\n}\n\n\n/**\n * FFmpeg AVPacket 定义\n */\n@struct\nexport default class AVPacket {\n  /**\n   * A reference to the reference-counted buffer where the packet data is\n   * stored.\n   * May be NULL, then the packet data is not reference-counted.\n   */\n  buf: pointer<AVBufferRef> = nullptr\n\n  /**\n   * Presentation timestamp in AVStream->time_base units; the time at which\n   * the decompressed packet will be presented to the user.\n   * Can be AV_NOPTS_VALUE if it is not stored in the file.\n   * pts MUST be larger or equal to dts as presentation cannot happen before\n   * decompression, unless one wants to view hex dumps. Some formats misuse\n   * the terms dts and pts/cts to mean something different. Such timestamps\n   * must be converted to true pts/dts before they are stored in AVPacket.\n   */\n  pts: int64 = NOPTS_VALUE_BIGINT\n\n  /**\n   * Decompression timestamp in AVStream->time_base units; the time at which\n   * the packet is decompressed.\n   * Can be AV_NOPTS_VALUE if it is not stored in the file.\n   */\n  dts: int64 = NOPTS_VALUE_BIGINT\n\n  data: pointer<uint8> = nullptr\n\n  size: int32 = 0\n\n  streamIndex: int32 = NOPTS_VALUE\n\n  /**\n   * A combination of @AVPacketFlags values\n   */\n  flags: int32 = 0\n\n  /**\n   * Additional packet data that can be provided by the container.\n   * Packet can contain several types of side information.\n   */\n  sideData: pointer<AVPacketSideData> = nullptr\n  sideDataElems: int32 = 0\n\n  /**\n   * Duration of this packet in AVStream->time_base units, 0 if unknown.\n   * Equals next_pts - this_pts in presentation order.\n   */\n  duration: int64 = NOPTS_VALUE_BIGINT\n\n  pos: int64 = NOPTS_VALUE_BIGINT\n\n  /**\n   * for some private data of the user\n   */\n  opaque: pointer<void> = nullptr\n\n  /**\n   * AVBufferRef for free use by the API user. FFmpeg will never check the\n   * contents of the buffer ref. FFmpeg calls av_buffer_unref() on it when\n   * the packet is unreferenced. av_packet_copy_props() calls create a new\n   * reference with av_buffer_ref() for the target packet's opaque_ref field.\n   *\n   * This is unrelated to the opaque field, although it serves a similar\n   * purpose.\n   */\n  opaqueRef: pointer<AVBufferRef> = nullptr\n\n  /**\n   * 编码时间基\n   * \n   * 封装时用户设置\n   */\n  timeBase: Rational = new Rational({ den: AV_TIME_BASE, num: 1 })\n\n  /**\n   * 码流格式\n   * 对于 h264/h265 标记是 annexb 还是 avcc 格式\n   */\n  bitFormat: int32 = 0\n}\n\n@struct\nexport class AVPacketRef extends AVPacket {\n  refCount: atomic_int32\n}\n\nexport interface AVPacketPool {\n  alloc: () => pointer<AVPacketRef>\n  release: (avpacket: pointer<AVPacketRef>) => void\n}\n","/*\n * libmedia Rational defined\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\n@struct\nexport class Rational {\n  /**\n   * 分子\n   */\n  num: int32 = 1\n  /**\n   * 分母\n   */\n  den: int32 = 1\n\n  constructor(init?: {den: number, num: number}) {\n    if (init) {\n      this.den = init.den\n      this.num = init.num\n    }\n  }\n}\n","/*\n * libmedia av1 syntax util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport BitReader from 'common/io/BitReader'\n\nexport function f(bitReader: BitReader, n: number) {\n  let x = 0\n  for (let i = 0; i < n; i++ ) {\n    x = 2 * x + bitReader.readU1()\n  }\n  return x\n}\n\nexport function uvlc(bitReader: BitReader) {\n  let leadingZeros = 0\n  while (true) {\n    let done = f(bitReader, 1)\n    if (done) {\n      break\n    }\n    leadingZeros++\n  }\n  if (leadingZeros >= 32) {\n    return (1 << 32) - 1\n  }\n  const value =\tf(bitReader, leadingZeros)\n  return value + (1 << leadingZeros) - 1\n}\n\nexport function le(bitReader: BitReader, n: number) {\n  let t = 0\n  for (let i = 0; i < n; i++) {\n    let byte = f(bitReader, 8)\n    t += (byte << (i * 8))\n  }\n  return t\n}\n\nexport function leb128(bitReader: BitReader) {\n  let value = 0\n  let Leb128Bytes = 0\n  for (let i = 0; i < 8; i++ ) {\n    let leb128Byte_ = f(bitReader, 8)\n    value |= ((leb128Byte_ & 0x7f) << (i * 7))\n    Leb128Bytes += 1\n    if (!(leb128Byte_ & 0x80)) {\n      break\n    }\n  }\n  return value\n}\n\nexport function su(bitReader: BitReader, n: number) {\n  let value = f(bitReader, n)\n  let signMask = 1 << (n - 1)\n  if (value & signMask) {\n    value = value - 2 * signMask\n  }\n  return value\n}\n\nexport function ns(bitReader: BitReader, n: number) {\n  let w = Math.floor(Math.log2(n)) + 1\n  let m = (1 << w) - n\n  let v =\tf(bitReader, w - 1)\n  if (v < m) {\n    return v\n  }\n  let extraBit =\tf(bitReader, 1)\n  return (v << 1) - m + extraBit\n}\n\nexport function L(bitReader: BitReader, n: number) {\n  let x = 0\n  for (let i = 0 ; i < n; i++ ) {\n    x = 2 * x + bitReader.readU1()\n  }\n  return x\n}\n\nexport function NS(bitReader: BitReader, n: number) {\n  let w = Math.floor(Math.log2(n)) + 1\n  let m = (1 << w) - n\n  let v =\tL(bitReader, w - 1)\n  if (v < m) {\n    return v\n  }\n  let extraBit = L(bitReader, 1)\n  return (v << 1) - m + extraBit\n}\n","/*\n * libmedia avbuffer util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { avFree, avFreep, avMalloc, avMallocz, avRealloc } from './mem'\nimport * as atomics from 'cheap/thread/atomics'\nimport { memcpy, memset } from 'cheap/std/memory'\nimport { AVBuffer, AVBufferPool, AVBufferRef, AVBufferFlags, BufferPoolEntry } from '../struct/avbuffer'\nimport * as mutex from 'cheap/thread/mutex'\nimport * as stack from 'cheap/stack'\n\nconst BUFFER_FLAG_REALLOCATABLE = 1\n\nconst enum BufferFlags {\n  BUFFER_FLAG_REALLOCATABLE = 1,\n  BUFFER_FLAG_NO_FREE = 2\n}\n\nexport function bufferCreate(\n  buf: pointer<AVBuffer>,\n  data: pointer<uint8>,\n  size: size,\n  free: pointer<(opaque: pointer<void>, data: pointer<uint8>) => void> = nullptr,\n  opaque: pointer<void> = nullptr,\n  flags: int32 = 0\n): pointer<AVBufferRef> {\n  buf.data = data\n  buf.size = size\n  buf.free = free\n  buf.opaque = opaque\n\n  atomics.store(addressof(buf.refcount), 1)\n  buf.flags = flags\n\n  const ref = avMallocz(sizeof(AVBufferRef)) as pointer<AVBufferRef>\n\n  if (!ref) {\n    return nullptr\n  }\n\n  ref.buffer = buf\n  ref.data = data\n  ref.size = size\n  return ref\n}\n\nexport function avbufferCreate(\n  data: pointer<uint8>,\n  size: size,\n  free: pointer<(opaque: pointer<void>, data: pointer<uint8>) => void> = nullptr,\n  opaque: pointer<void> = nullptr,\n  flags: int32 = 0\n): pointer<AVBufferRef> {\n  const buf = avMallocz(sizeof(AVBuffer)) as pointer<AVBuffer>\n  if (!buf) {\n    return nullptr\n  }\n\n  const ref = bufferCreate(buf, data, size, free, opaque, flags)\n\n  if (!ref) {\n    avFree(buf)\n    return nullptr\n  }\n\n  return ref\n}\n\nexport function avbufferAlloc(size: size) {\n  const data = reinterpret_cast<pointer<uint8>>(avMalloc(size))\n  return avbufferCreate(data, size)\n}\n\nexport function avbufferAllocz(size: size) {\n  const p = avbufferAlloc(size)\n  memset(p.data, 0, size)\n  return p\n}\n\nexport function avbufferRef(buf: pointer<AVBufferRef>) {\n  const ref: pointer<AVBufferRef> = reinterpret_cast<pointer<AVBufferRef>>(avMallocz(sizeof(AVBufferRef)))\n  // @ts-ignore\n  accessof(ref) <- accessof(buf)\n  atomics.add(addressof(buf.buffer.refcount), 1)\n  return ref\n}\n\nexport function bufferReplace(dst: pointer<pointer<AVBufferRef>>, src: pointer<pointer<AVBufferRef>>) {\n  const buf = accessof(dst).buffer\n  if (src) {\n    // @ts-ignore\n    accessof(accessof(dst)) <- accessof(accessof(src))\n    avFreep(src)\n  }\n  else {\n    avFreep(dst)\n  }\n  if (atomics.sub(addressof(buf.refcount), 1) === 1) {\n    const freeAvbuffer = !(buf.flagsInternal & BufferFlags.BUFFER_FLAG_NO_FREE)\n    if (buf.opaque) {\n      poolReleaseBuffer(buf.opaque, buf.data)\n    }\n    else {\n      avFree(buf.data)\n    }\n    if (freeAvbuffer) {\n      avFree(buf)\n    }\n  }\n}\n\nexport function avbufferUnref(buf: pointer<pointer<AVBufferRef>>) {\n  if (!buf || !accessof(buf)) {\n    return\n  }\n  bufferReplace(buf, nullptr)\n}\n\nexport function avbufferIsWritable(buf: pointer<AVBufferRef>) {\n  if (buf.buffer.flags & AVBufferFlags.READONLY) {\n    return 0\n  }\n  return atomics.load(addressof(buf.buffer.refcount)) === 1 ? 1 : 0\n}\n\nexport function avbufferGetOpaque(buf: pointer<AVBufferRef>) {\n  return buf.buffer.opaque\n}\n\nexport function avbufferGetRefCount(buf: pointer<AVBufferRef>) {\n  return atomics.load(addressof(buf.buffer.refcount))\n}\n\nexport function avbufferMakeWritable(pbuf: pointer<pointer<AVBufferRef>>) {\n\n  const buf = accessof(pbuf)\n\n  if (!buf) {\n    return -1\n  }\n\n  if (avbufferIsWritable(buf)) {\n    return 0\n  }\n\n  const newbuf = avbufferAlloc(buf.size)\n\n  memcpy(newbuf.data, buf.data, buf.size)\n\n  let newbufp = reinterpret_cast<pointer<pointer<AVBufferRef>>>(stack.malloc(sizeof(pointer)))\n  accessof(newbufp) <- newbuf\n\n  bufferReplace(pbuf, newbufp)\n\n  stack.free(sizeof(pointer))\n\n  return 0\n}\n\nexport function avbufferReplace(pdst: pointer<pointer<AVBufferRef>>, src: pointer<AVBufferRef>) {\n  const dst = accessof(pdst)\n\n  if (!src) {\n    avbufferUnref(pdst)\n    return 0\n  }\n\n  if (dst && dst.data === src.data) {\n    dst.data = src.data\n    dst.size = src.size\n    return 0\n  }\n\n  const tmp = avbufferRef(src)\n\n  avbufferUnref(pdst)\n\n  accessof(pdst) <- tmp\n\n  return 0\n}\n\nexport function avbufferRealloc(pdst: pointer<pointer<AVBufferRef>>, size: size) {\n  if (!accessof(pdst)) {\n    const data = reinterpret_cast<pointer<uint8>>(avRealloc(nullptr, size))\n\n    const buf = avbufferCreate(data, size)\n\n    accessof(pdst) <- buf\n\n    buf.buffer.flagsInternal |= BUFFER_FLAG_REALLOCATABLE\n\n    return 0\n  }\n\n  const ref = accessof(pdst)\n  const buf = ref.buffer\n\n  if (ref.size === size) {\n    return 0\n  }\n\n  if (!(buf.flagsInternal & BUFFER_FLAG_REALLOCATABLE)\n    || !avbufferIsWritable(ref)\n    || ref.data !== buf.data\n  ) {\n    let newRef = reinterpret_cast<pointer<pointer<AVBufferRef>>>(stack.malloc(sizeof(pointer)))\n    accessof(newRef) <- nullptr\n\n    const ret = avbufferRealloc(newRef, size)\n    if (ret < 0) {\n      stack.free(sizeof(pointer))\n      return ret\n    }\n    memcpy(accessof(newRef).data, buf.data, Math.min(size, buf.size))\n\n    bufferReplace(pdst, newRef)\n\n    stack.free(sizeof(pointer))\n    return 0\n  }\n\n  const tmp = reinterpret_cast<pointer<uint8>>(avRealloc(buf.data, size))\n\n  ref.data = buf.data = tmp\n  ref.size = buf.size = size\n\n  return 0\n}\n\nexport function bufferPoolFlush(pool: pointer<AVBufferPool>) {\n  while (pool.pool) {\n    const buf = reinterpret_cast<pointer<BufferPoolEntry>>(pool.pool)\n    pool.pool = buf.next\n\n    if (buf.opaque) {\n      poolReleaseBuffer(buf.opaque, buf.data)\n    }\n    else {\n      avFree(buf.data)\n    }\n    avFree(buf)\n  }\n}\n\nexport function bufferPoolFree(pool: pointer<AVBufferPool>) {\n  bufferPoolFlush(pool)\n\n  mutex.destroy(addressof(pool.mutex))\n\n  avFree(pool)\n}\n\nexport function poolReleaseBuffer(opaque: pointer<void>, data: pointer<void>) {\n  const buf = reinterpret_cast<pointer<BufferPoolEntry>>(opaque)\n  const pool = buf.pool\n\n  mutex.lock(addressof(pool.mutex))\n\n  buf.next = pool.pool\n  pool.pool = buf\n\n  mutex.unlock(addressof(pool.mutex))\n\n  if (atomics.sub(addressof(pool.refcount), 1) === 1) {\n    bufferPoolFree(pool)\n  }\n}\n","/*\n * libmedia avpacket util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport AVPacket, { AVPacketSideData } from '../struct/avpacket'\nimport { memcpy, memset, mapUint8Array, mapSafeUint8Array } from 'cheap/std/memory'\nimport { AVPacketSideDataType } from '../codec'\nimport { avFree, avFreep, avMalloc, avMallocz } from './mem'\nimport { AV_TIME_BASE, NOPTS_VALUE, NOPTS_VALUE_BIGINT } from '../constant'\nimport { avbufferCreate, avbufferRealloc, avbufferRef, avbufferReplace, avbufferUnref } from './avbuffer'\nimport { AVBufferRef } from '../struct/avbuffer'\nimport SafeUint8Array from 'cheap/std/buffer/SafeUint8Array'\n\nconst AV_INPUT_BUFFER_PADDING_SIZE = 64\n\nexport function getAVPacketData(avpacket: pointer<AVPacket>): Uint8Array\nexport function getAVPacketData(avpacket: pointer<AVPacket>, safe: boolean): SafeUint8Array\nexport function getAVPacketData(avpacket: pointer<AVPacket>, safe?: boolean) {\n  return safe ? mapSafeUint8Array(avpacket.data, avpacket.size) : mapUint8Array(avpacket.data, avpacket.size)\n}\n\nexport function initAVPacketData(avpacket: pointer<AVPacket>, length: size) {\n  avpacket.data = avMalloc(length)\n  avpacket.size = length\n  return mapUint8Array(avpacket.data, avpacket.size)\n}\n\nexport function getAVPacketSideData(avpacket: pointer<AVPacket>, type: AVPacketSideDataType): pointer<AVPacketSideData> {\n  for (let i = 0; i < avpacket.sideDataElems; i++) {\n    if (avpacket.sideData[i].type === type) {\n      return addressof(avpacket.sideData[i])\n    }\n  }\n  return nullptr\n}\n\nexport function hasAVPacketSideData(avpacket: pointer<AVPacket>, type: AVPacketSideDataType) {\n  for (let i = 0; i < avpacket.sideDataElems; i++) {\n    if (avpacket.sideData[i].type === type) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function addAVPacketSideData(avpacket: pointer<AVPacket>, type: AVPacketSideDataType, data: pointer<void>, length: size) {\n  for (let i = 0; i < avpacket.sideDataElems; i++) {\n    if (avpacket.sideData[i].type === type) {\n      avFree(avpacket.sideData[i].data)\n      avpacket.sideData[i].data = data\n      avpacket.sideData[i].size = length\n      return\n    }\n  }\n\n  const len = (avpacket.sideDataElems + 1) * sizeof(AVPacketSideData)\n  const sideData = avMallocz(len) as pointer<AVPacketSideData>\n\n  if (avpacket.sideDataElems) {\n    for (let i = 0; i < avpacket.sideDataElems; i++) {\n      sideData[i] = avpacket.sideData[i]\n    }\n  }\n\n  const ele = addressof(sideData[avpacket.sideDataElems])\n  ele.data = data\n  ele.type = type\n  ele.size = length\n\n  if (avpacket.sideData) {\n    avFree(avpacket.sideData)\n  }\n\n  avpacket.sideData = sideData\n  avpacket.sideDataElems++\n}\n\nexport function deleteAVPacketSideData(avpacket: pointer<AVPacket>, type: AVPacketSideDataType) {\n  let index = -1\n  for (let i = 0; i < avpacket.sideDataElems; i++) {\n    if (avpacket.sideData[i].type === type) {\n      index = i\n      break\n    }\n  }\n  if (index > -1) {\n    if (avpacket.sideDataElems === 1) {\n      avFree(avpacket.sideData[0].data)\n      avFree(avpacket.sideData)\n      avpacket.sideData = nullptr\n      avpacket.sideDataElems = 0\n    }\n    else {\n      const len = (avpacket.sideDataElems - 1) * sizeof(AVPacketSideData)\n      const sideData = avMallocz(len) as pointer<AVPacketSideData>\n      for (let i = 0; i < avpacket.sideDataElems; i++) {\n        if (i !== index) {\n          sideData[i] = avpacket.sideData[i]\n        }\n        else {\n          avFree(avpacket.sideData[i].data)\n        }\n      }\n      avFree(avpacket.sideData)\n      avpacket.sideData = sideData\n      avpacket.sideDataElems--\n    }\n  }\n}\n\nexport function createAVPacket(): pointer<AVPacket> {\n  const avpacket: pointer<AVPacket> = avMallocz(sizeof(AVPacket))\n  getAVPacketDefault(avpacket)\n  return avpacket\n}\n\nexport function destroyAVPacket(avpacket: pointer<AVPacket>) {\n  unrefAVPacket(avpacket)\n  avFree(avpacket)\n}\n\nexport function freeAVPacketSideData(pSideData: pointer<pointer<AVPacketSideData>>, pnbSideData: pointer<int32>) {\n\n  const sideData = accessof(pSideData)\n  const nbSideData = accessof(pnbSideData)\n\n  if (sideData) {\n    for (let i = 0; i < nbSideData; i++) {\n      avFree(sideData[i].data)\n    }\n    avFreep(pSideData)\n    accessof(pnbSideData) <- static_cast<int32>(0)\n  }\n}\n\nexport function getAVPacketDefault(avpacket: pointer<AVPacket>) {\n  avpacket.data = nullptr\n  avpacket.size = 0\n  avpacket.sideData = nullptr\n  avpacket.sideDataElems = 0\n  avpacket.streamIndex = NOPTS_VALUE\n  avpacket.pos = NOPTS_VALUE_BIGINT\n  avpacket.duration = NOPTS_VALUE_BIGINT\n  avpacket.flags = 0\n  avpacket.dts = NOPTS_VALUE_BIGINT\n  avpacket.pts = NOPTS_VALUE_BIGINT\n  avpacket.timeBase.den = AV_TIME_BASE\n  avpacket.timeBase.num = 1\n  avpacket.bitFormat = 0\n\n  avpacket.buf = nullptr\n}\n\nexport function copyAVPacketSideData(dst: pointer<AVPacket>, src: pointer<AVPacket>) {\n  freeAVPacketSideData(addressof(dst.sideData), addressof(dst.sideDataElems))\n  if (src.sideDataElems) {\n    let size = sizeof(AVPacketSideData)\n    dst.sideData = avMallocz(size * src.sideDataElems)\n    for (let i = 0; i < src.sideDataElems; i++) {\n      dst.sideData[i].size = src.sideData[i].size\n      dst.sideData[i].type = src.sideData[i].type\n      dst.sideData[i].data = avMalloc(src.sideData[i].size)\n      memcpy(dst.sideData[i].data, src.sideData[i].data, src.sideData[i].size)\n    }\n    dst.sideDataElems = src.sideDataElems\n  }\n}\n\nexport function copyAVPacketProps(dst: pointer<AVPacket>, src: pointer<AVPacket>) {\n  dst.streamIndex = src.streamIndex\n  dst.pos = src.pos\n  dst.duration = src.duration\n  dst.flags = src.flags\n  dst.dts = src.dts\n  dst.pts = src.pts\n  dst.opaque = src.opaque\n  dst.timeBase.den = src.timeBase.den\n  dst.timeBase.num = src.timeBase.num\n  dst.bitFormat = src.bitFormat\n\n  dst.opaqueRef = nullptr\n\n  avbufferReplace(addressof(dst.opaqueRef), src.opaqueRef)\n\n  copyAVPacketSideData(dst, src)\n\n  return 0\n}\n\nfunction allocAVPacket(buf: pointer<pointer<AVBufferRef>>, size: size) {\n  avbufferRealloc(buf, size + AV_INPUT_BUFFER_PADDING_SIZE)\n  memset(accessof(buf).data + size, 0, AV_INPUT_BUFFER_PADDING_SIZE)\n  return 0\n}\n\nexport function refAVPacket(dst: pointer<AVPacket>, src: pointer<AVPacket>) {\n  if (dst.buf) {\n    avbufferUnref(addressof(dst.buf))\n  }\n  dst.buf = nullptr\n  copyAVPacketProps(dst, src)\n\n  if (!src.buf && src.size) {\n    allocAVPacket(addressof(dst.buf), src.size)\n    if (src.size) {\n      memcpy(dst.buf.data, src.data, src.size)\n    }\n    dst.data = dst.buf.data\n  }\n  else if (src.buf) {\n    dst.buf = avbufferRef(src.buf)\n    dst.data = src.data\n  }\n  dst.size = src.size\n\n  return 0\n}\n\nexport function unrefAVPacket(avpacket: pointer<AVPacket>) {\n  freeAVPacketSideData(addressof(avpacket.sideData), addressof(avpacket.sideDataElems))\n  avbufferUnref(addressof(avpacket.opaqueRef))\n\n  if (avpacket.buf) {\n    avbufferUnref(addressof(avpacket.buf))\n  }\n  else if (avpacket.data) {\n    avFree(avpacket.data)\n  }\n  getAVPacketDefault(avpacket)\n}\n\nexport function copyAVPacketData(dst: pointer<AVPacket>, src: pointer<AVPacket>) {\n  if (dst.buf) {\n    avbufferUnref(addressof(dst.buf))\n  }\n  dst.buf = nullptr\n  if (!src.buf && src.size) {\n    allocAVPacket(addressof(dst.buf), src.size)\n    if (src.size) {\n      memcpy(dst.buf.data, src.data, src.size)\n    }\n    dst.data = dst.buf.data\n  }\n  else if (src.buf) {\n    dst.buf = avbufferRef(src.buf)\n    dst.data = src.data\n  }\n  dst.size = src.size\n}\n\nexport function addAVPacketData(avpacket: pointer<AVPacket>, data: pointer<uint8>, size: size) {\n\n  if (avpacket.buf) {\n    avbufferUnref(addressof(avpacket.buf))\n  }\n  else if (avpacket.data) {\n    avFree(avpacket.data)\n  }\n\n  avpacket.buf = avbufferCreate(data, size + AV_INPUT_BUFFER_PADDING_SIZE)\n  avpacket.data = data\n  avpacket.size = size\n}\n","/*\n * libmedia channel util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { AVChannelLayout } from '../struct/audiosample'\nimport { popCount64 } from './common'\nimport { AVChannelOrder } from '../audiosamplefmt'\nimport { avFreep } from './mem'\nimport { memset } from 'cheap/std/memory'\n\nexport function getChannelLayoutNBChannels(layout: uint64) {\n  return popCount64(layout)\n}\n\nexport function unInitChannelLayout(channelLayout: pointer<AVChannelLayout>) {\n  if (channelLayout.order == AVChannelOrder.AV_CHANNEL_ORDER_CUSTOM) {\n    avFreep(addressof(channelLayout.u.map))\n  }\n  memset(channelLayout, 0, sizeof(accessof(channelLayout)))\n}\n","/*\n * libmedia codecparameters util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport AVCodecParameters from '../struct/avcodecparameters'\nimport { memcpy, memset } from 'cheap/std/memory'\nimport { avFree, avFreep, avMalloc, avMallocz } from './mem'\nimport { unInitChannelLayout } from './channel'\nimport { freeAVPacketSideData } from './avpacket'\nimport { AVCodecID, AVMediaType } from '../codec'\nimport { AVChannelOrder } from '../audiosamplefmt'\nimport { AVChromaLocation, AVColorPrimaries, AVColorRange,\n  AVColorSpace, AVColorTransferCharacteristic, AVFieldOrder\n} from '../pixfmt'\nimport { NOPTS_VALUE } from '../constant'\nimport { AVPacketSideData } from '../struct/avpacket'\n\nfunction copyCodecParametersSideData(\n  pDst: pointer<pointer<AVPacketSideData>>,\n  pnbDst: pointer<int32>,\n  src: pointer<AVPacketSideData>,\n  nbSrc: int32\n) {\n\n  if (!src) {\n    return\n  }\n\n  const dst: pointer<AVPacketSideData> = avMallocz(nbSrc * sizeof(AVPacketSideData))\n\n  for (let i = 0; i < nbSrc; i++) {\n    dst[i].type = src[i].type\n    dst[i].size = src[i].size\n    dst[i].data = avMalloc(src[i].size)\n    memcpy(addressof(dst[i].data), addressof(src[i].data), src[i].size)\n  }\n\n  accessof(pnbDst) <- nbSrc\n  accessof(pDst) <- dst\n\n  return 0\n}\n\nexport function copyCodecParameters(dst: pointer<AVCodecParameters>, src: pointer<AVCodecParameters>) {\n  dst.codecType = src.codecType\n  dst.codecId = src.codecId\n  dst.codecTag = src.codecTag\n  dst.format = src.format\n  dst.bitRate = src.bitRate\n  dst.bitsPerCodedSample = src.bitsPerCodedSample\n  dst.bitsPerRawSample = src.bitsPerRawSample\n  dst.profile = src.profile\n  dst.level = src.level\n  dst.width = src.width\n  dst.height = src.height\n  dst.sampleAspectRatio.den = src.sampleAspectRatio.den\n  dst.sampleAspectRatio.num = src.sampleAspectRatio.num\n  dst.fieldOrder = src.fieldOrder\n  dst.colorRange = src.colorRange\n  dst.colorPrimaries = src.colorPrimaries\n  dst.colorTrc = src.colorTrc\n  dst.colorSpace = src.colorSpace\n  dst.chromaLocation = src.chromaLocation\n  dst.videoDelay = src.videoDelay\n  dst.chLayout = src.chLayout\n  dst.sampleRate = src.sampleRate\n  dst.blockAlign = src.blockAlign\n  dst.frameSize = src.frameSize\n  dst.initialPadding = src.initialPadding\n  dst.trailingPadding = src.trailingPadding\n  dst.seekPreroll = src.seekPreroll\n\n  dst.framerate = src.framerate\n\n  if (src.extradata) {\n    if (dst.extradata) {\n      avFree(dst.extradata)\n    }\n    dst.extradata = avMalloc(src.extradataSize)\n    dst.extradataSize = src.extradataSize\n    memcpy(dst.extradata, src.extradata, src.extradataSize)\n  }\n\n  if (src.codedSideData) {\n    copyCodecParametersSideData(addressof(dst.codedSideData), addressof(dst.nbCodedSideData), src.codedSideData, src.nbCodedSideData)\n  }\n}\n\nexport function resetCodecParameters(par: pointer<AVCodecParameters>) {\n  if (par.extradata) {\n    avFreep(addressof(par.extradata))\n  }\n  unInitChannelLayout(addressof(par.chLayout))\n  freeAVPacketSideData(addressof(par.codedSideData), addressof(par.nbCodedSideData))\n  memset(par, 0, sizeof(accessof(par)))\n\n  par.codecType = AVMediaType.AVMEDIA_TYPE_UNKNOWN\n  par.codecId = AVCodecID.AV_CODEC_ID_NONE\n  par.format = -1\n  par.chLayout.order = AVChannelOrder.AV_CHANNEL_ORDER_UNSPEC\n  par.fieldOrder = AVFieldOrder.AV_FIELD_UNKNOWN\n  par.colorRange = AVColorRange.AVCOL_RANGE_UNSPECIFIED\n  par.colorPrimaries = AVColorPrimaries.AVCOL_PRI_UNSPECIFIED\n  par.colorTrc = AVColorTransferCharacteristic.AVCOL_TRC_UNSPECIFIED\n  par.colorSpace = AVColorSpace.AVCOL_SPC_UNSPECIFIED\n  par.chromaLocation = AVChromaLocation.AVCHROMA_LOC_UNSPECIFIED\n  par.sampleAspectRatio.num = 0\n  par.sampleAspectRatio.den = 1\n  par.framerate.num = 0\n  par.framerate.num = 1\n  par.profile = NOPTS_VALUE\n  par.level = NOPTS_VALUE\n}\n\nexport function freeCodecParameters(par: pointer<AVCodecParameters>) {\n  if (!par) {\n    return\n  }\n  resetCodecParameters(par)\n  avFree(par)\n}\n","/*\n * libmedia common util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nexport function popCount(x: uint32) {\n  x -= (x >> 1) & 0x55555555\n  x = (x & 0x33333333) + ((x >> 2) & 0x33333333)\n  x = (x + (x >> 4)) & 0x0F0F0F0F\n  x += x >> 8\n  return (x + (x >> 16)) & 0x3F\n}\n\nexport function popCount64(x: uint64) {\n  return popCount(static_cast<uint32>(x)) + popCount(static_cast<uint32>(x >> 32n))\n}\n\nexport function milliSecond2Second(time: int64) {\n  const integer = time / 1000n\n  const decimal = time - integer * 1000n\n  return Number(integer) + Number(decimal) / 1000\n}\n\nexport function alignFunc(value: int32, alignment: int32) {\n  return (value + alignment - 1) & ~(alignment - 1)\n}\n","/*\n * libmedia expgolomb util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport BitReader from 'common/io/BitReader'\nimport BitWriter from 'common/io/BitWriter'\n\nconst UESizeTable = [\n  // 0 的二进制所需的比特个数\n  1,\n  // 1 的二进制所需的比特个数    \n  1,\n  // 2~3 的二进制所需的比特个数   \n  2, 2,\n  // 4~7 的二进制所需的比特个数\n  3, 3, 3, 3,\n  // 8~15 的二进制所需的比特个数\n  4, 4, 4, 4, 4, 4, 4, 4,\n  // 16~31 的二进制所需的比特个数\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  // 32~63 的二进制所需的比特个数\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  // 64~127 的二进制所需的比特个数\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  // 128~255 的二进制所需的比特个数\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8\n]\n\n/**\n * ue(v) 指数哥伦布解码\n */\nexport function readUE(bitReader: BitReader) {\n  let result = 0\n  // leadingZeroBits\n  let i = 0\n\n  while (i < 32 && bitReader.readU1() === 0) {\n    i++\n  }\n  // 计算 read_bits ( leadingZeroBits )\n  result = bitReader.readU(i)\n  // 计算 codeNum，1 << i 即为 2 的 i 次幂\n  result += (1 << i) - 1\n\n  return result\n}\n\n/**\n * se(v) 有符号指数哥伦布解码\n */\nexport function readSE(bitReader: BitReader) {\n  let result = readUE(bitReader)\n\n  // 判断 result 的奇偶性\n  if (result & 0x01) {\n    // 如果为奇数，说明编码前 > 0\n    result = (result + 1) / 2\n  }\n  else {\n    // 如果为偶数，说明编码前 <= 0\n    result = -result / 2\n  }\n  return result\n}\n\n/**\n * te(v) 截断指数哥伦布解码\n */\nexport function readTE(bitReader: BitReader, x: number) {\n  let result = 0\n  // 判断取值上限\n  if (x === 1) {\n    // 如果为 1 则将读取到的比特值取反\n    result = 1 - bitReader.readU1()\n  }\n  else if (x > 1) {\n    // 否则按照 ue(v) 进行解码\n    result = readUE(bitReader)\n  }\n  return result\n}\n\n/**\n * ue(v) 指数哥伦布编码\n */\nexport function writeUE(bitWriter: BitWriter, value: number) {\n  let size = 0\n\n  if (value === 0) {\n    // 0 直接编码为 1\n    bitWriter.writeU1(1)\n  }\n  else {\n    let tmp = ++value\n    // 判断所需比特个数是否大于 16 位\n    if ( tmp >= 0x00010000 ) {\n      size += 16\n      tmp >>= 16\n    }\n\n    // 判断此时所需比特个数是否大于 8 位\n    if ( tmp >= 0x100 ) {\n      size += 8\n      tmp >>= 8\n    }\n    // 最终 tmp 移位至 8 位以内，去查表\n    size += UESizeTable[tmp]\n\n    // 最终得出编码 value 所需的总比特数：2 * size - 1\n    bitWriter.writeU(2 * size - 1, value)\n  }\n}\n\n/**\n * se(v) 有符号指数哥伦布编码\n */\nexport function writeSE(bitWriter: BitWriter, value: number) {\n  if (value <= 0) {\n    writeUE(bitWriter, -value * 2)\n  }\n  else {\n    writeUE(bitWriter, value * 2 - 1)\n  }\n}\n\n/**\n * te(v) 截断指数哥伦布编码\n */\nexport function writeTE(bitWriter: BitWriter, x: number, value: number) {\n  if (x === 1) {\n    bitWriter.writeU1(1 & ~value)\n  }\n  else if (x > 1) {\n    writeUE(bitWriter, value)\n  }\n}\n","/*\n * libmedia mem util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { memset } from 'cheap/std/memory'\nimport * as logger from 'common/util/logger'\n\nexport function avMalloc(len: size): pointer<void> {\n  const p = malloc(len)\n  if (!p) {\n    logger.fatal('can not alloc buffer')\n  }\n  return p\n}\n\nexport function avMallocz(len: size): pointer<void> {\n  const p = malloc(len)\n  if (!p) {\n    logger.fatal('can not alloc buffer')\n  }\n\n  memset(p, 0, len)\n  return p\n}\n\nexport function avFree(p: pointer<void>) {\n  assert(p, 'can not free empty pointer')\n  free(p)\n}\n\nexport function avFreep(p: pointer<pointer<void>>) {\n  assert(p, 'can not free empty pointer')\n  free(accessof(p))\n  accessof(p) <- nullptr\n}\n\nexport function avRealloc(p: pointer<void>, size: size): pointer<void> {\n  return realloc(p, size)\n}\n","/*\n * libmedia nalu util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport BufferReader from 'common/io/BufferReader'\nimport BufferWriter from 'common/io/BufferWriter'\nimport { Uint8ArrayInterface } from 'common/io/interface'\nimport * as array from 'common/util/array'\n\nexport function isAnnexb(data: Uint8ArrayInterface) {\n  return data.length > 4\n  && data[0] === 0\n  && data[1] === 0\n  && (\n    data[2] === 1\n    || data[2] === 0 && data[3] === 1\n  )\n}\n\nfunction getNextNaluStart(data: Uint8ArrayInterface, offset: number) {\n  let t = 0\n  for (let i = offset; i < data.length; i++) {\n    switch (data[i]) {\n      case 0:\n        t++\n        break\n      case 1:\n        if (t >= 2) {\n          return {\n            offset: i - Math.min(t, 3),\n            startCode: Math.min(t + 1, 4)\n          }\n        }\n        t = 0\n        break\n      default:\n        t = 0\n    }\n  }\n  return {\n    offset: -1,\n    startCode: 0\n  }\n}\n\nexport function splitNaluByStartCode<T extends Uint8ArrayInterface>(buffer: T): T[] {\n  const list = []\n  let offset = 0\n  let current = getNextNaluStart(buffer, offset)\n  let next = {\n    offset: -1,\n    startCode: 0\n  }\n  while (next = getNextNaluStart(buffer, current.offset + current.startCode), next.offset > -1) {\n    list.push(buffer.subarray(current.offset + current.startCode, next.offset, true))\n    current = next\n  }\n  list.push(buffer.subarray(current.offset + current.startCode, undefined, true))\n\n  return list\n}\n\nexport function splitNaluByLength<T extends Uint8ArrayInterface>(buffer: T, naluLengthSizeMinusOne: int32): T[] {\n  const list = []\n  const bufferReader = new BufferReader(buffer)\n  while (bufferReader.remainingSize() > 0) {\n    let length = 0\n    if (naluLengthSizeMinusOne === 3) {\n      length = bufferReader.readUint32()\n    }\n    else if (naluLengthSizeMinusOne === 2) {\n      length = bufferReader.readUint24()\n    }\n    else if (naluLengthSizeMinusOne === 1) {\n      length = bufferReader.readUint16()\n    }\n    else {\n      length = bufferReader.readUint8()\n    }\n    const nalu = buffer.subarray(static_cast<int32>(bufferReader.getPos()), static_cast<int32>(bufferReader.getPos()) + length, true)\n    bufferReader.skip(length)\n    list.push(nalu)\n  }\n  return list\n}\n\nexport function joinNaluByStartCode(nalus: Uint8ArrayInterface[], output?: Uint8Array, slice: boolean = false): Uint8Array {\n  if (!output) {\n    let length = nalus.reduce((prev, nalu, index) => {\n      return prev + ((index && slice) ? 3 : 4) + nalu.length\n    }, 0)\n    output = new Uint8Array(length)\n  }\n\n  const bufferWriter = new BufferWriter(output)\n\n  array.each(nalus, (nalu, index) => {\n    bufferWriter.writeUint8(0x00)\n    bufferWriter.writeUint8(0x00)\n    if (!index && slice) {\n      bufferWriter.writeUint8(0x00)\n    }\n    bufferWriter.writeUint8(0x01)\n    bufferWriter.writeBuffer(nalu)\n  })\n\n  return output\n}\n\nexport function joinNaluByLength(nalus: Uint8Array[], naluLengthSizeMinusOne: int32, output?: Uint8Array): Uint8Array {\n  if (!output) {\n    const length = nalus.reduce((prev, nalu) => {\n      return prev + naluLengthSizeMinusOne + 1 + nalu.length\n    }, 0)\n    output = new Uint8Array(length)\n  }\n  const bufferWriter = new BufferWriter(output)\n\n  array.each(nalus, (nalu) => {\n    if (naluLengthSizeMinusOne === 3) {\n      bufferWriter.writeUint32(nalu.length)\n    }\n    else if (naluLengthSizeMinusOne === 2) {\n      bufferWriter.writeUint24(nalu.length)\n    }\n    else if (naluLengthSizeMinusOne === 1) {\n      bufferWriter.writeUint16(nalu.length)\n    }\n    else {\n      bufferWriter.writeUint8(nalu.length)\n    }\n    bufferWriter.writeBuffer(nalu)\n  })\n  return output\n}\n\nexport function naluUnescape(data: Uint8Array, start = 0, end?: number) {\n\n  if (!end) {\n    end = data.length\n  }\n\n  const buffer = new Uint8Array(data.length)\n\n  let zeroCount = 0\n  let pos = 0\n  for (let i = 0; i < data.length; i++) {\n    if (i >= start && i < end) {\n      if (data[i] === 0) {\n        zeroCount++\n      }\n      else {\n        if (data[i] === 3 && zeroCount === 2 && i + 1 < data.length && data[i + 1] <= 3) {\n          i++\n          if (i === data.length) {\n            break\n          }\n          else {\n            if (data[i] === 0) {\n              zeroCount = 1\n            }\n            else {\n              zeroCount = 0\n            }\n          }\n        }\n        else {\n          zeroCount = 0\n        }\n      }\n    }\n    buffer[pos++] = data[i]\n  }\n\n  return buffer.slice(0, pos)\n}\n\nexport function naluEscape(data: Uint8Array, start: number = 0, end?: number) {\n  if (!end) {\n    end = data.length\n  }\n\n  const indexes = []\n  let zeroCount = 0\n  for (let i = start; i < end; i++) {\n\n    if (i >= end) {\n      break\n    }\n\n    if (data[i] === 0) {\n      zeroCount++\n    }\n    else {\n      if (data[i] <= 3 && zeroCount === 2) {\n        indexes.push(i)\n      }\n      zeroCount = 0\n    }\n  }\n\n  if (indexes.length) {\n    const buffer = new Uint8Array(data.length + indexes.length)\n    let pos = 0\n    let subData = data.subarray(0, indexes[0])\n    buffer.set(subData, pos)\n    pos += subData.length\n\n    buffer[pos++] = 3\n\n    for (let i = 1; i < indexes.length; i++) {\n      subData = data.subarray(indexes[i - 1], indexes[i])\n      buffer.set(subData, pos)\n      pos += subData.length\n      buffer[pos++] = 3\n    }\n\n    subData = data.subarray(indexes[indexes.length - 1], data.length)\n    buffer.set(subData, pos)\n    pos += subData.length\n\n    return buffer\n  }\n  else {\n    return data\n  }\n}\n","/*\n * libmedia rational util\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { Rational } from '../struct/rational'\nimport gcd from 'common/math/gcd'\n\n/**\n * 将一个时间戳由一个时间基转换到另一个时间基\n * \n * @param a 待转换时间戳\n * @param bp 待转换时间戳的时间基\n * @param cq 目标时间基\n */\nexport function avRescaleQ(a: int64, bq: Rational, cq: Rational) {\n  const b = a * static_cast<int64>(bq.num) * static_cast<int64>(cq.den)\n  const c = static_cast<int64>(bq.den) * static_cast<int64>(cq.num)\n  return b / c\n}\n\n/**\n * 将一个时间戳由一个时间基转换到另一个时间基\n * \n * @param a 待转换时间戳\n * @param bp 待转换时间戳的时间基\n * @param cq 目标时间基\n */\nexport function avRescaleQ2(a: int64, bq: pointer<Rational>, cq: pointer<Rational>) {\n  const b = a * static_cast<int64>(bq.num) * static_cast<int64>(cq.den)\n  const c = static_cast<int64>(bq.den) * static_cast<int64>(cq.num)\n  return b / c\n}\n\n/**\n * 将一个时间基转换成 double\n * \n * @param a \n */\nexport function avQ2D(a: Rational) {\n  return a.num / a.den\n}\n\n/**\n * 将一个时间基转换成 double\n * \n * @param a \n */\nexport function avQ2D2(a: pointer<Rational>) {\n  return a.num / a.den\n}\n\n/**\n * 化简 Rational\n * \n * @param a \n */\nexport function avReduce(a: Rational) {\n  const gcdValue = gcd(a.num, a.den)\n  if (gcdValue <= 1) {\n    return\n  }\n  a.den /= gcdValue\n  a.num /= gcdValue\n}\n\n/**\n * 化简 Rational\n * \n * @param a \n */\nexport function avReduce2(a: pointer<Rational>) {\n  const gcdValue = gcd(a.num, a.den)\n  if (gcdValue <= 1) {\n    return\n  }\n  a.den /= gcdValue\n  a.num /= gcdValue\n}\n","/**\n * 基于 https://github.com/codemix/malloc 修改\n * 一个基于跳表的 malloc 算法\n * 添加支持自动扩堆，支持多线程和 alignedAlloc\n */\n\nimport Allocator from './Allocator'\nimport * as object from 'common/util/object'\nimport * as array from 'common/util/array'\nimport { lock, unlock } from '../thread/mutex'\nimport { heapMutex } from '../staticData'\nimport * as logger from 'common/util/logger'\n\nconst ALIGNMENT_IN_BYTES = 8\nconst ALIGNMENT_MASK = ALIGNMENT_IN_BYTES - 1\n\nconst POINTER_SIZE_IN_BYTES = 4\nconst BYTES_TO_QUADS_SHIFT = 2\nconst MIN_FREEABLE_SIZE_IN_BYTES = 16\nconst MIN_FREEABLE_SIZE_IN_QUADS = bytesToQuads(MIN_FREEABLE_SIZE_IN_BYTES)\n\nconst MAX_HEIGHT = 32\n\nconst HEADER_SIZE_IN_QUADS = 1 + (MAX_HEIGHT * 2)\nconst HEADER_OFFSET_IN_QUADS = 1\n\nconst HEIGHT_OFFSET_IN_QUADS = 0\nconst NEXT_OFFSET_IN_QUADS = 2\n\nconst POINTER_SIZE_IN_QUADS = 1\nconst POINTER_OVERHEAD_IN_QUADS = 2\n\nconst FIRST_BLOCK_OFFSET_IN_QUADS = HEADER_OFFSET_IN_QUADS + HEADER_SIZE_IN_QUADS + POINTER_OVERHEAD_IN_QUADS\nconst FIRST_BLOCK_OFFSET_IN_BYTES = FIRST_BLOCK_OFFSET_IN_QUADS * POINTER_SIZE_IN_BYTES\nconst OVERHEAD_IN_BYTES = (FIRST_BLOCK_OFFSET_IN_QUADS + 1) * POINTER_SIZE_IN_BYTES\n\ntype ListNode = {\n  type: string\n  offset: int32\n  size: int32\n  height: int32\n  pointers: int32[]\n  block: number\n}\n\ntype InspectionResult = {\n  header: ListNode\n  blocks: Array<{\n    type: string;\n    size: int32\n    node?: ListNode\n  }>\n  total: number\n  used: number\n}\n\nexport type AllocatorJSOptions = {\n  memory?: WebAssembly.Memory\n  buffer: ArrayBuffer | SharedArrayBuffer\n  byteOffset?: int32\n  byteLength?: int32\n  growAllowed?: boolean\n  growSize?: number\n  maxHeapSize?: number\n  onResize?: (old: Int32Array, need: number) => { buffer: ArrayBuffer, byteOffset?: number, byteLength?: number }\n}\n\nexport default class AllocatorJS implements Allocator {\n\n  private buffer: ArrayBuffer | SharedArrayBuffer\n\n  private byteOffset: int32\n\n  private heapOffset: int32\n\n  private heapLength: int32\n\n  private int32Array: Int32Array\n\n  private updates: Int32Array\n\n  private options: AllocatorJSOptions\n\n  private shared: boolean\n\n  private handles: ((buffer: ArrayBuffer) => void)[]\n\n  constructor(options: AllocatorJSOptions, init: boolean = true) {\n    this.options = object.extend({\n      growSize: 1 * 1024 * 1024,\n      maxHeapSize: 2000 * 1024 * 1024\n    }, options)\n    this.handles = []\n    this.buffer = options.buffer\n    this.shared = false\n    if (this.options.memory || this.buffer instanceof ArrayBuffer || this.buffer instanceof SharedArrayBuffer) {\n      this.byteOffset = options.byteOffset ?? 0\n      this.heapOffset = alignHeapOffset(this.byteOffset + quadsToBytes(MAX_HEIGHT), options.byteLength ?? this.buffer.byteLength)\n      this.heapLength = alignHeapLength((options.byteLength ?? this.buffer.byteLength) - this.heapOffset)\n\n      this.int32Array = new Int32Array(this.buffer, this.heapOffset, bytesToQuads(static_cast<int32>(this.heapLength)))\n      this.updates = new Int32Array(this.buffer, this.byteOffset, MAX_HEIGHT)\n\n      if (typeof SharedArrayBuffer === 'function' && this.buffer instanceof SharedArrayBuffer) {\n        this.shared = true\n      }\n    }\n    else {\n      logger.fatal('Expected buffer to be an instance of Buffer or ArrayBuffer')\n    }\n\n    if (init) {\n      this.updates.fill(HEADER_OFFSET_IN_QUADS)\n      prepare(this.int32Array)\n      checkListIntegrity(this.int32Array)\n    }\n  }\n\n  public addUpdateHandle(handle: (buffer: ArrayBuffer) => void): void {\n    if (!array.has(this.handles, handle)) {\n      this.handles.push(handle)\n    }\n  }\n\n  public removeUpdateHandle(handle: (buffer: ArrayBuffer) => void): void {\n    array.remove(this.handles, handle)\n  }\n\n  private malloc_(size: size): pointer<void> {\n    size = align(size, ALIGNMENT_MASK)\n    if (size < MIN_FREEABLE_SIZE_IN_BYTES) {\n      size = MIN_FREEABLE_SIZE_IN_BYTES\n    }\n\n    assert(!(!this.options.growSize && size > this.heapLength - OVERHEAD_IN_BYTES), `malloc size must be between ${MIN_FREEABLE_SIZE_IN_BYTES} bytes and ${this.heapLength - OVERHEAD_IN_BYTES} bytes`)\n\n    const minimumSize: int32 = bytesToQuads(size)\n    const block: int32 = this.findFreeBlock(this.int32Array, minimumSize)\n    if (block <= HEADER_OFFSET_IN_QUADS) {\n      return nullptr\n    }\n    const blockSize: int32 = readSize(this.int32Array, block)\n\n    if (blockSize - (minimumSize + POINTER_OVERHEAD_IN_QUADS) >= MIN_FREEABLE_SIZE_IN_QUADS) {\n      split(this.int32Array, block, minimumSize, blockSize, this.updates)\n    }\n    else {\n      assert(!(blockSize % 2))\n      remove(this.int32Array, block, blockSize, this.updates)\n    }\n\n    assert(!((quadsToBytes(block) & ALIGNMENT_MASK) !== nullptr), `Address must be a multiple of (${ALIGNMENT_IN_BYTES}).`)\n\n    return quadsToBytes(block) + this.heapOffset\n  }\n\n  /**\n   * Allocate a given number of bytes and return the offset.\n   * If allocation fails, returns 0.\n   */\n  public malloc(size: size): pointer<void> {\n\n    if (this.shared) {\n      lock(heapMutex, !defined(DEBUG))\n      this.checkBuffer()\n    }\n\n    const address = this.malloc_(size)\n\n    if (this.shared) {\n      unlock(heapMutex)\n    }\n\n    return address\n  }\n  public calloc_(num: size, size: size): pointer<void> {\n    let numberOfBytes = num * size\n\n    if (numberOfBytes < MIN_FREEABLE_SIZE_IN_BYTES) {\n      numberOfBytes = MIN_FREEABLE_SIZE_IN_BYTES\n    }\n    else {\n      numberOfBytes = align(numberOfBytes, ALIGNMENT_MASK)\n    }\n\n    const address = this.malloc_(numberOfBytes)\n    if (address === nullptr) {\n      // Not enough space\n      return nullptr\n    }\n    const offset = bytesToQuads(address - this.heapOffset)\n    this.int32Array.subarray(offset, offset + bytesToQuads(numberOfBytes)).fill(0)\n\n    return address\n  }\n\n  public calloc(num: size, size: size): pointer<void> {\n    if (this.shared) {\n      lock(heapMutex, !defined(DEBUG))\n      this.checkBuffer()\n    }\n\n    const address = this.calloc_(num, size)\n\n    if (this.shared) {\n      unlock(heapMutex)\n    }\n\n    return address\n  }\n\n  public realloc_(address: pointer<void>, size: size): pointer<void> {\n\n    if (address === nullptr) {\n      return this.malloc_(size)\n    }\n\n    assert(!((address & ALIGNMENT_MASK) !== nullptr), `Address must be a multiple of (${ALIGNMENT_IN_BYTES}).`)\n\n    const originAddress = address\n\n    if (size === 0) {\n      this.free_(originAddress)\n      return nullptr\n    }\n\n    address -= this.heapOffset\n\n    assert(!(address < FIRST_BLOCK_OFFSET_IN_BYTES || address > this.heapLength), `Address must be between ${FIRST_BLOCK_OFFSET_IN_BYTES} and ${this.heapLength - OVERHEAD_IN_BYTES}`)\n\n    let originBlock = bytesToQuads(address)\n    let block = originBlock\n    let padding = 0\n\n    if (isAlign(this.int32Array, originBlock)) {\n      block = this.int32Array[originBlock - 1]\n      padding = originBlock - block\n    }\n\n    const blockSize: int32 = readSize(this.int32Array, block) - padding\n    const minimumSize: int32 = bytesToQuads(align(size, ALIGNMENT_MASK))\n\n    assert(!(blockSize < MIN_FREEABLE_SIZE_IN_QUADS || blockSize > (this.heapLength - OVERHEAD_IN_BYTES) / 4), `Invalid block: ${block}, got block size: ${quadsToBytes(blockSize)}`)\n\n    if (blockSize >= minimumSize) {\n      return originAddress\n    }\n    else {\n      const newAddress = this.malloc_(size)\n      if (newAddress === nullptr) {\n        this.free_(originAddress)\n        return nullptr\n      }\n      this.int32Array.set(\n        this.int32Array.subarray(originBlock, originBlock + blockSize),\n        bytesToQuads(newAddress - this.heapOffset)\n      )\n      this.free_(originAddress)\n      return newAddress\n    }\n  }\n\n  public realloc(address: pointer<void>, size: size): pointer<void> {\n    if (this.shared) {\n      lock(heapMutex, !defined(DEBUG))\n      this.checkBuffer()\n    }\n\n    address = this.realloc_(address, size)\n\n    if (this.shared) {\n      unlock(heapMutex)\n    }\n\n    return address\n  }\n\n  public alignedAlloc_(alignment: size, size: size): pointer<void> {\n\n    assert(alignment >= 4, `alignment must not smaller then 4, but got ${alignment}`)\n\n    assert(!(alignment & (alignment - 1)), `alignment must be power of 2, but got ${alignment}`)\n\n    if (alignment <= ALIGNMENT_IN_BYTES) {\n      // malloc 以 ALIGNMENT_IN_BYTES 字节对齐\n      return this.malloc_(size)\n    }\n\n    const address = this.malloc_(size + alignment - 1 + POINTER_SIZE_IN_BYTES)\n\n    if (address === nullptr) {\n      return nullptr\n    }\n\n    const alignmentAddress = (address + alignment - 1 + POINTER_SIZE_IN_BYTES) & ~(alignment - 1)\n\n    this.int32Array[bytesToQuads(alignmentAddress - this.heapOffset) - POINTER_SIZE_IN_QUADS] = bytesToQuads(address - this.heapOffset)\n\n    assert(!(alignmentAddress % alignment))\n\n    return alignmentAddress\n  }\n\n  public alignedAlloc(alignment: size, size: size): pointer<void> {\n    if (this.shared) {\n      lock(heapMutex, !defined(DEBUG))\n      this.checkBuffer()\n    }\n\n    const address = this.alignedAlloc_(alignment, size)\n\n    if (this.shared) {\n      unlock(heapMutex)\n    }\n\n    return address\n  }\n\n  private free_(address: pointer<void>): void {\n    if (address === nullptr) {\n      return\n    }\n\n    address -= this.heapOffset\n\n    assert(!((address & ALIGNMENT_MASK) !== nullptr), `Address must be a multiple of (${ALIGNMENT_IN_BYTES}).`)\n\n    assert(!(address < FIRST_BLOCK_OFFSET_IN_BYTES || address > this.heapLength), `Address must be between ${FIRST_BLOCK_OFFSET_IN_BYTES} and ${this.heapLength - OVERHEAD_IN_BYTES}`)\n\n    let block = bytesToQuads(address)\n\n    if (isAlign(this.int32Array, block)) {\n      block = this.int32Array[block - POINTER_SIZE_IN_QUADS]\n    }\n\n    if (isFree(this.int32Array, block)) {\n      return\n    }\n\n    const blockSize: int32 = readSize(this.int32Array, block)\n\n    // 对地址是否合法进行断言\n    assert(blockSize === readSize(this.int32Array, block + blockSize + 1))\n\n    /* istanbul ignore if  */\n    assert(!(blockSize < MIN_FREEABLE_SIZE_IN_QUADS || blockSize > (this.heapLength - OVERHEAD_IN_BYTES) / 4), `Invalid block: ${block}, got block size: ${quadsToBytes(blockSize)}`)\n\n    const preceding: int32 = getFreeBlockBefore(this.int32Array, block)\n    const trailing: int32 = getFreeBlockAfter(this.int32Array, block)\n\n    if (preceding !== nullptr) {\n      if (trailing !== nullptr) {\n        insertMiddle(this.int32Array, preceding, block, blockSize, trailing, this.updates)\n      }\n      else {\n        insertAfter(this.int32Array, preceding, block, blockSize, this.updates)\n      }\n    }\n    else if (trailing !== nullptr) {\n      insertBefore(this.int32Array, trailing, block, blockSize, this.updates)\n    }\n    else {\n      insert(this.int32Array, block, blockSize, this.updates)\n    }\n  }\n\n  /**\n   * Free a number of bytes from the given address.\n   */\n  public free(address: pointer<void>): void {\n    if (this.shared) {\n      lock(heapMutex, !defined(DEBUG))\n      this.checkBuffer()\n    }\n\n    this.free_(address)\n\n    if (this.shared) {\n      unlock(heapMutex)\n    }\n  }\n\n  /**\n   * Return the size of the block at the given address.\n   */\n  public sizeof(address: int32): size {\n\n    if (address === nullptr) {\n      return 0\n    }\n\n    address -= this.heapOffset\n\n    assert(!(address < FIRST_BLOCK_OFFSET_IN_BYTES || address > this.heapLength || typeof address !== 'number' || isNaN(address)), `Address must be between ${FIRST_BLOCK_OFFSET_IN_BYTES} and ${this.heapLength - OVERHEAD_IN_BYTES}`)\n\n    assert(!((address & ALIGNMENT_MASK) !== nullptr), `Address must be a multiple of the pointer size (${POINTER_SIZE_IN_BYTES}).`)\n\n    let block = bytesToQuads(address)\n\n    if (isAlign(this.int32Array, block)) {\n      block = this.int32Array[block - POINTER_SIZE_IN_QUADS]\n    }\n\n    return quadsToBytes(readSize(this.int32Array, block))\n  }\n\n  /**\n   * 获取堆分配信息\n   * \n   * @returns \n   */\n  public inspect(): InspectionResult {\n    this.checkBuffer()\n    return inspect(this.int32Array, this.heapOffset)\n  }\n\n  private findFreeBlock(int32Array: Int32Array, minimumSize: int32): int32 {\n    let block: int32 = findFreeBlock(int32Array, minimumSize)\n    if (block === HEADER_OFFSET_IN_QUADS) {\n      if (this.options.growAllowed && this.heapLength < this.options.maxHeapSize) {\n\n        const block = this.int32Array.length + 1\n\n        let int32Array: Int32Array\n        let updates: Int32Array\n        let byteOffset = 0\n        let heapLength = 0\n        let heapOffset = 0\n\n        if (this.options.onResize) {\n          const result = this.options.onResize(\n            this.int32Array,\n            this.int32Array.byteLength + align(Math.max(this.options.growSize, quadsToBytes(minimumSize)), ALIGNMENT_MASK)\n          )\n          byteOffset = result.byteOffset ?? 0\n          heapOffset = alignHeapOffset(byteOffset + quadsToBytes(MAX_HEIGHT), result.byteLength ?? result.buffer.byteLength)\n          heapLength = alignHeapLength((result.byteLength ?? result.buffer.byteLength) - heapOffset)\n          int32Array = new Int32Array(result.buffer, heapOffset, bytesToQuads(heapLength))\n          updates = new Int32Array(result.buffer, byteOffset, MAX_HEIGHT)\n        }\n        else {\n          const buffer = new ArrayBuffer(this.int32Array.length + bytesToQuads(this.options.growSize))\n          heapOffset = alignHeapOffset(byteOffset + quadsToBytes(MAX_HEIGHT), buffer.byteLength)\n          heapLength = alignHeapLength(buffer.byteLength - heapOffset)\n          int32Array = new Int32Array(buffer, heapOffset, bytesToQuads(heapLength))\n          int32Array.set(this.int32Array, 0)\n          updates = new Int32Array(buffer, byteOffset, MAX_HEIGHT)\n        }\n\n        this.byteOffset = byteOffset\n        this.heapOffset = heapOffset\n        this.buffer = int32Array.buffer\n        this.heapLength = heapLength\n        this.int32Array = int32Array\n        this.updates = updates\n\n        const blockSize = int32Array.length - (block - 1) - POINTER_OVERHEAD_IN_QUADS\n\n        writeFreeBlockSize(int32Array, blockSize, block)\n\n        const preceding: int32 = getFreeBlockBefore(int32Array, block)\n        if (preceding !== nullptr) {\n          insertAfter(int32Array, preceding, block, blockSize, this.updates)\n        }\n        else {\n          insert(int32Array, block, blockSize, this.updates)\n        }\n\n        if (this.handles.length) {\n          array.each(this.handles, (func) => {\n            func(this.buffer)\n          })\n        }\n\n        return this.findFreeBlock(this.int32Array, minimumSize)\n      }\n      return block\n    }\n    else {\n      return block\n    }\n  }\n\n  public getBuffer(): ArrayBuffer {\n    return this.buffer\n  }\n\n  public isAlloc(pointer: pointer<void>) {\n    if (this.shared) {\n      lock(heapMutex, !defined(DEBUG))\n      this.checkBuffer()\n    }\n    const block = bytesToQuads(pointer - this.heapOffset)\n    let next: int32 = this.int32Array[HEADER_OFFSET_IN_QUADS + NEXT_OFFSET_IN_QUADS]\n    // sometime get undefined from the last free node in v8\n    // but it's is all right |=_=\n    while (next && next !== HEADER_OFFSET_IN_QUADS) {\n      if (block >= next && block < next + this.int32Array[next - POINTER_SIZE_IN_QUADS]) {\n        if (this.shared) {\n          unlock(heapMutex)\n        }\n        return false\n      }\n      next = this.int32Array[next + NEXT_OFFSET_IN_QUADS]\n    }\n    if (this.shared) {\n      unlock(heapMutex)\n    }\n    return true\n  }\n\n  private checkBuffer() {\n    if (this.options.memory && this.options.memory.buffer !== this.buffer) {\n      this.buffer = this.options.memory.buffer\n      this.heapLength = alignHeapLength(this.buffer.byteLength - this.heapOffset)\n      this.int32Array = new Int32Array(this.buffer, this.heapOffset, bytesToQuads(static_cast<int32>(this.heapLength)))\n    }\n  }\n}\n\n/**\n * Prepare the given int32Array and ensure it contains a valid header.\n */\nfunction prepare(int32Array: Int32Array) {\n  if (!verifyHeader(int32Array)) {\n    writeInitialHeader(int32Array)\n  }\n}\n\n/**\n * Verify that the int32Array contains a valid header.\n */\nfunction verifyHeader(int32Array: Int32Array): boolean {\n  return int32Array[HEADER_OFFSET_IN_QUADS - 1] === HEADER_SIZE_IN_QUADS\n    && int32Array[HEADER_OFFSET_IN_QUADS + HEADER_SIZE_IN_QUADS] === HEADER_SIZE_IN_QUADS\n}\n\n/**\n * Write the initial header for an empty int32Array.\n */\nfunction writeInitialHeader(int32Array: Int32Array) {\n  const header = HEADER_OFFSET_IN_QUADS\n  const headerSize = HEADER_SIZE_IN_QUADS\n  const block = FIRST_BLOCK_OFFSET_IN_QUADS\n  const blockSize = int32Array.length - (header + headerSize + POINTER_OVERHEAD_IN_QUADS + POINTER_SIZE_IN_QUADS)\n\n  writeFreeBlockSize(int32Array, headerSize, header)\n  int32Array[header + HEIGHT_OFFSET_IN_QUADS] = 1\n  int32Array[header + NEXT_OFFSET_IN_QUADS] = block\n  for (let height = 1; height < MAX_HEIGHT; height++) {\n    int32Array[header + NEXT_OFFSET_IN_QUADS + height] = HEADER_OFFSET_IN_QUADS\n  }\n\n  writeFreeBlockSize(int32Array, blockSize, block)\n  int32Array[block + HEIGHT_OFFSET_IN_QUADS] = 1\n  int32Array[block + NEXT_OFFSET_IN_QUADS] = header\n}\n\n/**\n * Check the integrity of the freelist in the given array.\n */\nfunction checkListIntegrity(int32Array: Int32Array): boolean {\n  let block: int32 = FIRST_BLOCK_OFFSET_IN_QUADS\n  while (block < int32Array.length - POINTER_SIZE_IN_QUADS) {\n    const size: int32 = readSize(int32Array, block)\n    /* istanbul ignore if  */\n    if (size < POINTER_OVERHEAD_IN_QUADS || size >= int32Array.length - FIRST_BLOCK_OFFSET_IN_QUADS) {\n      logger.fatal(`Got invalid sized chunk at ${quadsToBytes(block)} (${quadsToBytes(size)} bytes).`)\n    }\n    else if (isFree(int32Array, block)) {\n      checkFreeBlockIntegrity(int32Array, block, size)\n    }\n    else {\n      checkUsedBlockIntegrity(int32Array, block, size)\n    }\n    block += size + POINTER_OVERHEAD_IN_QUADS\n  }\n  return true\n}\n\nfunction checkFreeBlockIntegrity(int32Array: Int32Array, block: int32, blockSize: int32): boolean {\n  /* istanbul ignore if  */\n  if (int32Array[block - 1] !== int32Array[block + blockSize]) {\n    logger.fatal(`Block length header does not match footer (${quadsToBytes(int32Array[block - 1])} vs ${quadsToBytes(int32Array[block + blockSize])}).`)\n  }\n  const height: int32 = int32Array[block + HEIGHT_OFFSET_IN_QUADS]\n  /* istanbul ignore if  */\n  if (height < 1 || height > MAX_HEIGHT) {\n    logger.fatal(`Block ${quadsToBytes(block)} height must be between 1 and ${MAX_HEIGHT}, got ${height}.`)\n  }\n  for (let i = 0; i < height; i++) {\n    const pointer = int32Array[block + NEXT_OFFSET_IN_QUADS + i]\n    /* istanbul ignore if  */\n    if (pointer >= FIRST_BLOCK_OFFSET_IN_QUADS && !isFree(int32Array, pointer)) {\n      logger.fatal(`Block ${quadsToBytes(block)} has a pointer to a non-free block (${quadsToBytes(pointer)}).`)\n    }\n  }\n  return true\n}\n\nfunction checkUsedBlockIntegrity(int32Array: Int32Array, block: int32, blockSize: int32): boolean {\n  /* istanbul ignore if  */\n  if (int32Array[block - 1] !== int32Array[block + blockSize]) {\n    logger.fatal(`Block length header does not match footer (${quadsToBytes(int32Array[block - 1])} vs ${quadsToBytes(int32Array[block + blockSize])}).`)\n  }\n  else {\n    return true\n  }\n}\n\n\n/**\n * Inspect the freelist in the given array.\n */\nfunction inspect(int32Array: Int32Array, byteOffset: number): InspectionResult {\n  const blocks: { type: string; size: int32; node?: ListNode; offset: number, block: number }[] = []\n  const header: ListNode = readListNode(int32Array, HEADER_OFFSET_IN_QUADS, byteOffset)\n  let block: int32 = FIRST_BLOCK_OFFSET_IN_QUADS\n  let used = 0\n  while (block < int32Array.length - POINTER_SIZE_IN_QUADS) {\n    const size: int32 = readSize(int32Array, block)\n    /* istanbul ignore if  */\n    if (size < POINTER_OVERHEAD_IN_QUADS || size >= int32Array.length) {\n      logger.fatal(`Got invalid sized chunk at ${quadsToBytes(block)} (${quadsToBytes(size)})`)\n    }\n    if (isFree(int32Array, block)) {\n      // @flowIssue todo\n      blocks.push(readListNode(int32Array, block, byteOffset))\n    }\n    else {\n      used += quadsToBytes(size)\n      blocks.push({\n        type: 'used',\n        block: block,\n        offset: quadsToBytes(block) + byteOffset,\n        size: quadsToBytes(size)\n      })\n    }\n    block += size + POINTER_OVERHEAD_IN_QUADS\n  }\n  return { header, blocks, total: quadsToBytes(int32Array.length), used}\n}\n\n/**\n * Convert quads to bytes.\n */\nfunction quadsToBytes(num: int32): int32 {\n  return (num << BYTES_TO_QUADS_SHIFT) >>> 0\n}\n\n/**\n * Convert bytes to quads.\n */\nfunction bytesToQuads(num: int32): int32 {\n  return num >>> BYTES_TO_QUADS_SHIFT\n}\n\n/**\n * Align the given value to 8 bytes.\n */\nfunction align(value: int32, alignment: size): int32 {\n  return ((value + alignment) & ~alignment) >>> 0\n}\n\n/**\n * align heap\n * \n * @param offset heap start offset\n * @param byteLength  buffer length\n * @returns \n */\nfunction alignHeapOffset(offset: int32, byteLength: int32) {\n  const length = byteLength - offset\n  // 保证 heapLength 为 ALIGNMENT_IN_BYTES 对齐\n  let heapOffset = offset + (align(length, ALIGNMENT_MASK) === length\n    ? 0\n    : (length - align(length, ALIGNMENT_MASK) + ALIGNMENT_IN_BYTES))\n\n  return heapOffset\n}\n\nfunction alignHeapLength(length: int32) {\n  // header 所占 int length 为奇数，则总长度也需要为奇数保证 body 为偶数\n  if (!((HEADER_OFFSET_IN_QUADS + HEADER_SIZE_IN_QUADS) % 2)) {\n    length -= POINTER_SIZE_IN_BYTES\n  }\n  return length\n}\n\n/**\n * Read the list pointers for a given block.\n */\nfunction readListNode(int32Array: Int32Array, block: int32, byteOffset: size): ListNode {\n  const height: int32 = int32Array[block + HEIGHT_OFFSET_IN_QUADS]\n  const pointers: int32[] = []\n  for (let i = 0; i < height; i++) {\n    pointers.push(int32Array[block + NEXT_OFFSET_IN_QUADS + i])\n  }\n\n  return {\n    type: 'free',\n    block,\n    offset: quadsToBytes(block) + byteOffset,\n    height,\n    pointers,\n    size: quadsToBytes(int32Array[block - 1])\n  }\n}\n\n\n/**\n * Read the size (in quads) of the block at the given address.\n */\nfunction readSize(int32Array: Int32Array, block: int32): int32 {\n  const n = int32Array[block - 1]\n  const mask = n >> 31\n  return (n + mask) ^ mask\n}\n\n/**\n * Write the size of the block at the given address.\n * Note: This ONLY works for free blocks, not blocks in use.\n */\nfunction writeFreeBlockSize(int32Array: Int32Array, size: int32, block: int32): void {\n  int32Array[block - 1] = size\n  int32Array[block + size] = size\n}\n\n/**\n * Populate the `UPDATES` array with the offset of the last item in each\n * list level, *before* a node of at least the given size.\n */\nfunction findPredecessors(int32Array: Int32Array, minimumSize: int32, UPDATES: Int32Array): void {\n  const listHeight: int32 = int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS]\n\n  let node: int32 = HEADER_OFFSET_IN_QUADS\n\n  for (let height = listHeight; height > 0; height--) {\n    let next: int32 = node + NEXT_OFFSET_IN_QUADS + (height - 1)\n    while (int32Array[next] >= FIRST_BLOCK_OFFSET_IN_QUADS && int32Array[int32Array[next] - 1] < minimumSize) {\n      node = int32Array[next]\n      next = node + NEXT_OFFSET_IN_QUADS + (height - 1)\n    }\n    UPDATES[height - 1] = node\n  }\n}\n\n/**\n * Find a free block with at least the given size and return its offset in quads.\n */\nfunction findFreeBlock(int32Array: Int32Array, minimumSize: int32): int32 {\n  let block: int32 = HEADER_OFFSET_IN_QUADS\n\n  for (let height = int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS]; height > 0; height--) {\n    let next: int32 = int32Array[block + NEXT_OFFSET_IN_QUADS + (height - 1)]\n    while (next !== HEADER_OFFSET_IN_QUADS && int32Array[next - POINTER_SIZE_IN_QUADS] < minimumSize) {\n      block = next\n      next = int32Array[block + NEXT_OFFSET_IN_QUADS + (height - 1)]\n    }\n  }\n\n  block = int32Array[block + NEXT_OFFSET_IN_QUADS]\n  if (block === HEADER_OFFSET_IN_QUADS) {\n    return block\n  }\n  else {\n    return block\n  }\n}\n\n/**\n * Split the given block after a certain number of bytes and add the second half to the freelist.\n */\nfunction split(int32Array: Int32Array, block: int32, firstSize: int32, blockSize: int32, UPDATES: Int32Array): void {\n  const second: int32 = (block + firstSize + POINTER_OVERHEAD_IN_QUADS)\n  const secondSize: int32 = (blockSize - (second - block))\n\n  remove(int32Array, block, blockSize, UPDATES)\n\n  int32Array[block - 1] = -firstSize\n  int32Array[block + firstSize] = -firstSize\n\n  int32Array[second - 1] = -secondSize\n  int32Array[second + secondSize] = -secondSize\n\n  insert(int32Array, second, secondSize, UPDATES)\n}\n\n/**\n * Remove the given block from the freelist and mark it as allocated.\n */\nfunction remove(int32Array: Int32Array, block: int32, blockSize: int32, UPDATES: Int32Array): void {\n  findPredecessors(int32Array, blockSize, UPDATES)\n\n  let node: int32 = int32Array[UPDATES[0] + NEXT_OFFSET_IN_QUADS]\n\n  while (node !== block && node !== HEADER_OFFSET_IN_QUADS && int32Array[node - 1] <= blockSize) {\n    for (let height: number = int32Array[node + HEIGHT_OFFSET_IN_QUADS] - 1; height >= 0; height--) {\n      if (int32Array[node + NEXT_OFFSET_IN_QUADS + height] === block) {\n        UPDATES[height] = node\n      }\n    }\n    node = int32Array[node + NEXT_OFFSET_IN_QUADS]\n  }\n\n  assert(node === block, 'Could not find block to remove.')\n\n  let listHeight: int32 = int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS]\n  for (let height = 0; height < listHeight; height++) {\n    const next: int32 = int32Array[UPDATES[height] + NEXT_OFFSET_IN_QUADS + height]\n    if (next !== block) {\n      break\n    }\n    int32Array[UPDATES[height] + NEXT_OFFSET_IN_QUADS + height] = int32Array[block + NEXT_OFFSET_IN_QUADS + height]\n  }\n\n  while (listHeight > 0 && int32Array[HEADER_OFFSET_IN_QUADS + NEXT_OFFSET_IN_QUADS + (listHeight - 1)] === HEADER_OFFSET_IN_QUADS) {\n    listHeight--\n    int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS] = listHeight\n  }\n  // invert the size sign to signify an allocated block\n\n  int32Array[block - 1] = -blockSize\n  int32Array[block + blockSize] = -blockSize\n}\n\n/**\n * Determine whether the block at the given address is free or not.\n */\nfunction isFree(int32Array: Int32Array, block: int32): boolean {\n  /* istanbul ignore if  */\n  if (block < HEADER_SIZE_IN_QUADS) {\n    return false\n  }\n\n  const size: int32 = int32Array[block - POINTER_SIZE_IN_QUADS]\n\n  if (size < 0) {\n    return false\n  }\n  else {\n    return true\n  }\n}\n\n/**\n * Determine whether the block at the given address is free or not.\n */\nfunction isAlign(int32Array: Int32Array, block: int32): boolean {\n  /* istanbul ignore if  */\n  if (block < HEADER_SIZE_IN_QUADS) {\n    return false\n  }\n\n  const origin: int32 = int32Array[block - POINTER_SIZE_IN_QUADS]\n\n  if (origin < 0) {\n    return false\n  }\n  else {\n    return true\n  }\n}\n\n\n/**\n * Get the address of the block before the given one and return the address *if it is free*,\n * otherwise 0.\n */\nfunction getFreeBlockBefore(int32Array: Int32Array, block: int32): int32 {\n  if (block <= FIRST_BLOCK_OFFSET_IN_QUADS) {\n    return nullptr\n  }\n  const beforeSize: int32 = int32Array[block - POINTER_OVERHEAD_IN_QUADS]\n\n  if (beforeSize < POINTER_OVERHEAD_IN_QUADS) {\n    return nullptr\n  }\n  return block - (POINTER_OVERHEAD_IN_QUADS + beforeSize)\n}\n\n/**\n * Get the address of the block after the given one and return its address *if it is free*,\n * otherwise 0.\n */\nfunction getFreeBlockAfter(int32Array: Int32Array, block: int32): int32 {\n  const blockSize: int32 = readSize(int32Array, block)\n  if (block + blockSize + POINTER_OVERHEAD_IN_QUADS >= int32Array.length - 2) {\n    // Block is the last in the list.\n    return nullptr\n  }\n  const next: int32 = (block + blockSize + POINTER_OVERHEAD_IN_QUADS)\n  const nextSize: int32 = int32Array[next - POINTER_SIZE_IN_QUADS]\n\n  if (nextSize < POINTER_OVERHEAD_IN_QUADS) {\n    return nullptr\n  }\n  return next\n}\n\n\n/**\n * Insert the given block into the freelist and return the number of bytes that were freed.\n */\nfunction insert(int32Array: Int32Array, block: int32, blockSize: int32, UPDATES: Int32Array): int32 {\n  findPredecessors(int32Array, blockSize, UPDATES)\n  const blockHeight: int32 = generateHeight(int32Array, block, blockSize, UPDATES)\n\n  for (let height = 1; height <= blockHeight; height++) {\n    const update: int32 = UPDATES[height - 1] + NEXT_OFFSET_IN_QUADS + (height - 1)\n    int32Array[block + NEXT_OFFSET_IN_QUADS + (height - 1)] = int32Array[update]\n    int32Array[update] = block\n    UPDATES[height - 1] = HEADER_OFFSET_IN_QUADS\n  }\n\n  int32Array[block - 1] = blockSize\n  int32Array[block + blockSize] = blockSize\n  return blockSize\n}\n\n\n/**\n * Insert the given block into the freelist before the given free block,\n * joining them together, returning the number of bytes which were freed.\n */\nfunction insertBefore(int32Array: Int32Array, trailing: int32, block: int32, blockSize: int32, UPDATES: Int32Array): int32 {\n  const trailingSize: int32 = readSize(int32Array, trailing)\n  remove(int32Array, trailing, trailingSize, UPDATES)\n  const size: int32 = (blockSize + trailingSize + POINTER_OVERHEAD_IN_QUADS)\n  int32Array[block - POINTER_SIZE_IN_QUADS] = -size\n  int32Array[trailing + trailingSize] = -size\n  insert(int32Array, block, size, UPDATES)\n  return blockSize\n}\n\n/**\n * Insert the given block into the freelist in between the given free blocks,\n * joining them together, returning the number of bytes which were freed.\n */\nfunction insertMiddle(int32Array: Int32Array, preceding: int32, block: int32, blockSize: int32, trailing: int32, UPDATES: Int32Array): int32 {\n  const precedingSize: int32 = readSize(int32Array, preceding)\n  const trailingSize: int32 = readSize(int32Array, trailing)\n  const size: int32 = ((trailing - preceding) + trailingSize)\n\n  remove(int32Array, preceding, precedingSize, UPDATES)\n  remove(int32Array, trailing, trailingSize, UPDATES)\n  int32Array[preceding - POINTER_SIZE_IN_QUADS] = -size\n  int32Array[trailing + trailingSize] = -size\n  insert(int32Array, preceding, size, UPDATES)\n  return blockSize\n}\n\n/**\n * Insert the given block into the freelist after the given free block,\n * joining them together, returning the number of bytes which were freed.\n */\nfunction insertAfter(int32Array: Int32Array, preceding: int32, block: int32, blockSize: int32, UPDATES: Int32Array): int32 {\n  const precedingSize: int32 = (block - preceding) - POINTER_OVERHEAD_IN_QUADS\n  const size: int32 = ((block - preceding) + blockSize)\n  remove(int32Array, preceding, precedingSize, UPDATES)\n  int32Array[preceding - POINTER_SIZE_IN_QUADS] = -size\n  int32Array[block + blockSize] = -size\n  insert(int32Array, preceding, size, UPDATES)\n  return blockSize\n}\n\n\n\n/**\n * Generate a random height for a block, growing the list height by 1 if required.\n */\nfunction generateHeight(int32Array: Int32Array, block: int32, blockSize: int32, UPDATES: Int32Array): int32 {\n  const listHeight: int32 = int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS]\n  let height: int32 = randomHeight()\n\n  if (blockSize - 1 < height + 1) {\n    height = blockSize - 2\n  }\n\n  if (height > listHeight) {\n    const newHeight: int32 = listHeight + 1\n    int32Array[HEADER_OFFSET_IN_QUADS + HEIGHT_OFFSET_IN_QUADS] = newHeight\n    int32Array[HEADER_OFFSET_IN_QUADS + NEXT_OFFSET_IN_QUADS + (newHeight - 1)] = HEADER_OFFSET_IN_QUADS\n    UPDATES[newHeight] = HEADER_OFFSET_IN_QUADS\n    int32Array[block + HEIGHT_OFFSET_IN_QUADS] = newHeight\n    return newHeight\n  }\n  else {\n    int32Array[block + HEIGHT_OFFSET_IN_QUADS] = height\n    return height\n  }\n}\n\n/**\n * Generate a random height for a new block.\n */\nfunction randomHeight(): number {\n  let height: number = 1\n  while (Math.random() < 0.5 && height < MAX_HEIGHT) {\n    height += 1\n  }\n  return height\n}\n","\ninterface Node {\n  pointer: number\n  length: number\n  free: boolean\n}\n\nexport const enum BuiltinTableSlot {\n  FREE = 1,\n  MALLOC,\n  CALLOC,\n  REALLOC,\n  ALIGNED_ALLOC,\n  SLOT_NB\n}\n\nconst INIT_SIZE = 10\n\nexport class WebassemblyTable {\n\n  table: WebAssembly.Table\n\n  pointer: number\n\n  private nodes: Node[]\n\n  constructor() {\n    this.table = new WebAssembly.Table({\n      initial: BuiltinTableSlot.SLOT_NB + INIT_SIZE,\n      element: 'anyfunc'\n    })\n\n    this.pointer = BuiltinTableSlot.SLOT_NB\n    this.nodes = [{\n      pointer: this.pointer,\n      length: INIT_SIZE,\n      free: true\n    }]\n  }\n\n  public getPointer() {\n    return this.pointer\n  }\n\n  public alloc(count: number) {\n\n    let p = this.findFree(count)\n\n    if (p < 0) {\n      const last = this.nodes[this.nodes.length - 1]\n\n      const length = count - (last.free ? last.length : 0)\n\n      this.table.grow(length)\n\n      if (last.free) {\n        last.length = last.length + length\n      }\n      else {\n        this.nodes.push({\n          pointer: last.pointer + last.length,\n          length,\n          free: true\n        })\n      }\n\n      p = this.findFree(count)\n    }\n\n    const node = this.nodes[p]\n\n    if (node.length > count) {\n      this.nodes.splice(p + 1, 0, {\n        pointer: node.pointer + count,\n        length: node.length - count,\n        free: true\n      })\n      node.length = count\n    }\n\n    node.free = false\n\n    return node.pointer\n  }\n\n  public free(pointer: number) {\n    let p = this.findNode(pointer)\n    const node = this.nodes[p]\n\n    if (node && !node.free) {\n      const before = this.nodes[p - 1]\n      const after = this.nodes[p + 1]\n\n      if (before && before.free) {\n        if (after && after.free) {\n          before.length += (node.length + after.length)\n          this.nodes.splice(p, 2)\n        }\n        else {\n          before.length += node.length\n          this.nodes.splice(p, 1)\n        }\n      }\n      else {\n        if (after && after.free) {\n          node.length += after.length\n          this.nodes.splice(p + 1, 1)\n          node.free = true\n        }\n        else {\n          node.free = true\n        }\n      }\n    }\n\n    if (this.nodes.length === 1 && this.nodes[0].free) {\n      // 当全部 free 之后重新创建新的 Table，之前 WebAssembly 设置的函数引用在 chrome 上没有被回收，会内存泄漏\n      const table = new WebAssembly.Table({\n        initial: BuiltinTableSlot.SLOT_NB + INIT_SIZE,\n        element: 'anyfunc'\n      })\n      this.pointer = BuiltinTableSlot.SLOT_NB\n      this.nodes = [{\n        pointer: this.pointer,\n        length: INIT_SIZE,\n        free: true\n      }]\n      for (let i = 1; i < this.pointer; i++) {\n        table.set(i, this.table.get(i))\n      }\n      this.table = table\n    }\n  }\n\n  public get<T extends(...args: any[]) => any>(index: pointer<T>): T {\n    return this.table.get(index)\n  }\n\n  public set<T extends(...args: any[]) => any>(index: number, value: T) {\n    if (index < 0 || index >= this.pointer) {\n      throw new RangeError('index out of bound')\n    }\n    this.table.set(index, value)\n  }\n\n  public inspect() {\n    return this.nodes\n  }\n\n  private findFree(length: number) {\n    let index = -1\n    for (let i = 0; i < this.nodes.length; i++) {\n      if (this.nodes[i].length >= length && this.nodes[i].free) {\n        index = i\n        break\n      }\n    }\n    return index\n  }\n\n  private findNode(pointer: number) {\n    let index = -1\n    for (let i = 0; i < this.nodes.length; i++) {\n      if (this.nodes[i].pointer === pointer) {\n        index = i\n        break\n      }\n    }\n    return index\n  }\n}\n","import { base64ToUint8Array } from 'common/util/base64'\nimport * as logger from 'common/util/logger'\nimport { override as readoverride} from '../ctypeEnumRead'\nimport { override as writeoverride} from '../ctypeEnumWrite'\nimport * as wasmUtils from 'common/util/wasm'\n\nimport asm from './memory.asm'\nimport { CTypeEnum } from '../typedef'\n\n/**\n * WebAssembly runtime 实例\n */\nexport let instance: WebAssembly.Instance\n\nexport function support() {\n  return !!instance\n}\n\nexport default async function init(memory: WebAssembly.Memory) {\n  try {\n    let wasm = base64ToUint8Array(asm)\n    wasmUtils.setMemoryShared(wasm, typeof SharedArrayBuffer === 'function' && memory.buffer instanceof SharedArrayBuffer)\n\n    instance = (await WebAssembly.instantiate(wasm, {\n      env: {\n        memory\n      }\n    })).instance\n\n    readoverride({\n      [CTypeEnum.char]: instance.exports.readU8 as any,\n      [CTypeEnum.atomic_char]: instance.exports.readU8 as any,\n      [CTypeEnum.uint8]: instance.exports.readU8 as any,\n      [CTypeEnum.atomic_uint8]: instance.exports.readU8 as any,\n      [CTypeEnum.uint16]: instance.exports.readU16 as any,\n      [CTypeEnum.atomic_uint16]: instance.exports.readU16 as any,\n      [CTypeEnum.uint32]: (pointer: pointer<void>) => {\n        return (instance.exports.read32 as Function)(pointer) >>> 0\n      },\n      [CTypeEnum.atomic_uint32]: (pointer: pointer<void>) => {\n        return (instance.exports.read32 as Function)(pointer) >>> 0\n      },\n      [CTypeEnum.uint64]: (pointer: pointer<void>) => {\n        return BigInt.asUintN(64, (instance.exports.read64 as Function)(pointer))\n      },\n      [CTypeEnum.atomic_uint64]: (pointer: pointer<void>) => {\n        return BigInt.asUintN(64, (instance.exports.read64 as Function)(pointer))\n      },\n\n      [CTypeEnum.int8]: instance.exports.read8 as any,\n      [CTypeEnum.atomic_int8]: instance.exports.read8 as any,\n      [CTypeEnum.int16]: instance.exports.read16 as any,\n      [CTypeEnum.atomic_int16]: instance.exports.read16 as any,\n      [CTypeEnum.int32]: instance.exports.read32 as any,\n      [CTypeEnum.atomic_int32]: instance.exports.read32 as any,\n      [CTypeEnum.int64]: instance.exports.read64 as any,\n      [CTypeEnum.atomic_int64]: instance.exports.read64 as any,\n\n      [CTypeEnum.float]: instance.exports.readf32 as any,\n      [CTypeEnum.double]: instance.exports.readf64 as any,\n\n      [CTypeEnum.pointer]: (pointer: pointer<void>) => {\n        return (instance.exports.read32 as Function)(pointer) >>> 0\n      }\n    })\n\n    writeoverride({\n      [CTypeEnum.char]: instance.exports.write8 as any,\n      [CTypeEnum.atomic_char]: instance.exports.write8 as any,\n\n      [CTypeEnum.uint8]: instance.exports.write8 as any,\n      [CTypeEnum.atomic_uint8]: instance.exports.write8 as any,\n      [CTypeEnum.uint16]: instance.exports.write16 as any,\n      [CTypeEnum.atomic_uint16]: instance.exports.write16 as any,\n      [CTypeEnum.uint32]: instance.exports.write32 as any,\n      [CTypeEnum.atomic_uint32]: instance.exports.write32 as any,\n      [CTypeEnum.uint64]: instance.exports.write64 as any,\n      [CTypeEnum.atomic_uint64]: instance.exports.write64 as any,\n\n      [CTypeEnum.int8]: instance.exports.write8 as any,\n      [CTypeEnum.atomic_int8]: instance.exports.write8 as any,\n      [CTypeEnum.int16]: instance.exports.write16 as any,\n      [CTypeEnum.atomic_int16]: instance.exports.write16 as any,\n      [CTypeEnum.int32]: instance.exports.write32 as any,\n      [CTypeEnum.atomic_int32]: instance.exports.write32 as any,\n      [CTypeEnum.int64]: instance.exports.write64 as any,\n      [CTypeEnum.atomic_int64]: instance.exports.write64 as any,\n\n      [CTypeEnum.float]: instance.exports.writef32 as any,\n      [CTypeEnum.double]: instance.exports.writef64 as any,\n\n      [CTypeEnum.pointer]: instance.exports.write32 as any\n    })\n  }\n  catch (error) {\n    logger.warn('memory asm not support, cannot use asm memory function')\n  }\n}\n","import support from 'common/util/support'\nimport { SELF } from 'common/util/constant'\n\n/**\n * 是否使用多线程\n */\nexport const USE_THREADS = defined(ENABLE_THREADS) && (support.thread || defined(ENV_NODE)) && (SELF as any).CHEAP_DISABLE_THREAD !== true\n\n/**\n * 栈地址对齐\n * 栈地址至少是 16 字节对齐，因为 wasm 的基本类型中最大是 v128 16 字节\n */\nexport let STACK_ALIGNMENT = 16\n\n/**\n * 栈大小，应为 STACK_ALIGNMENT 的整数倍\n */\nexport let STACK_SIZE = 1024 * 1024\n\n/**\n * 堆保留段，可用于静态数据区分配\n */\nexport const HEAP_OFFSET = 1024\n\n/**\n * 堆初始大小\n */\nexport const HEAP_INITIAL = ((SELF as any).CHEAP_HEAP_INITIAL ?? defined(CHEAP_HEAP_INITIAL))\n\n/**\n * 堆最大大小\n */\nexport const HEAP_MAXIMUM = 65536\n","import isLittleEndian from 'common/function/isLittleEndian'\nimport { CTypeEnum } from './typedef'\nimport { override as readoverride} from './ctypeEnumRead'\nimport { override as writeoverride} from './ctypeEnumWrite'\nimport AllocatorInterface from './allocator/Allocator'\n\nlet getAllocator: () => AllocatorInterface\nlet getView: () => DataView\n\nconst littleEndian = isLittleEndian()\n\nfunction writeU8(pointer: pointer<void>, value: uint8) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  getView().setUint8(pointer, value)\n}\n\nfunction readU8(pointer: pointer<void>): uint8 {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getUint8(pointer)\n}\n\nfunction writeU16(pointer: pointer<void>, value: uint16) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  getView().setUint16(pointer, value, littleEndian)\n}\n\nfunction readU16(pointer: pointer<void>): uint16 {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getUint16(pointer, littleEndian)\n}\n\nfunction writeU32(pointer: pointer<void>, value: uint32) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  getView().setUint32(pointer, value, littleEndian)\n}\n\nfunction readU32(pointer: pointer<void>): uint32 {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getUint32(pointer, littleEndian)\n}\n\nfunction writeU64(pointer: pointer<void>, value: uint64) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  getView().setBigUint64(pointer, value, littleEndian)\n}\n\nfunction readU64(pointer: pointer<void>): uint64 {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getBigUint64(pointer, littleEndian)\n}\n\nfunction write8(pointer: pointer<void>, value: int8) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  getView().setInt8(pointer, value)\n}\n\nfunction read8(pointer: pointer<void>): int8 {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getInt8(pointer)\n}\n\nfunction write16(pointer: pointer<void>, value: int16) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  getView().setInt16(pointer, value, littleEndian)\n}\n\nfunction read16(pointer: pointer<void>): int16 {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getInt16(pointer, littleEndian)\n}\n\nfunction write32(pointer: pointer<void>, value: int32) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  getView().setInt32(pointer, value, littleEndian)\n}\n\nfunction read32(pointer: pointer<void>): int32 {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getInt32(pointer, littleEndian)\n}\n\nfunction write64(pointer: pointer<void>, value: int64) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  getView().setBigInt64(pointer, value, littleEndian)\n}\n\nfunction read64(pointer: pointer<void>): int64 {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getBigInt64(pointer, littleEndian)\n}\n\nfunction writef32(pointer: pointer<void>, value: float) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  getView().setFloat32(pointer, value, littleEndian)\n}\n\nfunction readf32(pointer: pointer<void>): float {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getFloat32(pointer, littleEndian)\n}\n\nfunction writef64(pointer: pointer<void>, value: float64) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  getView().setFloat64(pointer, value, littleEndian)\n}\n\nfunction readf64(pointer: pointer<void>): float64 | double {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getFloat64(pointer, littleEndian)\n}\n\nfunction readPointer<T>(pointer: pointer<void>): pointer<T> {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().getUint32(pointer, littleEndian) as pointer<T>\n}\n\nfunction writePointer<T>(pointer: pointer<void>, value: pointer<T>) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(getAllocator().isAlloc(pointer), `address ${pointer} is not alloc`)\n  return getView().setUint32(pointer, value, littleEndian)\n}\n\nexport default function init(getAllocator_: () => AllocatorInterface, getView_: () => DataView) {\n\n  getAllocator = getAllocator_\n  getView = getView_\n\n  readoverride({\n    [CTypeEnum.char]: readU8 as any,\n    [CTypeEnum.atomic_char]: readU8 as any,\n\n    [CTypeEnum.uint8]: readU8,\n    [CTypeEnum.atomic_uint8]: readU8 as any,\n    [CTypeEnum.uint16]: readU16,\n    [CTypeEnum.atomic_uint16]: readU16 as any,\n    [CTypeEnum.uint32]: readU32,\n    [CTypeEnum.atomic_uint32]: readU32 as any,\n    [CTypeEnum.uint64]: readU64,\n\n    [CTypeEnum.int8]: read8,\n    [CTypeEnum.atomic_int8]: read8 as any,\n    [CTypeEnum.int16]: read16,\n    [CTypeEnum.atomic_int16]: read16 as any,\n    [CTypeEnum.int32]: read32,\n    [CTypeEnum.atomic_int32]: read32 as any,\n    [CTypeEnum.int64]: read64,\n\n    [CTypeEnum.float]: readf32,\n    [CTypeEnum.double]: readf64,\n    [CTypeEnum.pointer]: readPointer,\n\n    [CTypeEnum.bool]: (pointer: pointer<void>) => {\n      return !!read8(pointer)\n    },\n    [CTypeEnum.atomic_bool]: (pointer: pointer<void>) => {\n      return !!read8(pointer)\n    }\n  })\n\n  writeoverride({\n    [CTypeEnum.char]: writeU8 as any,\n    [CTypeEnum.atomic_char]: writeU8,\n\n    [CTypeEnum.uint8]: writeU8,\n    [CTypeEnum.atomic_uint8]: writeU8,\n    [CTypeEnum.uint16]: writeU16,\n    [CTypeEnum.atomic_uint16]: writeU16 as any,\n    [CTypeEnum.uint32]: writeU32,\n    [CTypeEnum.atomic_uint32]: writeU32 as any,\n    [CTypeEnum.uint64]: writeU64,\n\n    [CTypeEnum.int8]: write8,\n    [CTypeEnum.atomic_int8]: write8 as any,\n    [CTypeEnum.int16]: write16,\n    [CTypeEnum.atomic_int16]: write16 as any,\n    [CTypeEnum.int32]: write32,\n    [CTypeEnum.atomic_int32]: write32 as any,\n    [CTypeEnum.int64]: write64,\n\n    [CTypeEnum.float]: writef32,\n    [CTypeEnum.double]: writef64,\n    [CTypeEnum.pointer]: writePointer,\n\n    [CTypeEnum.bool]: (pointer: pointer<void>, value: bool) => {\n      write8(pointer, value ? 1 : 0)\n    },\n    [CTypeEnum.atomic_bool]: ((pointer: pointer<void>, value: bool) => {\n      write8(pointer, value ? 1 : 0)\n    }) as any\n  })\n}\n","import { CTypeEnum, CTypeEnum2Type } from './typedef'\nimport * as object from 'common/util/object'\n\ntype CTypeEnumRead = {\n  [key in CTypeEnum]: (pointer: pointer<void>) => CTypeEnum2Type<key>\n}\n\nexport const CTypeEnumRead: CTypeEnumRead = {\n  [CTypeEnum.char]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_char]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n\n  [CTypeEnum.uint8]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_uint8]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.uint16]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_uint16]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.uint32]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_uint32]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.uint64]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n\n  [CTypeEnum.int8]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_int8]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.int16]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_int16]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.int32]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_int32]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.int64]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n\n  [CTypeEnum.float]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.double]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.pointer]: function (pointer: pointer<void>) {\n    throw new Error('unimplemented')\n  },\n\n  [CTypeEnum.null]: function (pointer: pointer<void>) {\n    throw new Error('invalid operate')\n  },\n  [CTypeEnum.void]: function (pointer: pointer<void>) {\n    throw new Error('invalid operate')\n  },\n\n  [CTypeEnum.atomic_uint64]: function (pointer: pointer<void>) {\n    throw new Error('invalid operate')\n  },\n  [CTypeEnum.atomic_int64]: function (pointer: pointer<void>) {\n    throw new Error('invalid operate')\n  },\n\n  [CTypeEnum.bool]: function (pointer: pointer<void>) {\n    throw new Error('invalid operate')\n  },\n  [CTypeEnum.atomic_bool]: function (pointer: pointer<void>) {\n    throw new Error('invalid operate')\n  }\n}\n\nexport function override(funcs: Partial<CTypeEnumRead>) {\n  object.extend(CTypeEnumRead, funcs)\n}\n","import { CTypeEnum, CTypeEnum2Type } from './typedef'\nimport * as object from 'common/util/object'\n\ntype CTypeEnumWrite = {\n  [key in CTypeEnum]: (pointer: pointer<void>, value: CTypeEnum2Type<key>) => void\n}\nexport const CTypeEnumWrite: CTypeEnumWrite = {\n  [CTypeEnum.char]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_char]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n\n  [CTypeEnum.uint8]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_uint8]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.uint16]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_uint16]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.uint32]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_uint32]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.uint64]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n\n  [CTypeEnum.int8]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_int8]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.int16]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_int16]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.int32]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.atomic_int32]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.int64]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n\n  [CTypeEnum.float]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.double]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n  [CTypeEnum.pointer]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('unimplemented')\n  },\n\n  [CTypeEnum.null]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('invalid operate')\n  },\n  [CTypeEnum.void]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('invalid operate')\n  },\n\n  [CTypeEnum.atomic_uint64]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('invalid operate')\n  },\n  [CTypeEnum.atomic_int64]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('invalid operate')\n  },\n\n  [CTypeEnum.bool]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('invalid operate')\n  },\n  [CTypeEnum.atomic_bool]: function (pointer: pointer<void>, value: any): void {\n    throw new Error('invalid operate')\n  }\n}\n\nexport function override(funcs: Partial<CTypeEnumWrite>) {\n  object.extend(CTypeEnumWrite, funcs)\n}\n","import { CTypeEnumRead } from './ctypeEnumRead'\nimport { CTypeEnumWrite } from './ctypeEnumWrite'\nimport { symbolStructAddress, symbolStructKeysMeta } from './symbol'\nimport { CTypeEnum, CTypeEnum2Bytes, KeyMeta, KeyMetaKey, Struct } from './typedef'\nimport * as is from 'common/util/is'\nimport * as object from 'common/util/object'\nimport toString from 'common/function/toString'\nimport * as array from 'common/util/array'\n\nfunction definedProperty(target: any, key: string, get: () => any, set: (v: any) => void) {\n  Object.defineProperty(target, key, {\n    get,\n    set,\n    configurable: true,\n    enumerable: true\n  })\n}\n\n/**\n * 指针的值\n * \n * @param address \n * @returns \n */\nfunction getPointerValue(address: () => pointer<void>) {\n  return function () {\n    return CTypeEnumRead[CTypeEnum.pointer](address())\n  }\n}\n\nfunction getStruct(target: any, key: string, address: () => pointer<void>, struct: Struct | {}) {\n  return function () {\n    return target[`__$__${key}`] || (target[`__$__${key}`] = definedStruct(address(), struct))\n  }\n}\n\nfunction getCTypeEnumValue(address: () => pointer<void>, type: CTypeEnum) {\n  return function () {\n    return  CTypeEnumRead[type](address())\n  }\n}\n\nfunction getBitFieldValue(address: () => pointer<void>, type: CTypeEnum, bitLen: number, offset: number) {\n  const shift = CTypeEnum2Bytes[type] * 8 - offset - bitLen\n  const valueMask = Math.pow(2, bitLen) - 1\n  return function () {\n    let value = CTypeEnumRead[type as uint8](address())\n    return (value >>> shift) & valueMask\n  }\n}\n\nfunction setPointerValue(address: () => pointer<void>) {\n  return function (newValue: pointer<void>) {\n    CTypeEnumWrite[CTypeEnum.uint32](address(), newValue)\n  }\n}\n\nfunction setStruct(obj: Object, key: string, address: () => pointer<void>, struct: Struct | {}) {\n  const localKey = `__$__${key}`\n  return function (newValue: Object) {\n    const proxy = obj[localKey] || (obj[localKey] = definedStruct(address(), struct))\n    object.each(newValue, (value, key) => {\n      proxy[key] = value\n    })\n    obj[localKey] = proxy\n  }\n}\n\nfunction setCTypeEnumValue(address: () => pointer<void>, type: CTypeEnum) {\n  return function (newValue: any) {\n    CTypeEnumWrite[type as uint8](address(), newValue)\n  }\n}\n\nfunction setBitFieldValue(address: () => pointer<void>, type: CTypeEnum, bitLen: number, offset: number) {\n  let zeroMask = 0\n  let len = CTypeEnum2Bytes[type] * 8\n  for (let i = 0; i < bitLen; i++) {\n    zeroMask |= (1 << (len - 1 - (i + offset)))\n  }\n  const valueMask = Math.pow(2, bitLen) - 1\n  const shift = len - offset - bitLen\n\n  return function (newValue: any) {\n    const addr = address()\n    const value = CTypeEnumRead[type as uint8](addr)\n    CTypeEnumWrite[type as uint8](\n      addr,\n      (value & ~zeroMask) | ((newValue & valueMask) << shift)\n    )\n  }\n}\n\nfunction definedArrayStruct(address: () => pointer<void>, length: number, type: Struct | {}) {\n  const obj = {}\n  let size = sizeof(type)\n  for (let i = 0; i < length; i++) {\n    const key = toString(i)\n    definedProperty(\n      obj,\n      key,\n      getStruct(\n        obj,\n        key,\n        () => {\n          return address() + size * i\n        },\n        type\n      ),\n      setStruct(\n        obj,\n        key,\n        () => {\n          return address() + size * i\n        },\n        type\n      )\n    )\n  }\n\n  return obj\n}\n\nfunction definedArrayCTypeEnum(address: () => pointer<void>, length: number, type: CTypeEnum) {\n  const obj = {}\n  let size = sizeof(type)\n  for (let i = 0; i < length; i++) {\n    const key = toString(i)\n    definedProperty(\n      obj,\n      key,\n      getCTypeEnumValue(\n        () => {\n          return address() + size * i\n        },\n        type\n      ),\n      setCTypeEnumValue(\n        () => {\n          return address() + size * i\n        },\n        type\n      )\n    )\n  }\n\n  return obj\n}\n\nfunction getArray(address: () => pointer<void>, target: Object, key: string) {\n  return function () {\n    const t = target[`__$__${key}`]\n    t[symbolStructAddress] = address()\n    return t\n  }\n}\n\nfunction setArrayStruct(obj: Object, key: string, address: () => pointer<void>, length: number, type: Struct | {}) {\n  const localKey = `__$__${key}`\n  return function (newValue: any[]) {\n    let proxy = obj[localKey] || definedArrayStruct(address, length, type)\n    proxy[symbolStructAddress] = address()\n    array.each(newValue, (value, key) => {\n      proxy[key] = value\n    })\n    obj[localKey] = proxy\n  }\n}\n\nfunction setArrayCTypeEnum(obj: Object, key: string, address: () => pointer<void>, length: number, type: CTypeEnum) {\n  const localKey = `__$__${key}`\n  return function (newValue: any[]) {\n    let proxy = obj[localKey] || definedArrayCTypeEnum(address, length, type)\n    proxy[symbolStructAddress] = address()\n    array.each(newValue, (value, key) => {\n      proxy[key] = value\n    })\n    obj[localKey] = proxy\n  }\n}\n\nexport function definedStruct<T>(address: pointer<void>, struct: (new () => T) | {}) {\n  let prototype = is.func(struct) ? struct.prototype : struct\n\n  const obj = {}\n  obj[symbolStructAddress] = address\n  Object.setPrototypeOf(obj, prototype)\n\n  while (true) {\n    let keysMeta = prototype[symbolStructKeysMeta] as Map<string, KeyMeta>\n\n    if (keysMeta) {\n      keysMeta.forEach((meta, key) => {\n        if (meta[KeyMetaKey.Array]) {\n          if (meta[KeyMetaKey.Pointer]) {\n            definedProperty(\n              obj,\n              key,\n              getArray(\n                () => {\n                  return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                },\n                obj,\n                key\n              ),\n              setArrayCTypeEnum(\n                obj,\n                key,\n                () => {\n                  return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                },\n                meta[KeyMetaKey.ArrayLength],\n                CTypeEnum.pointer\n              )\n            )\n          }\n          else {\n            if (is.func(meta[KeyMetaKey.Type]) || is.object(meta[KeyMetaKey.Type])) {\n              definedProperty(\n                obj,\n                key,\n                getArray(\n                  () => {\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                  },\n                  obj,\n                  key\n                ),\n                setArrayStruct(\n                  obj,\n                  key,\n                  () => {\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                  },\n                  meta[KeyMetaKey.ArrayLength],\n                  meta[KeyMetaKey.Type]\n                )\n              )\n            }\n            else {\n              definedProperty(\n                obj,\n                key,\n                getArray(\n                  () => {\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                  },\n                  obj,\n                  key\n                ),\n                setArrayCTypeEnum(\n                  obj,\n                  key,\n                  () => {\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                  },\n                  meta[KeyMetaKey.ArrayLength],\n                  meta[KeyMetaKey.Type]\n                )\n              )\n            }\n          }\n        }\n        else {\n          if (meta[KeyMetaKey.Pointer]) {\n            definedProperty(\n              obj,\n              key,\n              getPointerValue(() => {\n                return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n              }),\n              setPointerValue(() => {\n                return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n              })\n            )\n          }\n          else if (is.func(meta[KeyMetaKey.Type]) || is.object(meta[KeyMetaKey.Type])) {\n            definedProperty(\n              obj,\n              key,\n              getStruct(\n                obj,\n                key,\n                () => {\n                  return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                },\n                meta[KeyMetaKey.Type]\n              ),\n              setStruct(\n                obj,\n                key,\n                () => {\n                  return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                },\n                meta[KeyMetaKey.Type]\n              )\n            )\n          }\n          else {\n            if (meta[KeyMetaKey.BitField]) {\n              definedProperty(\n                obj,\n                key,\n                getBitFieldValue(\n                  () => {\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                  },\n                  meta[KeyMetaKey.Type],\n                  meta[KeyMetaKey.BitFieldLength],\n                  meta[KeyMetaKey.BaseBitOffset]\n                ),\n                setBitFieldValue(\n                  () => {\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                  },\n                  meta[KeyMetaKey.Type],\n                  meta[KeyMetaKey.BitFieldLength],\n                  meta[KeyMetaKey.BaseBitOffset]\n                )\n              )\n            }\n            else {\n              definedProperty(\n                obj,\n                key,\n                getCTypeEnumValue(\n                  () => {\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                  },\n                  meta[KeyMetaKey.Type]\n                ),\n                setCTypeEnumValue(\n                  () => {\n                    return obj[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n                  },\n                  meta[KeyMetaKey.Type]\n                )\n              )\n            }\n          }\n        }\n      })\n    }\n    prototype = Object.getPrototypeOf(prototype)\n    if (!prototype) {\n      break\n    }\n  }\n  return obj as T\n}\n\nexport function revokeDefinedStruct<T>(target: T) {\n  let prototype = Object.getPrototypeOf(target)\n  while (true) {\n    let keysMeta = prototype[symbolStructKeysMeta] as Map<string, KeyMeta>\n    if (keysMeta) {\n      keysMeta.forEach((meta, key) => {\n        delete target[key]\n      })\n    }\n    prototype = Object.getPrototypeOf(prototype)\n    if (!prototype) {\n      break\n    }\n  }\n}\n","export default function definedMetaProperty(target: any, key: symbol, value: any) {\n  Object.defineProperty(target, key, {\n    value,\n    writable: false,\n    enumerable: false,\n    configurable: false\n  })\n}\n","import isWorker from 'common/function/isWorker'\nimport AllocatorInterface from './allocator/Allocator'\nimport AllocatorJS from './allocator/AllocatorJS'\nimport { WebassemblyTable } from './allocator/Table'\nimport { SELF } from 'common/util/constant'\nimport { AtomicsBuffer, CTypeEnum } from './typedef'\nimport * as config from './config'\nimport * as staticData from './staticData'\nimport initAtomics from './thread/atomicsImpl'\nimport initMemoryAsm from './asm/memory'\nimport initAtomicsAsm from './thread/asm/atomics'\nimport initCtypeEnumImpl from './ctypeEnumImpl'\nimport isAudioWorklet from 'common/function/isAudioWorklet'\nimport browser from 'common/util/browser'\n\n/**\n * 线程 id\n */\nexport let ThreadId: number = -1\n\nexport let isMainThread: boolean = true\n\n/**\n * 线程名\n */\nexport let ThreadName: string = ''\n\n/**\n * 当前线程的栈顶指针\n */\nexport let StackPointer: WebAssembly.Global = null\n\n/**\n * 栈结束位置\n */\nexport let StackTop: int32 = null\n\n/**\n * 当前线程栈大小\n */\nexport let StackSize: int32 = 0\n\n/**\n * 当前线程的 Table\n */\nexport let Table: WebassemblyTable = null\n\n/**\n * 堆分配器\n */\nexport let Allocator: AllocatorInterface = null\n\n/**\n * 堆\n */\nexport let Memory: WebAssembly.Memory = null\n\n/**\n * 1 字节整型读取\n * - int8\n * - -128 to 127\n */\nlet Heap8: Int8Array = null\n\n/**\n * 2 字节整型读取 \n * - int16\n * - -32768 to 32767\n */\nlet Heap16: Int16Array = null\n\n/**\n * 4 字节整型读取\n * - int32\n * - -2147483648 to 2147483647\n */\nlet Heap32: Int32Array = null\n\n/**\n * 8 字节整型读取\n * - int64\n * - 0 to 4294967295\n */\nlet Heap64: BigInt64Array = null\n\n/**\n * 1 字节无符号整型读取\n * - uint8\n * - 0 to 255\n */\nlet HeapU8: Uint8Array = null\n\n/**\n * 2 字节无符号整型读取\n * - uint16\n * - 0 to 65535\n */\nlet HeapU16: Uint16Array = null\n\n/**\n * 4 字节无符号整型读取\n * - uint32\n * - 0 to 4294967295\n */\nlet HeapU32: Uint32Array = null\n\n/**\n * 8 字节无符号整型读取\n * - uint64\n * - 0 to 4294967295\n */\nlet HeapU64: BigUint64Array = null\n\n/**\n * 32 位浮点数\n * float\n */\nlet HeapFloat32: Float32Array = null\n\n/**\n * 64 位浮点数\n * double\n */\nlet HeapFloat64: Float64Array = null\n\n/**\n * 堆访问器\n */\nlet view: DataView = null\n\nlet AtomicBufferMap: Record<number, AtomicsBuffer> = {\n  [CTypeEnum.atomic_char]: HeapU8,\n  [CTypeEnum.atomic_uint8]: HeapU8,\n  [CTypeEnum.atomic_uint16]: HeapU16,\n  [CTypeEnum.atomic_uint32]: HeapU32,\n  [CTypeEnum.atomic_uint64]: HeapU64,\n  [CTypeEnum.atomic_int8]: Heap8,\n  [CTypeEnum.atomic_int16]: Heap16,\n  [CTypeEnum.atomic_int32]: Heap32,\n  [CTypeEnum.atomic_int64]: Heap64\n}\n\nfunction checkHeap() {\n  if (Memory && Memory.buffer !== HeapU8.buffer) {\n    return true\n  }\n  return false\n}\n\nexport function getHeapU8() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return HeapU8\n}\n\nexport function getHeap8() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return Heap8\n}\n\nexport function getHeapU16() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return HeapU16\n}\n\nexport function getHeap16() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return Heap16\n}\n\nexport function getHeapU32() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return HeapU32\n}\n\nexport function getHeap32() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return Heap32\n}\n\nexport function getHeap64() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return Heap64\n}\n\nexport function getHeapU64() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return HeapU64\n}\n\nexport function getHeapF32() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return HeapFloat32\n}\n\nexport function getHeapF64() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return HeapFloat64\n}\n\nexport function getView() {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return view\n}\n\nexport function getAtomicsBuffer(type: number) {\n  if (defined(ENABLE_THREADS) && checkHeap()) {\n    updateHeap(Memory.buffer)\n  }\n  return AtomicBufferMap[type]\n}\n\nfunction setAllocator(a: AllocatorInterface) {\n  if (Allocator) {\n    Allocator.removeUpdateHandle(updateHeap)\n  }\n  Allocator = a\n  if (SELF.CHeap) {\n    SELF.CHeap.Allocator = Allocator\n  }\n\n  Allocator.addUpdateHandle(updateHeap)\n  updateHeap(Allocator.getBuffer())\n}\n\nfunction updateHeap(heap: ArrayBuffer | SharedArrayBuffer) {\n  Heap8 = new Int8Array(heap)\n  Heap16 = new Int16Array(heap)\n  Heap32 = new Int32Array(heap)\n  Heap64 = new BigInt64Array(heap)\n\n  HeapU8 = new Uint8Array(heap)\n  HeapU16 = new Uint16Array(heap)\n  HeapU32 = new Uint32Array(heap)\n  HeapU64 = new BigUint64Array(heap)\n\n  HeapFloat32 = new Float32Array(heap)\n  HeapFloat64 = new Float64Array(heap)\n\n  view = new DataView(heap)\n\n  AtomicBufferMap = {\n    [CTypeEnum.atomic_char]: HeapU8,\n    [CTypeEnum.atomic_uint8]: HeapU8,\n    [CTypeEnum.atomic_uint16]: HeapU16,\n    [CTypeEnum.atomic_uint32]: HeapU32,\n    [CTypeEnum.atomic_uint64]: HeapU64,\n    [CTypeEnum.atomic_int8]: Heap8,\n    [CTypeEnum.atomic_int16]: Heap16,\n    [CTypeEnum.atomic_int32]: Heap32,\n    [CTypeEnum.atomic_int64]: Heap64\n  }\n}\n\nexport function allocThreadId() {\n  return Atomics.add(HeapU32, staticData.threadCounter >>> 2, 1)\n}\n\n/**\n * 子线程初始化\n * \n * @param options \n */\nexport async function initThread(options: {\n  memory: WebAssembly.Memory\n  stackPointer?: number\n  stackSize?: number\n  name?: string\n  disableAsm?: boolean\n  id?: int32\n}) {\n\n  initCtypeEnumImpl(\n    () => {\n      return Allocator\n    },\n    getView\n  )\n  initAtomics(getAtomicsBuffer)\n\n  Memory = options.memory\n\n  const allocator = new AllocatorJS({\n    buffer: Memory.buffer,\n    memory: Memory,\n    byteOffset: config.HEAP_OFFSET,\n    maxHeapSize: config.HEAP_MAXIMUM * 64 * 1024,\n    growAllowed: true,\n    onResize(old, need) {\n      Memory.grow((need - old.byteLength) >>> 16)\n      return {\n        buffer: Memory.buffer,\n        byteOffset: config.HEAP_OFFSET\n      }\n    }\n  }, false)\n\n  setAllocator(allocator)\n\n  if (options.stackPointer) {\n    StackSize = options.stackSize\n    StackTop = options.stackPointer\n    StackPointer = new WebAssembly.Global({\n      value: 'i32',\n      mutable: true\n    }, StackTop + StackSize)\n    Table = new WebassemblyTable()\n  }\n  if (typeof options.id === 'number') {\n    ThreadId = options.id\n  }\n  else {\n    ThreadId = Atomics.add(HeapU32, staticData.threadCounter >>> 2, 1)\n  }\n  ThreadName = options.name ?? 'anonymous'\n\n  SELF.CHeap = {\n    initThread,\n    Allocator,\n    Table,\n    ThreadId,\n    ThreadName,\n    Memory,\n\n    StackSize,\n    StackTop,\n    StackPointer,\n    isMainThread: false\n  }\n\n  isMainThread = false\n\n  if (!defined(DEBUG)) {\n    if (!options.disableAsm) {\n      // @ts-ignore\n      if (typeof BigInt === 'function' && BigInt !== Number\n        && (\n          browser.chrome && browser.checkVersion(browser.majorVersion, '85', true)\n          || browser.firefox && browser.checkVersion(browser.majorVersion, '78', true)\n          || browser.safari && browser.checkVersion(browser.majorVersion, '15', true)\n          || browser.newEdge\n        )\n      ) {\n        await initMemoryAsm(Memory)\n      }\n      if (defined(ENABLE_THREADS)\n        && config.USE_THREADS\n        && (\n          browser.chrome && browser.checkVersion(browser.majorVersion, '85', true)\n          || browser.firefox && browser.checkVersion(browser.majorVersion, '78', true)\n          || browser.safari && browser.checkVersion(browser.majorVersion, '15', true)\n          || browser.newEdge\n        )\n      ) {\n        await initAtomicsAsm(Memory)\n      }\n    }\n\n  }\n}\n\n/**\n * 主线程初始化\n */\nexport function initMain() {\n  initCtypeEnumImpl(\n    () => {\n      return Allocator\n    },\n    getView\n  )\n  initAtomics(getAtomicsBuffer)\n\n  Memory = SELF.CHeap?.Memory ? SELF.CHeap.Memory : new WebAssembly.Memory({\n    initial: config.HEAP_INITIAL,\n    maximum: config.HEAP_MAXIMUM,\n    shared: config.USE_THREADS\n  })\n\n  Allocator = SELF.CHeap?.Allocator ? (SELF.CHeap.Allocator as AllocatorInterface) : new AllocatorJS({\n    buffer: Memory.buffer,\n    memory: Memory,\n    byteOffset: config.HEAP_OFFSET,\n    maxHeapSize: config.HEAP_MAXIMUM * 64 * 1024,\n    growAllowed: true,\n    onResize(old, need) {\n      Memory.grow((need - old.byteLength) >>> 16)\n      return {\n        buffer: Memory.buffer,\n        byteOffset: config.HEAP_OFFSET\n      }\n    }\n  })\n\n  Allocator.addUpdateHandle(updateHeap)\n\n  updateHeap(Allocator.getBuffer())\n\n  StackSize = SELF.CHeap?.StackSize ? SELF.CHeap.StackSize : config.STACK_SIZE\n  StackTop = SELF.CHeap?.StackTop ? SELF.CHeap.StackTop : Allocator.malloc(StackSize)\n  StackPointer = SELF.CHeap?.StackPointer ? SELF.CHeap.StackPointer : new WebAssembly.Global({\n    value: 'i32',\n    mutable: true\n  }, StackTop + StackSize)\n\n  Table = SELF.CHeap?.Table ? (SELF.CHeap.Table as WebassemblyTable) : new WebassemblyTable()\n\n  ThreadId = SELF.CHeap?.ThreadId ? SELF.CHeap.ThreadId : 0\n  ThreadName = SELF.CHeap?.ThreadName ? SELF.CHeap.ThreadName : 'main'\n\n  if (!SELF.CHeap) {\n    if (config.USE_THREADS && defined(ENABLE_THREADS)) {\n      Atomics.store(HeapU32, staticData.threadCounter >>> 2, ThreadId + 1)\n      Atomics.store(Heap32, addressof(staticData.heapMutex.atomic) >>> 2, 0)\n    }\n    else {\n      HeapU32[staticData.threadCounter >>> 2] = ThreadId + 1\n      let index = addressof(staticData.heapMutex.atomic) >>> 2\n      Heap32[index] = 0\n    }\n  }\n\n  if (!defined(DEBUG) && defined(ENABLE_THREADS)) {\n    // @ts-ignore\n    if (typeof BigInt === 'function' && BigInt !== Number\n      && (\n        browser.chrome && browser.checkVersion(browser.majorVersion, '85', true)\n        || browser.firefox && browser.checkVersion(browser.majorVersion, '78', true)\n        || browser.safari && browser.checkVersion(browser.majorVersion, '15', true)\n        || browser.newEdge\n      )\n    ) {\n      initMemoryAsm(Memory)\n    }\n    if (config.USE_THREADS\n      && defined(ENABLE_THREADS)\n      && (\n        browser.chrome && browser.checkVersion(browser.majorVersion, '85', true)\n        || browser.firefox && browser.checkVersion(browser.majorVersion, '78', true)\n        || browser.safari && browser.checkVersion(browser.majorVersion, '15', true)\n        || browser.newEdge\n      )\n    ) {\n      initAtomicsAsm(Memory)\n    }\n  }\n\n  if (!SELF.CHeap) {\n    SELF.CHeap = {\n      Allocator,\n      Table,\n      ThreadId,\n      ThreadName,\n      Memory,\n\n      StackSize,\n      StackTop,\n      StackPointer,\n      isMainThread: true,\n\n      threadCounter: staticData.threadCounter,\n      heapMutex: staticData.heapMutex\n    }\n  }\n  isMainThread = true\n}\n\nif (defined(ENV_NODE)) {\n  const { isMainThread: isMainThread_ } = require('worker_threads')\n  if (isMainThread_) {\n    initMain()\n  }\n  else {\n    SELF.CHeap = {\n      initThread,\n      isMainThread: false\n    }\n    isMainThread = false\n  }\n}\nelse {\n  if (!isWorker() && !isAudioWorklet()) {\n    initMain()\n  }\n  else {\n    SELF.CHeap = {\n      initThread,\n      isMainThread: false\n    }\n    isMainThread = false\n  }\n}\n","import i32Toi64 from 'common/function/i32Toi64'\nimport i64Toi32 from 'common/function/i64Toi32'\nimport { SELF } from 'common/util/constant'\nimport * as is from 'common/util/is'\n\nfunction BigInt64Array(buffer: ArrayBuffer) {\n  const obj = {\n    int: new Int32Array(buffer),\n    uint: new Uint32Array(buffer),\n    buffer,\n    length: buffer.byteLength >>> 3,\n    byteLength: buffer.byteLength,\n    byteOffset: 0\n  }\n  return new Proxy(obj, {\n    get: function (target, p, receiver) {\n      if (is.string(p) && is.number(+p)) {\n        const offset = (+p) << 1\n        const lowWord = target.uint[offset]\n        const highWord = target.int[offset + 1]\n        const value = static_cast<int64>(i32Toi64(lowWord, Math.abs(highWord)))\n        return highWord >= 0 ? value : -value\n      }\n      return target[p]\n    },\n    set: function (target, p, value, receiver) {\n      if (is.string(p) && is.number(+p)) {\n        let [lowWord, highWord] = i64Toi32(Math.abs(Number(value)))\n        if (value < 0) {\n          highWord = -highWord\n        }\n        const offset = (+p) << 1\n        target.uint[offset] = lowWord\n        target.int[offset + 1] = highWord\n      }\n      else {\n        target[p] = value\n      }\n      return true\n    }\n  })\n}\n\nfunction BigUint64Array(buffer: ArrayBuffer) {\n  const obj = {\n    view: new Uint32Array(buffer),\n    buffer,\n    length: buffer.byteLength >>> 3,\n    byteLength: buffer.byteLength,\n    byteOffset: 0\n  }\n  return new Proxy(obj, {\n    get: function (target, p, receiver) {\n      if (is.string(p) && is.number(+p)) {\n        const offset = (+p) << 1\n        const lowWord = target.view[offset]\n        const highWord = target.view[offset + 1]\n        return static_cast<int64>(i32Toi64(lowWord, highWord))\n      }\n      return target[p]\n    },\n    set: function (target, p, value, receiver) {\n      if (is.string(p) && is.number(+p)) {\n        let [lowWord, highWord] = i64Toi32(value)\n        const offset = (+p) << 1\n        target.view[offset] = lowWord\n        target.view[offset + 1] = highWord\n      }\n      else {\n        target[p] = value\n      }\n      return true\n    }\n  })\n}\n\nexport default function polyfill() {\n  // @ts-ignore\n  if (!SELF.BigInt) {\n    // @ts-ignore\n    SELF.BigInt = Number\n  }\n\n  // @ts-ignore\n  if (!SELF.BigInt64Array) {\n    // @ts-ignore\n    SELF.BigInt64Array = BigInt64Array\n  }\n  // @ts-ignore\n  if (!SELF.BigUint64Array) {\n    // @ts-ignore\n    SELF.BigUint64Array = BigUint64Array\n  }\n\n  if (!SELF.DataView.prototype.getBigInt64) {\n    SELF.DataView.prototype.getBigInt64 = function (this: DataView, byteOffset: number, littleEndian?: boolean) {\n      let lowWord = 0, highWord = 0\n      lowWord = this.getUint32(byteOffset + (littleEndian ? 0 : 4), littleEndian)\n      highWord = this.getInt32(byteOffset + (littleEndian ? 4 : 0), littleEndian)\n      const value = static_cast<int64>(i32Toi64(lowWord, Math.abs(highWord)))\n      return highWord >= 0 ? value : -value\n    }\n  }\n  if (!SELF.DataView.prototype.setBigInt64) {\n    SELF.DataView.prototype.setBigInt64 = function (this: DataView, byteOffset: number, value: bigint, littleEndian?: boolean) {\n      let [lowWord, highWord] = i64Toi32(Math.abs(Number(value)))\n      if (value < 0) {\n        highWord = -highWord\n      }\n      this.setUint32(byteOffset + (littleEndian ? 0 : 4), lowWord, littleEndian)\n      this.setInt32(byteOffset + (littleEndian ? 4 : 0), highWord, littleEndian)\n    }\n  }\n  if (!SELF.DataView.prototype.getBigUint64) {\n    SELF.DataView.prototype.getBigUint64 = function (this: DataView, byteOffset: number, littleEndian?: boolean) {\n      let lowWord = 0, highWord = 0\n      lowWord = this.getUint32(byteOffset + (littleEndian ? 0 : 4), littleEndian)\n      highWord = this.getUint32(byteOffset + (littleEndian ? 4 : 0), littleEndian)\n      return static_cast<int64>(i32Toi64(lowWord, highWord))\n    }\n  }\n  if (!SELF.DataView.prototype.setBigUint64) {\n    SELF.DataView.prototype.setBigUint64 = function (this: DataView, byteOffset: number, value: bigint, littleEndian?: boolean) {\n      const [lowWord, highWord] = i64Toi32(Number(value))\n      this.setUint32(byteOffset + (littleEndian ? 0 : 4), lowWord, littleEndian)\n      this.setUint32(byteOffset + (littleEndian ? 4 : 0), highWord, littleEndian)\n    }\n  }\n\n  const view = new DataView(new ArrayBuffer(8))\n\n  // @ts-ignore\n  if (!SELF.BigInt.asUintN) {\n    // @ts-ignore\n    SELF.BigInt.asUintN = function (bits: number, int: bigint) {\n      view.setBigInt64(0, int)\n      if (bits === 8) {\n        return view.getUint8(0)\n      }\n      if (bits === 16) {\n        return view.getUint16(0)\n      }\n      if (bits === 32) {\n        return view.getUint32(0)\n      }\n      if (bits === 64) {\n        return view.getBigUint64(0)\n      }\n    }\n  }\n\n  // @ts-ignore\n  if (!SELF.BigInt.asIntN) {\n    // @ts-ignore\n    SELF.BigInt.asIntN = function (bits: number, int: bigint) {\n      view.setBigInt64(0, int)\n      if (bits === 8) {\n        return view.getInt8(0)\n      }\n      if (bits === 16) {\n        return view.getInt16(0)\n      }\n      if (bits === 32) {\n        return view.getInt32(0)\n      }\n      if (bits === 64) {\n        return view.getBigInt64(0)\n      }\n    }\n  }\n}\n","import { CTypeEnumRead } from './ctypeEnumRead'\nimport { CTypeEnumWrite } from './ctypeEnumWrite'\nimport { symbolStructAddress, symbolStructKeysMeta, symbolStructProxyRevoke } from './symbol'\nimport { CTypeEnum, CTypeEnum2Bytes, KeyMeta, KeyMetaKey, Struct } from './typedef'\nimport * as is from 'common/util/is'\nimport * as object from 'common/util/object'\nimport * as array from 'common/util/array'\nimport toNumber from 'common/function/toNumber'\n\nconst ObjectPro = Object.getPrototypeOf({})\n\nexport function findKeyMeta<T>(prototype: new () => T, key: string) {\n  while (true) {\n    let keysMeta = prototype[symbolStructKeysMeta] as Map<string, KeyMeta>\n    if (keysMeta) {\n      const meta = keysMeta.get(key)\n      if (meta) {\n        return meta\n      }\n    }\n    prototype = Object.getPrototypeOf(prototype)\n    if (!prototype || prototype === ObjectPro) {\n      return null\n    }\n  }\n}\n\n\nfunction proxyArray(address: pointer<CTypeEnum | Struct>, length: number, type: CTypeEnum | Struct, pointer: 0 | 1) {\n  const obj = {}\n  obj[symbolStructAddress] = address\n\n  let size = sizeof(pointer ? CTypeEnum.pointer : type)\n\n  const proxy = new Proxy(obj, {\n    get(target, propertyKey, receiver) {\n\n      if (propertyKey === symbolStructAddress) {\n        return target[symbolStructAddress]\n      }\n\n      const index = toNumber(propertyKey)\n\n      assert(index < length && index >= 0, `Out Of Bounds, address: ${(target[symbolStructAddress] + index * size).toString(16)}`)\n\n      if (pointer) {\n        return CTypeEnumRead[CTypeEnum.pointer](target[symbolStructAddress] + index * size)\n      }\n      else {\n        if (is.func(type)) {\n          return target[propertyKey]\n        }\n        else {\n          return CTypeEnumRead[type](target[symbolStructAddress] + index * size)\n        }\n      }\n    },\n    set(target, propertyKey, newValue, receiver) {\n\n      if (propertyKey === symbolStructAddress) {\n        target[symbolStructAddress] = newValue\n        return true\n      }\n\n      const index = toNumber(propertyKey)\n\n      assert(index < length && index >= 0, `Out Of Bounds, address: ${(target[symbolStructAddress] + index * size).toString(16)}`)\n\n      if (pointer) {\n\n        assert(is.number(newValue), 'value is not pointer')\n\n        CTypeEnumWrite[CTypeEnum.pointer](target[symbolStructAddress] + index * size, newValue)\n        target[propertyKey] = newValue\n      }\n      else {\n        if (is.func(type)) {\n\n          assert(is.object(newValue) && Object.getPrototypeOf(newValue) == type.prototype, `value is not ${type.prototype.constructor.name}'s instance`)\n\n          const proxy = target[propertyKey] || (target[propertyKey] = proxyStruct(target[symbolStructAddress] + index * size, type))\n          object.each(newValue, (value, key) => {\n            proxy[key] = value\n          })\n          target[propertyKey] = proxy\n        }\n        else {\n\n          assert(is.number(newValue) || is.bigint(newValue), 'value is not number')\n\n          CTypeEnumWrite[type as uint8](target[symbolStructAddress] + index * size, newValue)\n          target[propertyKey] = newValue\n        }\n      }\n      return true\n    }\n  })\n\n  return proxy\n}\n\nexport function proxyStruct<T>(address: pointer<void>, struct: (new () => T) | {}): T {\n  const prototype = is.func(struct) ? struct.prototype : struct\n\n  const obj = {}\n  obj[symbolStructAddress] = address\n  Object.setPrototypeOf(obj, prototype)\n\n  const { proxy, revoke } = Proxy.revocable(obj, {\n    get(target, propertyKey, receiver) {\n      if (is.string(propertyKey)) {\n\n        assert(target[symbolStructAddress] !== nullptr, 'target address is null, maybe is free')\n\n        const meta = findKeyMeta(prototype, (propertyKey as string).replace(/^\\$+/, ''))\n\n        if (meta) {\n          const address = target[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n          if (meta[KeyMetaKey.Array]) {\n            const t = target[propertyKey]\n            t[symbolStructAddress] = address\n            return t\n          }\n          else if (meta[KeyMetaKey.Pointer]) {\n            let p = CTypeEnumRead[CTypeEnum.pointer](address)\n            return p\n          }\n          else if (is.func(meta[KeyMetaKey.Type]) || is.object(meta[KeyMetaKey.Type])) {\n            return target[propertyKey] || (target[propertyKey] = proxyStruct(address, meta[KeyMetaKey.Type]))\n          }\n          else {\n            let value = CTypeEnumRead[meta[KeyMetaKey.Type] as uint8](address)\n            if (meta[KeyMetaKey.BitField]) {\n              value = ((value >>> (CTypeEnum2Bytes[meta[KeyMetaKey.Type]] * 8 - meta[KeyMetaKey.BaseBitOffset] - meta[KeyMetaKey.BitFieldLength]))\n                & (Math.pow(2, meta[KeyMetaKey.BitFieldLength]) - 1))\n            }\n            return value\n          }\n        }\n        else {\n          return target[propertyKey]\n        }\n      }\n      else {\n        return target[propertyKey]\n      }\n    },\n    set(target, propertyKey, newValue, receiver) {\n      if (is.string(propertyKey)) {\n        assert(target[symbolStructAddress] !== nullptr, 'target address is null, maybe has freed')\n        const meta = findKeyMeta(prototype, (propertyKey as string).replace(/^\\$+/, ''))\n        if (meta) {\n          const address = target[symbolStructAddress] + meta[KeyMetaKey.BaseAddressOffset]\n          if (meta[KeyMetaKey.Array]) {\n            const proxy = target[propertyKey] || proxyArray(address, meta[KeyMetaKey.ArrayLength], meta[KeyMetaKey.Type], meta[KeyMetaKey.Pointer])\n            array.each(newValue, (value, key) => {\n              proxy[key] = value\n            })\n            target[propertyKey] = proxy\n          }\n          else {\n            if (meta[KeyMetaKey.Pointer]) {\n\n              assert(is.number(newValue), `value is not pointer, struct: ${prototype.constructor.name}, name: ${propertyKey as string}`)\n\n              CTypeEnumWrite[CTypeEnum.pointer](address, newValue)\n              target[propertyKey] = newValue\n            }\n            else if (is.func(meta[KeyMetaKey.Type]) || is.object(meta[KeyMetaKey.Type])) {\n\n              assert(\n                is.object(newValue)\n                && Object.getPrototypeOf(newValue) === (\n                  is.func(meta[KeyMetaKey.Type])\n                    ? meta[KeyMetaKey.Type].prototype\n                    : meta[KeyMetaKey.Type]\n                ),\n                `value is not ${is.func(meta[KeyMetaKey.Type]) ? meta[KeyMetaKey.Type].prototype.constructor.name : 'inline struct'}'s instance, name: ${propertyKey as string}`\n              )\n\n              const proxy = target[propertyKey] || (target[propertyKey] = proxyStruct(address, meta[KeyMetaKey.Type]))\n              object.each(newValue, (value, key) => {\n                proxy[key] = value\n              })\n              target[propertyKey] = proxy\n            }\n            else {\n\n              assert(is.number(newValue) || is.bigint(newValue), 'value is not number')\n\n              if (meta[KeyMetaKey.BitField]) {\n\n                assert(!is.bigint(newValue), `bigint is not support in bit field, struct: ${prototype.constructor.name}, name: ${propertyKey as string}`)\n\n                let mask = 0\n                let len = CTypeEnum2Bytes[meta[KeyMetaKey.Type]] * 8\n                for (let i = 0; i < meta[KeyMetaKey.BitFieldLength]; i++) {\n                  mask |= (1 << (len - 1 - (i + meta[KeyMetaKey.BaseBitOffset])))\n                }\n                const value = CTypeEnumRead[meta[KeyMetaKey.Type] as uint8](address)\n\n                CTypeEnumWrite[meta[KeyMetaKey.Type] as uint8](\n                  address,\n                  (value & ~mask) | ((newValue & (Math.pow(2, meta[KeyMetaKey.BitFieldLength]) - 1))\n                    << (len - meta[KeyMetaKey.BaseBitOffset] - meta[KeyMetaKey.BitFieldLength]))\n                )\n              }\n              else {\n                CTypeEnumWrite[meta[KeyMetaKey.Type] as uint8](address, newValue)\n              }\n              target[propertyKey] = newValue\n            }\n          }\n        }\n        else {\n          target[propertyKey] = newValue\n        }\n      }\n      else {\n        target[propertyKey] = newValue\n      }\n      return true\n    }\n  })\n\n  obj[symbolStructProxyRevoke] = revoke\n\n  return proxy as T\n}\n\nexport function revokeProxyStruct<T>(target: T) {\n  const revoke = target[symbolStructProxyRevoke]\n  if (revoke) {\n    revoke()\n  }\n}\n","import { StackPointer, StackTop, StackSize} from './heap'\n\nexport function malloc(size: size): pointer<void> {\n  assert(StackPointer.value - size >= StackTop, 'stack up overflow')\n  StackPointer.value -= size\n  return StackPointer.value\n}\n\nexport function free(size: size): void {\n  assert(StackPointer.value + size <= StackTop + StackSize, 'stack down overflow')\n  StackPointer.value += size\n}\n","/**\n * 静态分配区只能在此文件分配\n * 导出在其他地方使用\n */\n\nimport { SELF } from 'common/util/constant'\nimport * as config from './config'\nimport { Mutex } from './thread/mutex'\n\n/**\n * 静态分配区栈顶指针\n */\nlet pointer: pointer<uint8> = reinterpret_cast<pointer<uint8>>(static_cast<uint32>(nullptr) + 1)\n\nfunction malloc(length: size, algin: number = 1): pointer<void> {\n\n  let address = pointer\n\n  while (address % algin) {\n    address++\n  }\n\n  assert(address < config.HEAP_OFFSET, 'static data overflow')\n\n  pointer = reinterpret_cast<pointer<uint8>>(address + length)\n\n  return address\n}\n\n/**\n * 线程计数器地址\n */\nexport const threadCounter: pointer<uint32> = SELF.CHeap?.threadCounter\n  ? SELF.CHeap.threadCounter\n  : reinterpret_cast<pointer<uint32>>(malloc(sizeof(uint32), sizeof(uint32)))\n\n/**\n * 堆分配锁地址\n */\nexport const heapMutex: pointer<Mutex> = SELF.CHeap?.heapMutex\n  ? SELF.CHeap.heapMutex\n  : reinterpret_cast<pointer<Mutex>>(malloc(sizeof(Mutex), sizeof(atomic_int32)))\n","/*\n * libmedia SafeUint8Array\n *\n * 版权所有 (C) 2024 赵高兴\n * Copyright (C) 2024 Gaoxing Zhao\n *\n * 此文件是 libmedia 的一部分\n * This file is part of libmedia.\n * \n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\n * 或任何其更新的版本条款重新分发或修改它\n * libmedia is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3.1 of the License, or (at your option) any later version.\n * \n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\n * libmedia is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nimport { Uint8ArrayInterface } from 'common/io/interface'\nimport { getHeapU8, getView } from '../../heap'\nimport ArrayLikeInterface from 'common/interface/ArrayLike'\n\nexport class SafeBufferView {\n  private pointer: pointer<uint8>\n\n  private len: size\n\n  constructor(pointer: pointer<uint8>, len: size) {\n    this.pointer = pointer\n    this.len = len\n  }\n\n  get byteLength() {\n    return this.len\n  }\n\n  get buffer() {\n    return getHeapU8().buffer\n  }\n\n  get byteOffset() {\n    return this.pointer\n  }\n\n  public getFloat32(byteOffset: number, littleEndian?: boolean): number {\n    return getView().getFloat32(this.pointer + byteOffset, littleEndian)\n  }\n\n  public getFloat64(byteOffset: number, littleEndian?: boolean): number {\n    return getView().getFloat64(this.pointer + byteOffset, littleEndian)\n  }\n\n  public getInt8(byteOffset: number): number {\n    return getView().getInt8(this.pointer + byteOffset)\n  }\n\n  public getInt16(byteOffset: number, littleEndian?: boolean): number {\n    return getView().getInt16(this.pointer + byteOffset, littleEndian)\n  }\n\n  public getInt32(byteOffset: number, littleEndian?: boolean): number {\n    return getView().getInt32(this.pointer + byteOffset, littleEndian)\n  }\n\n  public getUint8(byteOffset: number): number {\n    return getView().getUint8(this.pointer + byteOffset)\n  }\n\n  public getUint16(byteOffset: number, littleEndian?: boolean): number {\n    return getView().getUint16(this.pointer + byteOffset, littleEndian)\n  }\n\n  public getUint32(byteOffset: number, littleEndian?: boolean): number {\n    return getView().getUint32(this.pointer + byteOffset, littleEndian)\n  }\n\n  public setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void {\n    getView().setFloat32(this.pointer + byteOffset, value, littleEndian)\n  }\n\n  public setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void {\n    getView().setFloat64(this.pointer + byteOffset, value, littleEndian)\n  }\n\n  public setInt8(byteOffset: number, value: number): void {\n    getView().setInt8(this.pointer + byteOffset, value)\n  }\n\n  public setInt16(byteOffset: number, value: number, littleEndian?: boolean): void {\n    getView().setInt16(this.pointer + byteOffset, value, littleEndian)\n  }\n\n  public setInt32(byteOffset: number, value: number, littleEndian?: boolean): void {\n    getView().setInt32(this.pointer + byteOffset, value, littleEndian)\n  }\n\n  public setUint8(byteOffset: number, value: number): void {\n    getView().setUint8(this.pointer + byteOffset, value)\n  }\n\n  public setUint16(byteOffset: number, value: number, littleEndian?: boolean): void {\n    getView().setUint16(this.pointer + byteOffset, value, littleEndian)\n  }\n\n  public setUint32(byteOffset: number, value: number, littleEndian?: boolean): void {\n    getView().setUint32(this.pointer + byteOffset, value, littleEndian)\n  }\n\n  public getBigInt64(byteOffset: number, littleEndian?: boolean): bigint {\n    return getView().getBigInt64(this.pointer + byteOffset, littleEndian)\n  }\n  public getBigUint64(byteOffset: number, littleEndian?: boolean): bigint {\n    return getView().getBigUint64(this.pointer + byteOffset, littleEndian)\n  }\n  public setBigInt64(byteOffset: number, value: bigint, littleEndian?: boolean) {\n    getView().setBigInt64(this.pointer + byteOffset, value, littleEndian)\n  }\n  public setBigUint64(byteOffset: number, value: bigint, littleEndian?: boolean) {\n    getView().setBigUint64(this.pointer + byteOffset, value, littleEndian)\n  }\n}\n\nexport default class SafeUint8Array extends ArrayLikeInterface implements Uint8ArrayInterface {\n\n  private pointer: pointer<uint8>\n\n  private len: size\n\n  constructor(pointer: pointer<uint8>, len: size) {\n    super()\n    this.pointer = pointer\n    this.len = len\n\n    return this.proxy as SafeUint8Array\n  }\n\n  protected getIndexValue(index: uint32): uint8 {\n    return accessof(reinterpret_cast<pointer<uint8>>(this.pointer + index))\n  }\n  protected setIndexValue(index: uint32, value: uint8): void {\n    accessof(reinterpret_cast<pointer<uint8>>(this.pointer + index)) <- value\n  }\n\n  public set(array: ArrayLike<number>, offset: number = 0) {\n    assert(offset + array.length <= this.len)\n    getHeapU8().set(array, this.pointer + offset)\n  }\n\n  public subarray(begin: number = 0, end?: number, safe?: boolean) {\n    if (safe) {\n      return new SafeUint8Array(reinterpret_cast<pointer<uint8>>(this.pointer + begin), (end ? end : this.len) - begin) as any as Uint8Array\n    }\n    return getHeapU8().subarray(this.pointer + begin, this.pointer + (end ?? this.len))\n  }\n\n  public slice(start: number = 0, end?: number) {\n    return getHeapU8().slice(this.pointer + start, this.pointer + (end ?? this.len))\n  }\n\n  get length() {\n    return this.len\n  }\n\n  get byteLength() {\n    return this.len\n  }\n\n  get buffer() {\n    return getHeapU8().buffer\n  }\n\n  get byteOffset() {\n    return this.pointer\n  }\n\n  get view() {\n    return new SafeBufferView(this.pointer, this.len) as any as DataView\n  }\n\n  [n: int32]: uint8\n}\n","import { memset } from './memory'\nimport { symbolStruct } from '../symbol'\nimport * as object from 'common/util/object'\nimport { Data } from 'common/types/type'\nimport { SetOmitFunctions } from 'common/types/advanced'\nimport isDef from 'common/function/isDef'\nimport structAccess from './structAccess'\n\n/**\n * 创建一个 struct 实例\n * \n * @param target \n * @returns \n */\nexport default function make<T>(struct: new (init?: Data) => T, init?: Partial<SetOmitFunctions<T>>): T {\n\n  assert(struct.prototype[symbolStruct], 'cannot make struct because of not defined')\n\n  const size = sizeof(struct)\n  const address = malloc(size)\n  if (!address) {\n    throw new TypeError('cannot alloc memory for struct')\n  }\n\n  memset(address, 0, size)\n\n  const target = structAccess(address, struct)\n\n  const data = new struct()\n\n  if (init) {\n    object.extend(data, init)\n  }\n\n  object.each(data, (value, key) => {\n    if (isDef(value)) {\n      target[key] = value\n    }\n  })\n\n  return target\n}\n","import { getHeapU8, Allocator, getHeapU16, getHeap8, getHeapU32,\n  getHeap16, getHeap32, getHeapU64, getHeap64, getHeapF32, getHeapF64\n} from '../heap'\nimport { strlen } from './string'\nimport * as text from 'common/util/text'\nimport { CTypeEnum } from '../typedef'\nimport { CTypeEnumWrite } from '../ctypeEnumWrite'\nimport SafeUint8Array from './buffer/SafeUint8Array'\nimport * as config from '../config'\n\nexport function memcpy(dst: anyptr, src: anyptr, size: size) {\n  assert(dst && src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(dst), `dst address ${dst} is not alloc`)\n  getHeapU8().set(getHeapU8().subarray(src, src + size), dst)\n}\n\nexport function memcpyFromUint8Array(dst: pointer<void>, max: size, data: Uint8Array) {\n  assert(dst, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(dst), `src address ${dst} is not alloc`)\n  getHeapU8().set(data.subarray(0, max), dst)\n}\n\nexport function memmove(dst: anyptr, src: anyptr, size: size) {\n  assert(dst && src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(dst), `dst address ${dst} is not alloc`)\n  getHeapU8().copyWithin(dst, src, src + size)\n}\n\nexport function memset(src: anyptr, c: uint8, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  getHeapU8().subarray(src, src + n).fill(c)\n}\n\nexport function mapSafeUint8Array(src: pointer<void>, n: size): SafeUint8Array {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return config.USE_THREADS ? mapUint8Array(src, n) as any as SafeUint8Array : new SafeUint8Array(reinterpret_cast<pointer<uint8>>(src), n)\n}\n\nexport function mapUint8Array(src: pointer<void>, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return getHeapU8().subarray(src, src + n)\n}\n\nexport function mapInt8Array(src: pointer<int8>, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return getHeap8().subarray(src, src + n)\n}\n\nexport function mapUint16Array(src: pointer<uint16>, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return getHeapU16().subarray(src >>> 1, (src >>> 1) + n)\n}\n\nexport function mapInt16Array(src: pointer<int16>, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return getHeap16().subarray(src >>> 1, (src >>> 1) + n)\n}\n\nexport function mapUint32Array(src: pointer<uint32>, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return getHeapU32().subarray(src >>> 2, (src >>> 2) + n)\n}\n\nexport function mapInt32Array(src: pointer<int32>, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return getHeap32().subarray(src >>> 2, (src >>> 2) + n)\n}\n\nexport function mapUint64Array(src: pointer<uint64>, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return getHeapU64().subarray(src >>> 3, (src >>> 3) + n)\n}\n\nexport function mapInt64Array(src: pointer<int64>, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return getHeap64().subarray(src >>> 3, (src >>> 3) + n)\n}\n\nexport function mapFloat32Array(src: pointer<float>, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return getHeapF32().subarray(src >>> 2, (src >>> 2) + n)\n}\n\nexport function mapFloat64Array(src: pointer<double>, n: size) {\n  assert(src, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(src), `src address ${src} is not alloc`)\n  return getHeapF64().subarray(src >>> 3, (src >>> 3) + n)\n}\n\nexport function readCString(pointer: pointer<char>, max?: uint32) {\n  assert(pointer, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(pointer), `address ${pointer} is not alloc`)\n\n  const stringLen = strlen(reinterpret_cast<pointer<char>>(pointer))\n  const len = Math.min(stringLen, max ?? stringLen)\n  return text.decode(mapUint8Array(pointer, len))\n}\n\nexport function writeCString(dst: pointer<void>, str: string, max?: uint32, addNull: boolean = true) {\n\n  assert(dst, 'Out Of Bounds, address: 0')\n  assert(Allocator.isAlloc(dst), `dst address ${dst} is not alloc`)\n\n  const data = text.encode(str)\n\n  let len = data.length\n  let remain = addNull ? 1 : 0\n\n  if (max && len - remain > max) {\n    len = max - remain\n  }\n\n  memcpyFromUint8Array(dst, len, data)\n\n  if (addNull) {\n    CTypeEnumWrite[CTypeEnum.int8](dst + len, 0)\n  }\n}\n","import { symbolStruct, symbolStructLength } from '../symbol'\nimport * as is from 'common/util/is'\nimport { CTypeEnum, CTypeEnum2Bytes, Struct } from '../typedef'\n\nexport default function sizeof(type: CTypeEnum | Struct): size {\n  if (is.number(type)) {\n    return CTypeEnum2Bytes[type] || 0\n  }\n  else if (is.func(type) && type.prototype[symbolStruct]) {\n    return type.prototype[symbolStructLength]\n  }\n  return 0\n}\n","import { mapUint8Array, memcpyFromUint8Array } from './memory'\nimport { CTypeEnum } from '../typedef'\nimport { CTypeEnumRead } from '../ctypeEnumRead'\n\n/**\n * 获取字符串长度，不包括字符串末尾的空字符（\\0）\n * \n * @param pointer \n */\nexport function strlen(pointer: pointer<char>) {\n  let len = 0\n  while (CTypeEnumRead[CTypeEnum.char](pointer++)) {\n    len++\n  }\n  return len\n}\n\n/**\n * 将一个字符串复制到另一个字符串\n * \n * @param destination \n * @param source \n */\nexport function strcpy(destination: pointer<char>, source: pointer<char>) {\n  const len = strlen(source) + 1\n  memcpyFromUint8Array(destination, len, mapUint8Array(source, len))\n}\n\n/**\n * 将一个字符串追加到另一个字符串的末尾\n * \n * @param destination \n * @param source \n */\nexport function strcat(destination: pointer<char>, source: pointer<char>) {\n  const len = strlen(source) + 1\n  const len1 = strlen(destination)\n  memcpyFromUint8Array(destination + len1, len, mapUint8Array(source, len))\n}\n\n/**\n * 比较两个字符串的大小\n */\nexport function strcmp(str1: pointer<char>, str2: pointer<char>) {\n  const len1 = strlen(str1)\n  const len2 = strlen(str2)\n\n  const len = Math.min(len1, len2)\n\n  for (let i = 0; i < len; i++) {\n    const char1 = CTypeEnumRead[CTypeEnum.char](str1 + i)\n    const char2 = CTypeEnumRead[CTypeEnum.char](str2 + i)\n\n    if (char1 > char2) {\n      return 1\n    }\n    else if (char1 < char2) {\n      return -1\n    }\n  }\n\n  if (len1 > len2) {\n    return 1\n  }\n  else if (len1 < len2) {\n    return -1\n  }\n  else {\n    return 0\n  }\n}\n","import { symbolStruct, symbolStructKeysMeta } from '../symbol'\nimport { proxyStruct } from '../proxyStruct'\nimport { definedStruct } from '../definedStruct'\nimport support from 'common/util/support'\nimport * as is from 'common/util/is'\nimport * as keypath from 'common/util/keypath'\nimport { KeyMeta, KeyMetaKey } from '../typedef'\n\n/**\n * 访问 struct 指针\n * \n * @param target \n * @param address\n * @returns\n */\nexport default function structAccess<T>(address: pointer<void>, struct: new (...args: any[]) => T): T {\n\n  assert(struct.prototype[symbolStruct], 'cannot reinterpret cast struct because of not defined')\n\n  if (arguments[2] && is.string(arguments[2])) {\n    struct = struct.prototype\n    keypath.each(arguments[2], (key) => {\n      const meta = struct[symbolStructKeysMeta] as Map<string, KeyMeta>\n      struct = meta.get(key)[KeyMetaKey.Type] as (new (...args: any[]) => T)\n    })\n  }\n\n  return support.proxy ? proxyStruct(address, struct) : definedStruct(address, struct)\n}\n","import { symbolStruct, symbolStructAddress } from '../symbol'\nimport { revokeProxyStruct } from '../proxyStruct'\nimport { revokeDefinedStruct } from '../definedStruct'\nimport support from 'common/util/support'\n\n/**\n * 销毁一个 struct 实例，调用 make 创建的对象必须调用 unmake，否则内存泄漏\n * \n * @param target \n */\nexport default function unmake<T extends Object>(target: T) {\n\n  assert(Object.getPrototypeOf(target)[symbolStruct], 'cannot unmake struct because of not defined')\n\n  const p = target[symbolStructAddress]\n  if (p) {\n    free(p)\n    target[symbolStructAddress] = nullptr\n    support.proxy ? revokeProxyStruct(target) : revokeDefinedStruct(target)\n  }\n}\n","export const symbolStruct = Symbol('Struct')\nexport const symbolStructLength = Symbol('StructLength')\nexport const symbolStructMaxBaseTypeByteLength = Symbol('StructMaxBaseTypeByteLength')\nexport const symbolStructAddress = Symbol('StructAddress')\nexport const symbolStructKeysQueue = Symbol('StructKeysQueue')\nexport const symbolStructKeysMeta = Symbol('StructKeysMeta')\nexport const symbolStructKeysInstance = Symbol('StructKeysInstance')\nexport const symbolStructProxyRevoke = Symbol('StructProxyRevoke')\n","import { base64ToUint8Array } from 'common/util/base64'\nimport * as logger from 'common/util/logger'\nimport * as wasmUtils from 'common/util/wasm'\n\nimport asm from './atomics.asm'\n\nimport { override } from '../atomics'\n\n/**\n * WebAssembly runtime 实例\n */\nexport let instance: WebAssembly.Instance\n\nexport function isSupport() {\n  return !!instance\n}\n\nexport default async function init(memory: WebAssembly.Memory) {\n  try {\n    if (typeof SharedArrayBuffer === 'function' && memory.buffer instanceof SharedArrayBuffer) {\n\n      const wasm = base64ToUint8Array(asm)\n\n      wasmUtils.setMemoryShared(wasm, true)\n\n      instance = (await WebAssembly.instantiate(wasm, {\n        env: {\n          memory\n        }\n      })).instance\n    }\n    else {\n      return\n    }\n\n    override({\n      add: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        switch (type) {\n          case atomic_char:\n          case atomic_uint8:\n            return ((instance.exports.add8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\n          case atomic_int8:\n            return (instance.exports.add8 as Function)(address, value)\n          case atomic_int16:\n            return (instance.exports.add16 as Function)(address, value)\n          case atomic_uint16:\n            return ((instance.exports.add16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\n          case atomic_int32:\n            assert(!(address % 4))\n            return (instance.exports.add32 as Function)(address, value)\n          case atomic_uint32:\n            return ((instance.exports.add32 as Function)(address, value) & 0xffffffff) as AtomicType2Type<T>\n          case atomic_int64:\n            return (instance.exports.add64 as Function)(address, value)\n          case atomic_uint64:\n            return BigInt.asUintN(64, (instance.exports.add64 as Function)(address, value)) as AtomicType2Type<T>\n        }\n      },\n      sub: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        switch (type) {\n          case atomic_char:\n          case atomic_uint8:\n            return ((instance.exports.sub8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\n          case atomic_int8:\n            return (instance.exports.sub8 as Function)(address, value)\n          case atomic_int16:\n            return (instance.exports.sub16 as Function)(address, value)\n          case atomic_uint16:\n            return ((instance.exports.sub16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\n          case atomic_int32:\n            assert(!(address % 4))\n            return (instance.exports.sub32 as Function)(address, value)\n          case atomic_uint32:\n            return ((instance.exports.sub32 as Function)(address, value) & 0xffffffff) as AtomicType2Type<T>\n          case atomic_int64:\n            return (instance.exports.sub64 as Function)(address, value)\n          case atomic_uint64:\n            return BigInt.asUintN(64, (instance.exports.sub64 as Function)(address, value)) as AtomicType2Type<T>\n        }\n      },\n      and: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        switch (type) {\n          case atomic_char:\n          case atomic_uint8:\n            return ((instance.exports.and8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\n          case atomic_int8:\n            return (instance.exports.and8 as Function)(address, value)\n          case atomic_int16:\n            return (instance.exports.and16 as Function)(address, value)\n          case atomic_uint16:\n            return ((instance.exports.and16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\n          case atomic_int32:\n            return (instance.exports.and32 as Function)(address, value)\n          case atomic_uint32:\n            return ((instance.exports.and32 as Function)(address, value) & 0xffffffff) as AtomicType2Type<T>\n          case atomic_int64:\n            return (instance.exports.and64 as Function)(address, value)\n          case atomic_uint64:\n            return BigInt.asUintN(64, (instance.exports.and64 as Function)(address, value)) as AtomicType2Type<T>\n        }\n      },\n      or: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        switch (type) {\n          case atomic_char:\n          case atomic_uint8:\n            return ((instance.exports.or8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\n          case atomic_int8:\n            return (instance.exports.or8 as Function)(address, value)\n          case atomic_int16:\n            return (instance.exports.or16 as Function)(address, value)\n          case atomic_uint16:\n            return ((instance.exports.or16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\n          case atomic_int32:\n            return (instance.exports.or32 as Function)(address, value)\n          case atomic_uint32:\n            return ((instance.exports.or32 as Function)(address, value) as 0xffffffff) as AtomicType2Type<T>\n          case atomic_int64:\n            return (instance.exports.or64 as Function)(address, value)\n          case atomic_uint64:\n            return BigInt.asUintN(64, (instance.exports.or64 as Function)(address, value)) as AtomicType2Type<T>\n        }\n      },\n      xor: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        switch (type) {\n          case atomic_char:\n          case atomic_uint8:\n            return ((instance.exports.xor8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\n          case atomic_int8:\n            return (instance.exports.xor8 as Function)(address, value)\n          case atomic_int16:\n            return (instance.exports.xor16 as Function)(address, value)\n          case atomic_uint16:\n            return ((instance.exports.xor16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\n          case atomic_int32:\n            return (instance.exports.xor32 as Function)(address, value)\n          case atomic_uint32:\n            return ((instance.exports.xor32 as Function)(address, value) as 0xffffffff) as AtomicType2Type<T>\n          case atomic_int64:\n            return (instance.exports.xor64 as Function)(address, value)\n          case atomic_uint64:\n            return BigInt.asUintN(64, (instance.exports.xor64 as Function)(address, value)) as AtomicType2Type<T>\n        }\n      },\n      store: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        switch (type) {\n          case atomic_char:\n          case atomic_int8:\n          case atomic_uint8:\n            return (instance.exports.store8 as Function)(address, value)\n          case atomic_int16:\n          case atomic_uint16:\n            return (instance.exports.store16 as Function)(address, value)\n          case atomic_int32:\n          case atomic_uint32:\n            assert(!(address % 4))\n            return (instance.exports.store32 as Function)(address, value)\n          case atomic_int64:\n          case atomic_uint64:\n            return (instance.exports.store64 as Function)(address, value)\n        }\n      },\n      load: function<T> (address: pointer<T>, type?: atomictype): AtomicType2Type<T> {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        switch (type) {\n          case atomic_char:\n          case atomic_uint8:\n            return ((instance.exports.load8 as Function)(address) & 0xff) as AtomicType2Type<T>\n          case atomic_int8:\n            return (instance.exports.load8 as Function)(address)\n          case atomic_int16:\n            return (instance.exports.load16 as Function)(address)\n          case atomic_uint16:\n            return ((instance.exports.load16 as Function)(address) as 0xffff) as AtomicType2Type<T>\n          case atomic_int32:\n            assert(!(address % 4))\n            return (instance.exports.load32 as Function)(address)\n          case atomic_uint32:\n            return ((instance.exports.load32 as Function)(address) & 0xffffffff) as AtomicType2Type<T>\n          case atomic_int64:\n            return (instance.exports.load64 as Function)(address)\n          case atomic_uint64:\n            return BigInt.asUintN(64, (instance.exports.load64 as Function)(address)) as AtomicType2Type<T>\n        }\n      },\n      compareExchange: function<T> (\n        address: pointer<T>,\n        expectedValue: AtomicType2Type<T>,\n        replacementValue: AtomicType2Type<T>,\n        type?: atomictype\n      ): AtomicType2Type<T> {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        switch (type) {\n          case atomic_char:\n          case atomic_uint8:\n            return ((instance.exports.compare_exchange8 as Function)(address, expectedValue, replacementValue) & 0xff) as AtomicType2Type<T>\n          case atomic_int8:\n            return (instance.exports.compare_exchange8 as Function)(address, expectedValue, replacementValue)\n          case atomic_int16:\n            return (instance.exports.compare_exchange16 as Function)(address, expectedValue, replacementValue)\n          case atomic_uint16:\n            return ((instance.exports.compare_exchange16 as Function)(address, expectedValue, replacementValue) & 0xffff) as AtomicType2Type<T>\n          case atomic_int32:\n            return (instance.exports.compare_exchange32 as Function)(address, expectedValue, replacementValue)\n          case atomic_uint32:\n            return ((instance.exports.compare_exchange32 as Function)(address, expectedValue, replacementValue) & 0xffffffff) as AtomicType2Type<T>\n          case atomic_int64:\n            return (instance.exports.compare_exchange64 as Function)(address, expectedValue, replacementValue)\n          case atomic_uint64:\n            return BigInt.asUintN(64, (instance.exports.compare_exchange64 as Function)(\n              address,\n              expectedValue,\n              replacementValue\n            )) as AtomicType2Type<T>\n        }\n      },\n      exchange: function<T> (address: pointer<T>, value: AtomicType2Type<T>, type?: atomictype): AtomicType2Type<T> {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        switch (type) {\n          case atomic_char:\n          case atomic_uint8:\n            return ((instance.exports.exchange8 as Function)(address, value) & 0xff) as AtomicType2Type<T>\n          case atomic_int8:\n            return (instance.exports.exchange8 as Function)(address, value)\n          case atomic_int16:\n            return (instance.exports.exchange16 as Function)(address, value)\n          case atomic_uint16:\n            return ((instance.exports.exchange16 as Function)(address, value) & 0xffff) as AtomicType2Type<T>\n          case atomic_int32:\n            return (instance.exports.exchange32 as Function)(address, value)\n          case atomic_uint32:\n            return ((instance.exports.exchange32 as Function)(address, value) & 0xffffffff) as AtomicType2Type<T>\n          case atomic_int64:\n            return (instance.exports.exchange64 as Function)(address, value)\n          case atomic_uint64:\n            return BigInt.asUintN(64, (instance.exports.exchange64 as Function)(address, value)) as AtomicType2Type<T>\n        }\n      },\n      notify: function (address: pointer<atomic_int32>, count: uint32) {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        return (instance.exports.notify as Function)(address, count)\n      },\n      wait: function (address: pointer<atomic_int32>, value: int32) {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        return (instance.exports.wait as Function)(address, value)\n      },\n\n      waitTimeout: function (address: pointer<atomic_int32>, value: int32, timeout?: int32) {\n\n        assert(address, 'Out Of Bounds, address: 0')\n\n        return (instance.exports.waitTimeout as Function)(address, value, static_cast<int64>(timeout))\n      }\n    })\n  }\n  catch (error) {\n    logger.warn('atomics asm not support, cannot use asm atomics function')\n  }\n}\n","/* eslint-disable */\nexport type AtomicType2Shift<T> =\n  T extends atomic_char\n  ? 0\n  : T extends atomic_int16\n  ? 1\n  : T extends atomic_int32\n  ? 2\n  : T extends atomic_int8\n  ? 0\n  : T extends atomic_uint8\n  ? 0\n  : T extends atomic_uint16\n  ? 1\n  : T extends atomic_uint32\n  ? 2\n  : T extends atomic_uint64\n  ? 4\n  : T extends atomic_int64\n  ? 4\n  : T extends atomic_bool\n  ? 0\n  : never\n/* eslint-enable */\n\ntype AtomicType2CTypeEnum<T> = \n  T extends atomic_bool\n  ? atomic_int8\n  : T\n\n/**\n * 给定的值加到指定位置上\n * \n * 返回该位置的旧值\n *\n */\nexport let add: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\n\n/**\n * 给定的值与指定位置上的值相减\n * \n * 返回该位置的旧值\n *\n */\nexport let sub: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\n\n/**\n * 给定的值与指定位置上的值进行与运算\n * \n * 返回该位置的旧值\n *\n */\nexport let and: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\n\n/**\n * 给定的值与指定位置上的值进行或运算\n * \n * 返回该位置的旧值\n *\n */\nexport let or: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\n\n/**\n * 给定的值与指定位置上的值进行异或运算\n * \n * 返回该位置的旧值\n *\n */\nexport let xor: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\n\n/**\n * 给定的值存在给定位置上\n * \n * 返回该位置的旧值\n *\n */\nexport let store: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\n\n/**\n * 读取给定位置上的值\n * \n * 返回该位置的旧值\n *\n */\nexport let load: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>) => AtomicType2Type<T>\n\n/**\n * 如果指定位置的值与给定的值相等，则将其更新为新的值，并返回该元素原先的值\n * \n * 返回该位置的旧值\n *\n */\nexport let compareExchange: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(\n  address: pointer<T>,\n  expectedValue: AtomicType2Type<T>,\n  replacementValue: AtomicType2Type<T>\n) => AtomicType2Type<T>\n/**\n * 将指定位置的值更新为给定的值，并返回该元素更新前的值。\n * \n * 返回该位置的旧值\n *\n */\nexport let exchange: <T extends atomictype, args = [AtomicType2CTypeEnum<T>, AtomicType2Shift<T>]>(address: pointer<T>, value: AtomicType2Type<T>) => AtomicType2Type<T>\n\n\n/**\n * 唤醒等待队列中正在指定位置上等待的线程。返回值为成功唤醒的线程数量。\n * \n * 返回被唤醒的代理的数量 0 将不会唤醒任何线程\n *\n */\nexport let notify: (address: pointer<atomic_int32>, count: uint32) => uint32\n\n/**\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒\n * \n * 0 \"ok\"、1 \"not-equal\"\n *\n */\nexport let wait: (address: pointer<atomic_int32>, value: int32) => 0 | 1 | 2\n\n/**\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒或超时（毫秒）\n * \n * 0 \"ok\"、1 \"not-equal\" 或 2 \"time-out\"\n *\n */\nexport let waitTimeout: (address: pointer<atomic_int32>, value: int32, timeout: int32) => 0 | 1 | 2\n\n/**\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒\n * \n * 异步非阻塞，适合在主线程上使用\n * \n * 0 \"ok\"、1 \"not-equal\"\n *\n */\nexport let waitAsync: (address: pointer<atomic_int32>, value: int32) => Promise<0 | 1 | 2>\n/**\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒或超时\n * \n * 异步非阻塞，适合在主线程上使用\n * \n * 0 \"ok\"、1 \"not-equal\" 或 2 \"time-out\"\n *\n */\nexport let waitTimeoutAsync: (address: pointer<atomic_int32>, value: int32, timeout: int32) => Promise<0 | 1 | 2>\n\nexport function override(funcs: Partial<{\n  add: typeof add\n  sub: typeof sub\n  and: typeof and\n  or: typeof or\n  xor: typeof xor\n  store: typeof store\n  load: typeof load\n  compareExchange: typeof compareExchange\n  exchange: typeof exchange\n  notify: typeof notify\n  wait: typeof wait\n  waitTimeout: typeof waitTimeout\n  waitAsync: typeof waitAsync\n  waitTimeoutAsync: typeof waitTimeoutAsync\n}>) {\n  if (funcs.add) {\n    add = funcs.add\n  }\n  if (funcs.sub) {\n    sub = funcs.sub\n  }\n  if (funcs.and) {\n    and = funcs.and\n  }\n  if (funcs.or) {\n    or = funcs.or\n  }\n  if (funcs.xor) {\n    xor = funcs.xor\n  }\n  if (funcs.store) {\n    store = funcs.store\n  }\n  if (funcs.load) {\n    load = funcs.load\n  }\n  if (funcs.compareExchange) {\n    compareExchange = funcs.compareExchange\n  }\n  if (funcs.exchange) {\n    exchange = funcs.exchange\n  }\n  if (funcs.notify) {\n    notify = funcs.notify\n  }\n  if (funcs.wait) {\n    wait = funcs.wait\n  }\n  if (funcs.waitTimeout) {\n    waitTimeout = funcs.waitTimeout\n  }\n  if (funcs.waitAsync) {\n    waitAsync = funcs.waitAsync\n  }\n  if (funcs.waitTimeoutAsync) {\n    waitTimeoutAsync = funcs.waitTimeoutAsync\n  }\n}\n","import getTimestamp from 'common/function/getTimestamp'\nimport nextTick from 'common/function/nextTick'\nimport { override } from './atomics'\nimport { AtomicsBuffer } from '../typedef'\nimport * as config from '../config'\nimport isWorker from 'common/function/isWorker'\nimport browser from 'common/util/browser'\n\nlet getAtomicsBuffer: (type: atomictype) => AtomicsBuffer\n\nconst useAtomics = config.USE_THREADS || isWorker() || (!browser.chrome || browser.checkVersion(browser.majorVersion, '94', true))\n\n/**\n * 给定的值加到指定位置上\n * \n * 返回该位置的旧值\n *\n */\nfunction add<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\n  assert(address, 'Out Of Bounds, address: 0')\n  if (defined(ENABLE_THREADS) && useAtomics) {\n    return Atomics.add(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\n  }\n  else {\n    const buffer = getAtomicsBuffer(type) as Uint8Array\n    const index = address >>> shift\n    const old = buffer[index]\n    buffer[index] += value as uint8\n    return old as AtomicType2Type<T>\n  }\n}\n\n/**\n * 给定的值与指定位置上的值相减\n * \n * 返回该位置的旧值\n *\n */\nfunction sub<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\n  assert(address, 'Out Of Bounds, address: 0')\n  if (defined(ENABLE_THREADS) && useAtomics) {\n    return Atomics.sub(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\n  }\n  else {\n    const buffer = getAtomicsBuffer(type) as Uint8Array\n    const index = address >>> shift\n    const old = buffer[index]\n    buffer[index] -= value as uint8\n    return old as AtomicType2Type<T>\n  }\n}\n\n/**\n * 给定的值与指定位置上的值进行与运算\n * \n * 返回该位置的旧值\n *\n */\nfunction and<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\n  assert(address, 'Out Of Bounds, address: 0')\n  if (defined(ENABLE_THREADS) && useAtomics) {\n    return Atomics.and(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\n  }\n  else {\n    const buffer = getAtomicsBuffer(type) as Uint8Array\n    const index = address >>> shift\n    const old = buffer[index]\n    buffer[index] &= value as uint8\n    return old as AtomicType2Type<T>\n  }\n}\n\n/**\n * 给定的值与指定位置上的值进行或运算\n * \n * 返回该位置的旧值\n *\n */\nfunction or<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\n  assert(address, 'Out Of Bounds, address: 0')\n  if (defined(ENABLE_THREADS) && useAtomics) {\n    return Atomics.or(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\n  }\n  else {\n    const buffer = getAtomicsBuffer(type) as Uint8Array\n    const index = address >>> shift\n    const old = buffer[index]\n    buffer[index] |= value as uint8\n    return old as AtomicType2Type<T>\n  }\n}\n\n/**\n * 给定的值与指定位置上的值进行异或运算\n * \n * 返回该位置的旧值\n *\n */\nfunction xor<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\n  assert(address, 'Out Of Bounds, address: 0')\n  if (defined(ENABLE_THREADS) && useAtomics) {\n    return Atomics.xor(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\n  }\n  else {\n    const buffer = getAtomicsBuffer(type) as Uint8Array\n    const index = address >>> shift\n    const old = buffer[index]\n    buffer[index] ^= value as uint8\n    return old as AtomicType2Type<T>\n  }\n}\n\n/**\n * 给定的值存在给定位置上\n * \n * 返回该位置的旧值\n *\n */\nfunction store<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\n  assert(address, 'Out Of Bounds, address: 0')\n  if (defined(ENABLE_THREADS) && useAtomics) {\n    return Atomics.store(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\n  }\n  else {\n    const buffer = getAtomicsBuffer(type) as Uint8Array\n    const index = address >>> shift\n    const old = buffer[index]\n    buffer[index] = value as uint8\n    return old as AtomicType2Type<T>\n  }\n}\n\n/**\n * 读取给定位置上的值\n * \n * 返回该位置的旧值\n *\n */\nfunction load<T extends atomictype>(address: pointer<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\n  assert(address, 'Out Of Bounds, address: 0')\n  if (defined(ENABLE_THREADS) && useAtomics) {\n    return Atomics.load(getAtomicsBuffer(type) as Uint8Array, address >>> shift as uint8) as AtomicType2Type<T>\n  }\n  else {\n    const buffer = getAtomicsBuffer(type) as Uint8Array\n    const index = address >>> shift\n    const old = buffer[index]\n    return old as AtomicType2Type<T>\n  }\n}\n\n/**\n * 如果指定位置的值与给定的值相等，则将其更新为新的值，并返回该位置原先的值\n * \n * 返回该位置的旧值\n *\n */\nfunction compareExchange<T extends atomictype>(\n  address: pointer<T>,\n  expectedValue: AtomicType2Type<T>,\n  replacementValue: AtomicType2Type<T>,\n  type?: T,\n  shift?: uint32\n): AtomicType2Type<T> {\n  assert(address, 'Out Of Bounds, address: 0')\n  if (defined(ENABLE_THREADS) && useAtomics) {\n    return Atomics.compareExchange(\n      getAtomicsBuffer(type) as Uint8Array,\n      address >>> shift,\n      expectedValue as uint8,\n      replacementValue as uint8\n    ) as AtomicType2Type<T>\n  }\n  else {\n    const buffer = getAtomicsBuffer(type) as Uint8Array\n    const index = address >>> shift\n    const old = buffer[index] as uint8\n    if (old === expectedValue) {\n      buffer[index] = replacementValue as uint8\n    }\n    return old as AtomicType2Type<T>\n  }\n}\n\n/**\n * 将指定位置的值更新为给定的值，并返回该位置更新前的值。\n * \n * 返回该位置的旧值\n *\n */\nfunction exchange<T extends atomictype>(address: pointer<T>, value: AtomicType2Type<T>, type?: T, shift?: uint32): AtomicType2Type<T> {\n  assert(address, 'Out Of Bounds, address: 0')\n  if (defined(ENABLE_THREADS) && useAtomics) {\n    return Atomics.exchange(getAtomicsBuffer(type) as Uint8Array, address >>> shift, value as uint8) as AtomicType2Type<T>\n  }\n  else {\n    const buffer = getAtomicsBuffer(type) as Uint8Array\n    const index = address >>> shift\n    const old = buffer[index]\n    buffer[index] = value as uint8\n    return old as AtomicType2Type<T>\n  }\n}\n\n/**\n * 唤醒等待队列中正在指定位置上等待的线程。返回值为成功唤醒的线程数量。\n * \n * 返回被唤醒的代理的数量\n *\n */\nfunction notify(address: pointer<atomic_int32>, count: uint32): uint32 {\n  assert(address, 'Out Of Bounds, address: 0')\n  if (defined(ENABLE_THREADS) && useAtomics) {\n    return Atomics.notify(getAtomicsBuffer(atomic_int32) as Int32Array, address >>> 2, count)\n  }\n  else {\n    return\n  }\n}\n\n/**\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒\n * \n * 0 \"ok\"、1 \"not-equal\" 或 2 \"timed-out\"\n *\n */\nconst waitMap: Record<'ok' | 'not-equal' | 'timed-out', 0 | 1 | 2> = {\n  'ok': 0,\n  'not-equal': 1,\n  'timed-out': 2\n}\n\nfunction wait(address: pointer<atomic_int32>, value: int32): 0 | 1 | 2 {\n  assert(address, 'Out Of Bounds, address: 0')\n  return waitMap[Atomics.wait(getAtomicsBuffer(atomic_int32) as Int32Array, address >>> 2, value)]\n}\n\n/**\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒或超时\n * \n * 0 \"ok\"、1 \"not-equal\" 或 2 \"time-out\"\n *\n */\nfunction waitTimeout(address: pointer<atomic_int32>, value: int32, timeout: int32): 0 | 1 | 2 {\n  assert(address, 'Out Of Bounds, address: 0')\n  return waitMap[Atomics.wait(getAtomicsBuffer(atomic_int32) as Int32Array, address >>> 2, value, timeout)]\n}\n\n/**\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒\n * \n * 0 \"ok\"、1 \"not-equal\" 或 2 \"timed-out\"\n *\n */\nasync function waitAsync(address: pointer<atomic_int32>, value: int32): Promise<0 | 1 | 2> {\n\n  assert(address, 'Out Of Bounds, address: 0')\n\n  if (Atomics.waitAsync) {\n    const result = Atomics.waitAsync(getAtomicsBuffer(atomic_int32) as Int32Array, address >>> 2, value)\n    if (result.async) {\n      return waitMap[await result.value]\n    }\n    return waitMap[result.value as 'not-equal' | 'timed-out']\n  }\n  else {\n\n    if (static_cast<int32>(load(address)) !== value) {\n      return 1\n    }\n    else {\n      while (static_cast<int32>(load(address)) === value) {\n        // 跳过当前事件循环\n        await new Promise<void>((resolve) => {\n          nextTick(() => {\n            resolve()\n          })\n        })\n      }\n      return 0\n    }\n  }\n}\n\n/**\n * 检测指定位置上的值是否仍然是给定值，是则保持挂起直到被唤醒或超时\n * \n * 0 \"ok\"、1 \"not-equal\" 或 2 \"time-out\"\n *\n */\nasync function waitTimeoutAsync(address: pointer<atomic_int32>, value: int32, timeout: int32): Promise<0 | 1 | 2> {\n\n  assert(address, 'Out Of Bounds, address: 0')\n\n  if (Atomics.waitAsync) {\n    const result = Atomics.waitAsync(getAtomicsBuffer(atomic_int32) as Int32Array, address >>> 2, value, timeout)\n    if (result.async) {\n      return waitMap[await result.value]\n    }\n    return waitMap[result.value as 'not-equal' | 'timed-out']\n  }\n  else {\n\n    if (static_cast<int32>(load(address)) !== value) {\n      return 1\n    }\n    else {\n      const now = getTimestamp()\n\n      while (static_cast<int32>(load(address)) === value && (getTimestamp() - now < timeout)) {\n        // 跳过当前事件循环\n        await new Promise<void>((resolve) => {\n          nextTick(() => {\n            resolve()\n          })\n        })\n      }\n      return load(address) !== value ? 0 : 2\n    }\n  }\n}\n\nexport default function init(getAtomicsBuffer_: (type: atomictype) => AtomicsBuffer,) {\n\n  getAtomicsBuffer = getAtomicsBuffer_\n\n  override({\n    add,\n    sub,\n    and,\n    or,\n    xor,\n    store,\n    load,\n    compareExchange,\n    exchange,\n    notify,\n    wait,\n    waitTimeout,\n    waitAsync,\n    waitTimeoutAsync\n  })\n}\n","/**\n * 参考 https://github.com/mozilla-spidermonkey/js-lock-and-condition\n */\n\nimport { POSIXError } from '../error'\nimport * as atomics from './atomics'\nimport isWorker from 'common/function/isWorker'\n\n@struct\nexport class Mutex {\n  atomic: atomic_int32\n}\n\nconst enum STATUS {\n  UNLOCK,\n  LOCKED,\n  WAITED\n}\n\n/**\n * 初始化锁\n * \n * @param mutex \n * @returns \n */\nexport function init(mutex: pointer<Mutex>): int32 {\n  atomics.store(addressof(mutex.atomic), STATUS.UNLOCK)\n  return 0\n}\n\n/**\n * 加锁\n * \n * @param mutex \n * @param spin 是否自旋\n */\nexport function lock(mutex: pointer<Mutex>, spin: boolean = false): int32 {\n  let status: STATUS\n  // 不为 UNLOCK，说明其他线程持锁，将锁置为 LOCKED 状态\n  if ((status = atomics.compareExchange(addressof(mutex.atomic), STATUS.UNLOCK, STATUS.LOCKED)) !== STATUS.UNLOCK) {\n    do {\n      // 如果依旧得不到锁，将锁置为 WAITED 状态\n      if (status == STATUS.WAITED\n        || atomics.compareExchange(addressof(mutex.atomic), STATUS.LOCKED, STATUS.WAITED) !== STATUS.UNLOCK\n      ) {\n        // 主线程不能 wait，直接自旋（需要注意所有线程各自的持锁时间，避免出现忙等占用大量 cpu 时间）\n        if (!spin && isWorker()) {\n          atomics.wait(addressof(mutex.atomic), STATUS.WAITED)\n        }\n      }\n    }\n    // 再次尝试获取锁\n    while ((status = atomics.compareExchange(addressof(mutex.atomic), STATUS.UNLOCK, STATUS.WAITED)) !== STATUS.UNLOCK)\n  }\n\n  return 0\n}\n\n/**\n * 尝试加锁\n * \n * @param mutex \n */\nexport function tryLock(mutex: pointer<Mutex>): int32 {\n  if (atomics.compareExchange(addressof(mutex.atomic), STATUS.UNLOCK, STATUS.LOCKED) === STATUS.UNLOCK) {\n    return 0\n  }\n  // EBUSY\n  return POSIXError.EBUSY\n}\n\n\n/**\n * 异步加锁\n * \n * @param mutex\n */\nexport async function lockAsync(mutex: pointer<Mutex>): Promise<int32> {\n  let status: STATUS\n  // 不为 UNLOCK，说明其他线程持锁，将锁置为 LOCKED 状态\n  if ((status = atomics.compareExchange(addressof(mutex.atomic), STATUS.UNLOCK, STATUS.LOCKED)) !== STATUS.UNLOCK) {\n    do {\n      // 如果依旧得不到锁，将锁置为 WAITED 状态\n      if (status == STATUS.WAITED\n        || atomics.compareExchange(addressof(mutex.atomic), STATUS.LOCKED, STATUS.WAITED) !== STATUS.UNLOCK\n      ) {\n        await atomics.waitAsync(addressof(mutex.atomic), STATUS.WAITED)\n      }\n    }\n    // 再次尝试获取锁\n    while ((status = atomics.compareExchange(addressof(mutex.atomic), STATUS.UNLOCK, STATUS.WAITED)) !== STATUS.UNLOCK)\n  }\n\n  return 0\n}\n\n/**\n * 释放锁\n * \n * @param mutex \n */\nexport function unlock(mutex: pointer<Mutex>): int32 {\n\n  assert(atomics.load(addressof(mutex.atomic)) === STATUS.LOCKED || atomics.load(addressof(mutex.atomic)) === STATUS.WAITED)\n\n  let status: STATUS = atomics.sub(addressof(mutex.atomic), 1)\n  // 此时拥有锁，状态为 LOCKED 或 WAITED\n  if (status !== STATUS.LOCKED) {\n    // 释放锁\n    atomics.store(addressof(mutex.atomic), STATUS.UNLOCK)\n    // 唤醒一个 wait 的线程\n    atomics.notify(addressof(mutex.atomic), 1)\n  }\n\n  return 0\n}\n\n/**\n * 销毁锁\n * \n * @param mutex \n * @returns \n */\nexport function destroy(mutex: pointer<Mutex>): int32 {\n  atomics.store(addressof(mutex.atomic), STATUS.UNLOCK)\n  return 0\n}\n","import { Data, TypeArray } from 'common/types/type'\n\nexport const enum CTypeEnum {\n  null = 0,\n\n  void,\n\n  uint8,\n  atomic_uint8,\n  char,\n  atomic_char,\n  uint16,\n  atomic_uint16,\n  uint32,\n  atomic_uint32,\n  uint64,\n\n  int8,\n  atomic_int8,\n  int16,\n  atomic_int16,\n  int32,\n  atomic_int32,\n  int64,\n\n  float,\n  double,\n  pointer,\n\n  atomic_int64,\n  atomic_uint64,\n\n  bool,\n  atomic_bool\n}\n\nexport const CTypeEnum2Bytes: Record<CTypeEnum, number> = {\n  [CTypeEnum.uint8]: 1,\n  [CTypeEnum.atomic_uint8]: 1,\n  [CTypeEnum.char]: 1,\n  [CTypeEnum.atomic_char]: 1,\n  [CTypeEnum.uint16]: 2,\n  [CTypeEnum.atomic_uint16]: 2,\n  [CTypeEnum.uint32]: 4,\n  [CTypeEnum.atomic_uint32]: 4,\n  [CTypeEnum.uint64]: 8,\n  [CTypeEnum.int8]: 1,\n  [CTypeEnum.atomic_int8]: 1,\n  [CTypeEnum.int16]: 2,\n  [CTypeEnum.atomic_int16]: 2,\n  [CTypeEnum.int32]: 4,\n  [CTypeEnum.atomic_int32]: 4,\n  [CTypeEnum.int64]: 8,\n  [CTypeEnum.float]: 4,\n  [CTypeEnum.double]: 8,\n  [CTypeEnum.pointer]: 4,\n  [CTypeEnum.null]: 4,\n  [CTypeEnum.void]: 4,\n\n  [CTypeEnum.atomic_uint64]: 8,\n  [CTypeEnum.atomic_int64]: 8,\n\n  [CTypeEnum.bool]: 1,\n  [CTypeEnum.atomic_bool]: 1\n}\n\nexport const CTypeEnumPointerShiftMap: Record<CTypeEnum, number> = {\n  [CTypeEnum.uint8]: 0,\n  [CTypeEnum.atomic_uint8]: 0,\n  [CTypeEnum.char]: 0,\n  [CTypeEnum.atomic_char]: 0,\n  [CTypeEnum.uint16]: 1,\n  [CTypeEnum.atomic_uint16]: 1,\n  [CTypeEnum.uint32]: 2,\n  [CTypeEnum.atomic_uint32]: 2,\n  [CTypeEnum.uint64]: 4,\n  [CTypeEnum.int8]: 0,\n  [CTypeEnum.atomic_int8]: 0,\n  [CTypeEnum.int16]: 1,\n  [CTypeEnum.atomic_int16]: 1,\n  [CTypeEnum.int32]: 2,\n  [CTypeEnum.atomic_int32]: 2,\n  [CTypeEnum.int64]: 4,\n  [CTypeEnum.float]: 2,\n  [CTypeEnum.double]: 4,\n  [CTypeEnum.pointer]: 2,\n  [CTypeEnum.void]: 2,\n  [CTypeEnum.null]: 2,\n  [CTypeEnum.atomic_uint64]: 4,\n  [CTypeEnum.atomic_int64]: 4,\n\n  [CTypeEnum.bool]: 0,\n  [CTypeEnum.atomic_bool]: 0\n}\n\nexport const enum KeyMetaKey {\n  Type,\n  Pointer,\n  PointerLevel,\n  Array,\n  ArrayLength,\n  BitField,\n  BitFieldLength,\n  BaseAddressOffset,\n  BaseBitOffset,\n  InlineStruct\n}\n\nexport type KeyMeta = {\n  [KeyMetaKey.Type]: CTypeEnum | Struct\n  [KeyMetaKey.Pointer]: 0 | 1\n  [KeyMetaKey.PointerLevel]: number\n  [KeyMetaKey.Array]: 0 | 1\n  [KeyMetaKey.ArrayLength]: number\n  [KeyMetaKey.BitField]: 0 | 1\n  [KeyMetaKey.BitFieldLength]: number\n  [KeyMetaKey.BaseAddressOffset]: uint32\n  [KeyMetaKey.BaseBitOffset]: uint32\n  getTypeMeta?: () => { length: number, maxBaseTypeByteLength: number }\n}\n\nexport type Struct = new (init?: Data) => any\nexport type Union = new (init?: Data) => any\n\n/* eslint-disable */\nexport type CTypeEnum2Type<T> =\n  T extends CTypeEnum.null\n  ? void\n  : T extends CTypeEnum.void\n  ? void\n  : T extends CTypeEnum.uint8\n  ? uint8\n  : T extends CTypeEnum.atomic_int8\n  ? atomic_uint8\n  : T extends CTypeEnum.char\n  ? char\n  : T extends CTypeEnum.uint16\n  ? uint16\n  : T extends CTypeEnum.atomic_uint16\n  ? atomic_uint16\n  : T extends CTypeEnum.uint32\n  ? uint32\n  : T extends CTypeEnum.atomic_uint32\n  ? atomic_uint32\n  : T extends CTypeEnum.uint64\n  ? uint64\n  : T extends CTypeEnum.int8\n  ? int8\n  : T extends CTypeEnum.atomic_int8\n  ? atomic_int8\n  : T extends CTypeEnum.int16\n  ? int16\n  : T extends CTypeEnum.atomic_int16\n  ? atomic_int16\n  : T extends CTypeEnum.int32\n  ? int32\n  : T extends CTypeEnum.atomic_int32\n  ? atomic_int32\n  : T extends CTypeEnum.int64\n  ? int64\n  : T extends CTypeEnum.float\n  ? float\n  : T extends CTypeEnum.double\n  ? double\n  : T extends CTypeEnum.pointer\n  ? pointer<void>\n  : T extends CTypeEnum.atomic_int64\n  ? atomic_int64\n  : T extends CTypeEnum.atomic_uint64\n  ? atomic_uint64\n  : T extends CTypeEnum.bool\n  ? bool\n  : T extends CTypeEnum.atomic_bool\n  ? atomic_bool\n  : never\n/* eslint-enable */\n\nexport type AtomicsBuffer = Exclude<TypeArray, Float32Array | Float64Array> | BigInt64Array | BigUint64Array\n","/**\n * @file 判断版本\n */\n\nimport toNumber from './toNumber'\n\n/**\n * 判断给定版本是否符合条件\n * \n * @param version 待检查版本\n * @param checkVersion 版本基准\n * @param equal 是否判等\n * \n * @returns 是否符合条件\n */\nexport default function checkVersion(version: string, checkVersion: string, equal: boolean = false) {\n  const checkVersionArr = checkVersion.split('.')\n  const versionArr = version.split('.')\n  for (let i = 0; i < versionArr.length; i++) {\n    if (equal && i == (versionArr.length - 1) && toNumber(versionArr[i]) >= toNumber(checkVersionArr[i])) {\n      return versionArr.length >= checkVersionArr.length\n    }\n    if (toNumber(versionArr[i]) > toNumber(checkVersionArr[i])) {\n      return true\n    }\n    else if (toNumber(versionArr[i]) < toNumber(checkVersionArr[i])) {\n      return false\n    }\n\n    if (i === checkVersionArr.length - 1 && i === versionArr.length - 1) {\n      return equal\n    }\n\n    if (i === checkVersionArr.length - 1) {\n      return true\n    }\n    else if (i === versionArr.length - 1) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * @file 合并 TypeArray\n */\n\nimport { TypeArray, TypeArrayConstructor } from '../types/type'\n\nexport default function concatTypeArray<T extends TypeArrayConstructor>(\n  constructor: T,\n  arrays: InstanceType<T>[]\n): InstanceType<T> {\n\n  if (!arrays.length) {\n    return null\n  }\n\n  if (arrays.length === 1) {\n    return arrays[0]\n  }\n\n  let totalLength: number = 0\n  let array: TypeArray\n  for (array of arrays) {\n    totalLength += array.length\n  }\n  let result = new constructor(totalLength) as InstanceType<T>\n\n  let offset = 0\n  for (array of arrays) {\n    result.set(array, offset)\n    offset += array.length\n  }\n  return result\n}\n","/**\n * @file 使用指定上下文执行函数\n */\n\nimport * as is from '../util/is'\nimport * as constant from '../util/constant'\nimport { ReturnType, ParamType } from '../types/advanced'\nimport { Fn } from '../types/type'\n\n/**\n * 任性地执行一个函数，不管它有没有、是不是\n *\n * @param fn 调用的函数\n * @param context 执行函数时的 this 指向\n * @param args 调用函数的参数，多参数时传入数组\n * @return 调用函数的返回值\n */\nexport default function execute<T extends Fn>(fn: T, context?: any, args?: ParamType<T> | void): ReturnType<T> {\n  if (is.func(fn)) {\n    return is.array(args)\n      ? fn.apply(context, args)\n      : context !== constant.UNDEFINED\n        ? fn.call(context, args)\n        : args !== constant.UNDEFINED\n          ? fn(args)\n          : fn()\n  }\n}\n","\nexport default function getTimestamp() {\n  return Date.now()\n}\n","/**\n * \n * 将高位 i32 和低位 i32 转成 i64，（ number 最大安全整数为 pow(2, 53) - 1, 53 位） \n * \n * @param low \n * @param high \n * @returns \n */\n\nconst UINT32_MAX = Math.pow(2, 32)\n\nexport default function i32Toi64(low: number, high: number) {\n  return (low >>> 0) + high * UINT32_MAX\n}\n","/**\n * \n * 将 value 分成高 32 位和低 32 位\n * \n * @returns \n */\n\nconst UINT32_MAX = Math.pow(2, 32)\n\nexport default function i64Toi32(value: number) {\n  const high =  Math.floor(value / UINT32_MAX)\n  const low = value >>> 0\n  return [low, high]\n}\n","export default function isAudioWorklet() {\n  // @ts-ignore\n  return typeof registerProcessor === 'function' && typeof sampleRate === 'number' && typeof currentFrame === 'number' && typeof currentTime === 'number'\n}\n","/**\n * @file 判断是否定义\n */\n\nimport * as constant from '../util/constant'\n\n/**\n * 判断是否定义\n * \n * @param target 待判定变量\n */\nexport default function isDef(target: any): boolean {\n  return target !== constant.UNDEFINED\n}\n","import isDef from './isDef'\n\nlet _isLittleEndian: boolean\n\nexport default function isLittleEndian() {\n\n  if (isDef(_isLittleEndian)) {\n    return _isLittleEndian\n  }\n\n  const buf = new ArrayBuffer(2)\n  const view = new DataView(buf)\n\n  // little-endian write\n  view.setInt16(0, 256, true)\n  // platform-spec read, if equal then LE\n  _isLittleEndian = (new Int16Array(buf))[0] === 256\n\n  return _isLittleEndian\n}\n","/**\n * @file 判断是否是 native 方法\n */\n\nimport * as is from '../util/is'\nimport toString from './toString'\nimport * as string from '../util/string'\n\n/**\n * 判断是否是 native 方法\n * \n * @param target 待判定函数\n */\nexport default function isNative(target: any): boolean {\n  return is.func(target) && string.has(toString(target), '[native code]')\n}\n","import isDef from './isDef'\nimport isAudioWorklet from './isAudioWorklet'\n\nexport default function isWorker() {\n  return !(typeof window === 'object' && isDef(window.document)) && !isAudioWorklet()\n}\n","/**\n * @file 下一个时间片\n */\n\n\nimport isNative from './isNative'\nimport * as constant from '../util/constant'\n\ndeclare const setImmediate: Function\n\nlet nextTick: Function\n\n// IE (10+) 和 node\nif (typeof setImmediate === constant.RAW_FUNCTION && isNative(setImmediate)) {\n  nextTick = setImmediate\n}\n/*\n * 用 MessageChannel 去做 setImmediate 的 polyfill\n * 原理是将新的 message 事件加入到原有的 dom events 之后\n * 兼容性 IE10+ 和其他标准浏览器\n */\nif (typeof MessageChannel === constant.RAW_FUNCTION && isNative(MessageChannel)) {\n  nextTick = function (fn: any) {\n    const channel = new MessageChannel()\n    channel.port1.onmessage = fn\n    channel.port2.postMessage(1)\n  }\n}\nelse if (typeof setTimeout === 'function') {\n  nextTick = setTimeout\n}\n// 没有 setTimeout 是环境，比如 WorkletGlobalScope，先固定一个插槽\nelse {\n  nextTick = function (fn: Function) {\n    setTimeout(fn)\n  }\n}\n\nexport default nextTick\n","/**\n * @file 强转为 number\n */\n\nimport * as is from '../util/is'\nimport * as constant from '../util/constant'\n\n/**\n * 强转为 number\n * \n * @param target 待转换值\n * @param defaultValue 默认值\n * \n * @returns 转换之后的值\n */\nexport default function toNumber(target: any, defaultValue?: number): number {\n  return is.numeric(target)\n    ? +target\n    : defaultValue !== constant.UNDEFINED\n      ? defaultValue as number\n      : 0\n}\n","/**\n * @file 强转为 string\n */\n\nimport * as constant from '../util/constant'\n\n/**\n * 强转为 string\n * \n * @param target 待转换的值\n * @param defaultValue 默认值\n * @returns 转换之后的值\n */\nexport default function toString(target: any, defaultValue?: string): string {\n  return target != constant.NULL && target.toString\n    ? target.toString()\n    : defaultValue !== constant.UNDEFINED\n      ? defaultValue as string\n      : constant.EMPTY_STRING\n}\n","\nimport * as is from '../util/is'\nexport default abstract class ArrayLike {\n\n  protected proxy: ArrayLike\n\n  constructor() {\n    this.proxy = new Proxy(this, {\n      get(target, p, receiver) {\n        if (is.numeric(p)) {\n          return target.getIndexValue(+p)\n        }\n        else {\n          return target[p]\n        }\n      },\n      set(target, p, newValue, receiver) {\n        if (is.numeric(p)) {\n          target.setIndexValue(+p, newValue)\n        }\n        else {\n          target[p] = newValue\n        }\n        return true\n      }\n    })\n  }\n\n  protected abstract getIndexValue(index: number): any\n  protected abstract setIndexValue(index: number, value: any): void\n\n  [n: number]: number\n}\n","/**\n * bit 读取器\n */\n\nimport { IOError } from './error'\nimport * as logger from '../util/logger'\nimport { Uint8ArrayInterface } from './interface'\n\nexport default class BitReader {\n\n  private buffer: Uint8Array\n\n  private pointer: number\n\n  private bitsLeft: number\n\n  private size: number\n\n  private endPointer: number\n\n  public error: number\n\n  public onFlush: (data: Uint8Array) => number\n\n  /**\n   * @param data 待读取的字节\n   * @param bigEndian 是否按大端字节序读取，默认大端字节序（网络字节序）\n   */\n  constructor(size: number = 1 * 1024 * 1024) {\n    this.pointer = 0\n    this.bitsLeft = 8\n\n    this.size = size\n    this.endPointer = 0\n    this.error = 0\n\n    this.buffer = new Uint8Array(this.size)\n  }\n\n  /**\n   * 不影响原读取操作的情况下，读取 1 个比特\n   */\n  public peekU1() {\n    let result = 0\n    if (this.remainingLength() < 1 || this.remainingLength() === 1 && this.bitsLeft === 0) {\n      this.flush()\n    }\n\n    let pointer = this.pointer\n    let bitsLeft = this.bitsLeft\n\n    if (bitsLeft === 0) {\n      pointer++\n      bitsLeft = 8\n    }\n\n    result = (this.buffer[pointer] >> (bitsLeft - 1)) & 0x01\n    return result\n  }\n\n  /**\n   * 读取 1 个比特\n   */\n  public readU1() {\n    let result = 0\n\n    if (this.remainingLength() < 1 || this.remainingLength() === 1 && this.bitsLeft === 0) {\n      this.flush()\n    }\n\n    this.bitsLeft--\n\n    result = (this.buffer[this.pointer] >> this.bitsLeft) & 0x01\n\n    if (this.bitsLeft === 0) {\n      this.pointer++\n      this.bitsLeft = 8\n    }\n\n    return result\n  }\n\n  /**\n   * 读取 n 个比特\n   * \n   * @param n\n   */\n  public readU(n: number) {\n    let result = 0\n    for (let i = 0; i < n; i++) {\n      result |= (this.readU1() << (n - i - 1))\n    }\n    return result\n  }\n\n  /**\n   * 获取剩余可读字节数\n   * \n   * @returns \n   */\n  public remainingLength() {\n    return this.endPointer - this.pointer\n  }\n\n  public getPos() {\n    return this.pointer\n  }\n\n  public skip(n: number) {\n    const byte = (n - (n % 8)) / 8\n\n    this.pointer += byte\n\n    const bitsLeft = n % 8\n\n    if (this.bitsLeft <= bitsLeft) {\n      this.pointer++\n      this.bitsLeft = 8 - (bitsLeft - this.bitsLeft)\n    }\n    else {\n      this.bitsLeft -= bitsLeft\n    }\n  }\n\n  public flush() {\n\n    if (!this.onFlush) {\n      this.error = IOError.INVALID_OPERATION\n      throw Error('IOReader error, flush failed because of no flush callback')\n    }\n\n    if (this.bitsLeft === 0) {\n      this.pointer++\n    }\n\n    if (this.size - this.remainingLength() <= 0) {\n      return\n    }\n\n    if (this.pointer < this.endPointer) {\n      this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\n\n      const len = this.onFlush(this.buffer.subarray(this.endPointer - this.pointer, this.size))\n\n      if (len < 0) {\n        this.error = len\n        throw Error('IOReader error, flush failed')\n      }\n\n      this.endPointer = this.endPointer - this.pointer + len\n      this.pointer = 0\n    }\n    else {\n      const len = this.onFlush(this.buffer)\n\n      this.endPointer = len\n      this.pointer = 0\n      this.bitsLeft = 8\n\n      if (len < 0) {\n        this.error = len\n        throw Error('IOReader error, flush failed')\n      }\n    }\n  }\n\n  public getBuffer() {\n    return this.buffer\n  }\n\n  public appendBuffer(buffer: Uint8ArrayInterface) {\n    if (this.size - this.endPointer >= buffer.length) {\n      this.buffer.set(buffer, this.endPointer)\n      this.endPointer += buffer.length\n    }\n    else {\n      this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\n      this.endPointer = this.endPointer - this.pointer\n      this.pointer = 0\n\n      if (this.size - this.endPointer >= buffer.length) {\n        this.buffer.set(buffer, this.endPointer)\n        this.endPointer += buffer.length\n      }\n      else {\n        const len = Math.min(this.size - this.endPointer, buffer.length)\n        this.buffer.set(buffer.subarray(0, len), this.endPointer)\n        this.endPointer += len\n\n        logger.warn('BSReader, call appendBuffer but the buffer\\'s size is lagger then the remaining size')\n      }\n    }\n  }\n\n  public clear() {\n    this.pointer = this.endPointer = 0\n    this.bitsLeft = 8\n    this.error = 0\n  }\n\n  public skipPadding() {\n    if (this.bitsLeft < 8) {\n      this.bitsLeft = 8\n      this.pointer++\n    }\n  }\n}\n","/**\n * bit 写存器\n */\n\nimport { IOError } from './error'\n\n/**\n * 写字节流工具\n */\n\nexport default class BitWriter {\n\n  private buffer: Uint8Array\n\n  private pointer: number\n\n  private bitPointer: number\n\n  private size: number\n\n  public error: number\n\n  public onFlush: (data: Uint8Array, pos?: number) => number\n\n  /**\n   * @param data 待写的 Uint8Array\n   */\n  constructor(size: number = 1 * 1024 * 1024) {\n    this.pointer = 0\n    this.bitPointer = 0\n    this.size = size\n    this.error = 0\n\n    this.buffer = new Uint8Array(this.size)\n  }\n\n  /**\n   * 写一个 bit\n   * \n   * @param bit \n   */\n  public writeU1(bit: number) {\n    if (this.remainingLength() < 1 || this.remainingLength() === 1 && this.bitPointer >= 8) {\n      this.flush()\n    }\n\n    if (bit & 0x01) {\n      this.buffer[this.pointer] |= (1 << (7 - this.bitPointer))\n    }\n    else {\n      this.buffer[this.pointer] &= ~(1 << (7 - this.bitPointer))\n    }\n\n\n    this.bitPointer++\n\n    if (this.bitPointer === 8) {\n      this.pointer++\n      this.bitPointer = 0\n    }\n  }\n\n  /**\n   * 写 n 个比特\n   * \n   * @param n\n   */\n  public writeU(n: number, v: number) {\n    for (let i = 0; i < n; i++) {\n      this.writeU1(v >> (n - i - 1 ) & 0x01)\n    }\n  }\n\n  /**\n   * 获取剩余可写节数\n   * \n   * @returns \n   */\n  public remainingLength() {\n    return this.size - this.pointer\n  }\n\n  public flush() {\n\n    if (!this.onFlush) {\n      this.error = IOError.INVALID_OPERATION\n      throw Error('BSWriter error, flush failed because of no flush callback')\n    }\n\n    if (this.pointer) {\n      if (this.bitPointer && this.pointer > 1) {\n        const ret = this.onFlush(this.buffer.subarray(0, this.pointer - 1))\n        if (ret !== 0) {\n          this.error = ret\n          throw Error('BSWriter error, flush failed')\n        }\n        this.buffer[0] = this.buffer[this.pointer]\n      }\n      else if (this.bitPointer === 0) {\n        const ret = this.onFlush(this.buffer.subarray(0, this.pointer))\n        if (ret !== 0) {\n          this.error = ret\n          throw Error('BSWriter error, flush failed')\n        }\n      }\n    }\n    this.pointer = 0\n  }\n\n  public padding() {\n    while (this.bitPointer !== 0) {\n      this.writeU1(0)\n    }\n  }\n\n  public clear() {\n    this.pointer = 0\n    this.bitPointer = 0\n    this.error = 0\n  }\n\n  public getBuffer() {\n    return this.buffer\n  }\n\n  public getPointer() {\n    return this.pointer\n  }\n}\n","/**\n * 读字节流工具\n */\n\nimport concatTypeArray from '../function/concatTypeArray'\nimport * as text from '../util/text'\nimport { Uint8ArrayInterface, BytesReaderSync } from './interface'\n\nexport default class BufferReader implements BytesReaderSync {\n\n  private data: DataView\n\n  private buffer: Uint8ArrayInterface\n\n  private byteStart: number\n\n  private pos: number\n\n  private size: number\n\n  private littleEndian: boolean\n\n  /**\n   * @param data 待读取的字节\n   * @param bigEndian 是否按大端字节序读取，默认大端字节序（网络字节序）\n   */\n  constructor(data: Uint8ArrayInterface, bigEndian: boolean = true) {\n    this.buffer = data\n    this.data = data instanceof Uint8Array ? new DataView(data.buffer) : data.view\n    this.byteStart = data instanceof Uint8Array ? data.byteOffset : 0\n\n    this.pos = 0\n    this.size = data.byteLength\n    this.littleEndian = !bigEndian\n  }\n\n  /**\n   * 读取 8 位无符号整数\n   * \n   * @returns \n   */\n  public readUint8() {\n    return this.data.getUint8(this.pos++ + this.byteStart)\n  }\n\n  /**\n   * 读取 16 位无符号整数\n   * \n   * @returns \n   */\n  public readUint16() {\n    const value = this.data.getUint16(this.pos + this.byteStart, this.littleEndian)\n    this.pos += 2\n    return value\n  }\n\n  /**\n   * 读取 24 位无符号整数\n   * \n   * @returns \n   */\n  public readUint24() {\n    const high = this.readUint16()\n    const low = this.readUint8()\n    return high << 8 | low\n  }\n\n  /**\n   * 读取 32 位无符号整数\n   * \n   * @returns \n   */\n  public readUint32() {\n    const value = this.data.getUint32(this.pos + this.byteStart, this.littleEndian)\n    this.pos += 4\n    return value\n  }\n\n  /**\n   * 读取 64 位无符号整数\n   * \n   * @returns \n   */\n  public readUint64() {\n    const high = BigInt(this.readUint32())\n    const low = BigInt(this.readUint32())\n    if (this.littleEndian) {\n      return low << 32n | high\n    }\n    else {\n      return high << 32n | low\n    }\n  }\n\n  /**\n   * 读取 8 位有符号整数\n   * \n   * @returns \n   */\n  public readInt8() {\n    return this.data.getInt8(this.pos++ + this.byteStart)\n  }\n\n  /**\n   * 读取 16 位有符号整数\n   * \n   * @returns \n   */\n  public readInt16() {\n    const value = this.data.getInt16(this.pos + this.byteStart, this.littleEndian)\n    this.pos += 2\n    return value\n  }\n\n  /**\n   * 读取 32 位有符号整数\n   * \n   * @returns \n   */\n  public readInt32() {\n    const value = this.data.getInt32(this.pos + this.byteStart, this.littleEndian)\n    this.pos += 4\n    return value\n  }\n\n  /**\n   * 读取 64 位有符号整数\n   * \n   * @returns \n   */\n  public readInt64() {\n    const high = BigInt(this.readInt32())\n    const low = BigInt(this.readInt32())\n    if (this.littleEndian) {\n      return low << 32n | high\n    }\n    else {\n      return high << 32n | low\n    }\n  }\n\n  /**\n   * 读取单精度浮点数\n   * \n   * @returns \n   */\n  public readFloat() {\n    const value = this.data.getFloat32(this.pos + this.byteStart, this.littleEndian)\n    this.pos += 4\n    return value\n  }\n\n  /**\n   * 读取双精度浮点数\n   * \n   * @returns \n   */\n  public readDouble() {\n    const value = this.data.getFloat64(this.pos + this.byteStart, this.littleEndian)\n    this.pos += 8\n    return value\n  }\n\n  /**\n   * 读取指定长度的字节，并以 16 进制字符串返回\n   * \n   * @param length 默认 1\n   * @returns \n   */\n  public readHex(length: number = 1) {\n    let hexStr = ''\n    for (let i = 0; i < length; i++) {\n      const hex = this.readUint8().toString(16)\n      hexStr += (hex.length === 1 ? '0' + hex : hex)\n    }\n    return hexStr\n  }\n\n  /**\n   * 读取指定长度的字符串\n   * \n   * @param length 默认 1\n   * @returns \n   */\n  public readString(length: number = 1) {\n    let str: string = ''\n    if (length) {\n      let start = this.pos\n      for (let i = 0; i < length; i++) {\n        if (this.buffer[this.pos + i] === 0) {\n          start++\n        }\n        else {\n          break\n        }\n      }\n      str = text.decode(this.buffer.subarray(start, start + length))\n    }\n    this.pos += length\n\n    return str\n  }\n\n  /**\n   * 读取一行字符\n   */\n  public readLine() {\n    let str = ''\n\n    for (let i = this.pos; i < this.size; i++) {\n      if (this.buffer[i] === 0x0a || this.buffer[i] === 0x0d) {\n        str += this.readString(i - this.pos)\n        break\n      }\n    }\n\n\n    for (let i = this.pos; i < this.size; i++) {\n      if (this.buffer[i] === 0x0a || this.buffer[i] === 0x0d) {\n        this.readUint8()\n      }\n      else {\n        break\n      }\n    }\n\n    return str\n  }\n\n  /**\n   * 获取当前读取指针\n   * \n   * @returns \n   */\n  public getPos() {\n    return BigInt(this.pos)\n  }\n\n  /**\n   * seek 读取指针\n   * \n   * @param pos \n   */\n  public seek(pos: number) {\n    if (pos > this.size) {\n      pos = this.size\n    }\n    this.pos = Math.max(0, pos)\n  }\n\n  /**\n   * 跳过指定字节长度\n   * \n   * @param length \n   */\n  public skip(length: number) {\n    this.seek(this.pos + length)\n  }\n\n  /**\n   * 返回指定字节长度\n   * \n   * @param length \n   */\n  public back(length: number) {\n    this.seek(this.pos - length)\n  }\n\n  /**\n   * 获取剩余可读字节数\n   * \n   * @returns \n   */\n  public remainingSize() {\n    return this.size - this.pos\n  }\n\n  /**\n   * 读取指定长度的二进制 buffer 数据\n   * \n   * @param length \n   * @returns \n   */\n  public readBuffer(length: number) {\n    length = Math.min(length, this.remainingSize())\n    const buffer = this.buffer.slice(this.pos, this.pos + length)\n    this.pos += length\n    return buffer\n  }\n\n  /**\n   * 追加 buffer\n   * \n   * @param buffer \n   */\n  public appendBuffer(buffer: Uint8ArrayInterface) {\n    this.buffer = concatTypeArray(Uint8Array, [\n      this.buffer.slice(),\n      buffer.slice()\n    ])\n    this.data = new DataView(this.buffer.buffer)\n    this.size += buffer.byteLength\n    this.byteStart = 0\n  }\n\n  public resetBuffer(data: Uint8ArrayInterface, bigEndian: boolean = true) {\n    this.buffer = data\n    this.data = data instanceof Uint8Array ? new DataView(data.buffer) : data.view\n    this.byteStart = data instanceof Uint8Array ? data.byteOffset : 0\n\n    this.pos = 0\n    this.size = data.byteLength\n    this.littleEndian = !bigEndian\n  }\n}\n","/**\n * 写字节流工具\n */\n\nimport * as logger from '../util/logger'\nimport { Uint8ArrayInterface, BytesWriterSync } from './interface'\nimport * as text from '../util/text'\n\nexport default class BufferWriter implements BytesWriterSync {\n\n  private data: DataView\n\n  private buffer: Uint8ArrayInterface\n\n  private byteStart: number\n\n  private pos: number\n\n  private size: number\n\n  private littleEndian: boolean\n\n  /**\n   * @param data 待写的 Uint8Array\n   * @param bigEndian 是否按大端字节序写，默认大端字节序（网络字节序）\n   */\n  constructor(data: Uint8ArrayInterface, bigEndian: boolean = true) {\n    this.buffer = data\n    this.data = data instanceof Uint8Array ? new DataView(data.buffer) : data.view\n    this.byteStart = data instanceof Uint8Array ? data.byteOffset : 0\n    this.pos = 0\n    this.size = data.byteLength\n    this.littleEndian = !bigEndian\n  }\n\n  /**\n   * 写 8 位无符号整数\n   */\n  public writeUint8(value: number) {\n    this.data.setUint8(this.pos++ + this.byteStart, value)\n  }\n\n  /**\n   * 读取 16 位无符号整数\n   */\n  public writeUint16(value: number) {\n    this.data.setUint16(this.pos + this.byteStart, value, this.littleEndian)\n    this.pos += 2\n  }\n\n  /**\n   * 写 24 位无符号整数\n   */\n  public writeUint24(value: number) {\n    const high = value & 0xf00\n    const middle = value & 0x0f0\n    const low = value & 0x00f\n    if (this.littleEndian) {\n      this.writeUint8(low)\n      this.writeUint8(middle)\n      this.writeUint8(high)\n    }\n    else {\n      this.writeUint8(high)\n      this.writeUint8(middle)\n      this.writeUint8(low)\n    }\n  }\n\n  /**\n   * 写 32 位无符号整数\n   */\n  public writeUint32(value: number) {\n    this.data.setUint32(this.pos + this.byteStart, value, this.littleEndian)\n    this.pos += 4\n  }\n\n  /**\n   * 写 64 位无符号整数\n   */\n  public writeUint64(value: bigint) {\n    const low = value & 0xffffffffn\n    const high = (value & (0xffffffffn << 32n)) >> 32n\n    if (this.littleEndian) {\n      this.writeUint32(Number(low))\n      this.writeUint32(Number(high))\n    }\n    else {\n      this.writeUint32(Number(high))\n      this.writeUint32(Number(low))\n    }\n  }\n\n  /**\n   * 写 8 位有符号整数\n   * \n   * @returns \n   */\n  public writeInt8(value: number) {\n    this.data.setInt8(this.pos++ + this.byteStart, value)\n  }\n\n  /**\n   * 写 16 位有符号整数\n   */\n  public writeInt16(value: number) {\n    this.data.setInt16(this.pos + this.byteStart, value, this.littleEndian)\n    this.pos += 2\n  }\n\n  /**\n   * 写 32 位有符号整数\n   */\n  public writeInt32(value: number) {\n    this.data.setInt32(this.pos + this.byteStart, value, this.littleEndian)\n    this.pos += 4\n  }\n\n  /**\n   * 写 64 位有符号整数\n   */\n  public writeInt64(value: bigint) {\n    const low = value & BigInt(0xffffffff)\n    const high = (value & (BigInt(0xffffffff) << 32n)) >> 32n\n    if (this.littleEndian) {\n      this.writeInt32(Number(low))\n      this.writeInt32(Number(high))\n    }\n    else {\n      this.writeInt32(Number(high))\n      this.writeInt32(Number(low))\n    }\n  }\n\n  /**\n   * 写单精度浮点数\n   * \n   * @returns \n   */\n  public writeFloat(value: number) {\n    this.data.setFloat32(this.pos + this.byteStart, value, this.littleEndian)\n    this.pos += 4\n  }\n\n  /**\n   * 写双精度浮点数\n   */\n  public writeDouble(value: number) {\n    this.data.setFloat64(this.pos + this.byteStart, value, this.littleEndian)\n    this.pos += 8\n  }\n\n  /**\n   * 获取当前写指针\n   * \n   * @returns \n   */\n  public getPos() {\n    return this.pos\n  }\n\n  /**\n   * seek 写指针\n   * \n   * @param pos \n   */\n  public seek(pos: number) {\n    if (pos > this.size) {\n      pos = this.size\n    }\n    this.pos = Math.max(0, pos)\n  }\n\n  /**\n   * 跳过指定字节长度\n   * \n   * @param length \n   */\n  public skip(length: number) {\n    this.seek(this.pos + length)\n  }\n\n  /**\n   * 返回指定字节长度\n   * \n   * @param length \n   */\n  public back(length: number) {\n    this.seek(this.pos - length)\n  }\n\n  /**\n   * 获取剩余可写节数\n   * \n   * @returns \n   */\n  public remainingSize() {\n    return this.size - this.pos\n  }\n\n  /**\n   * 写指定长度的二进制 buffer 数据\n   * \n   * @param length \n   * @returns \n   */\n  public writeBuffer(buffer: Uint8ArrayInterface) {\n    let length = buffer.length\n    if (this.remainingSize() < length) {\n      length = this.remainingSize()\n      logger.warn(`the remaining buffer size is smaller then the wrote buffer, hope set ${buffer.length}, but set ${length}`)\n    }\n    this.buffer.set(buffer, this.pos)\n    this.pos += buffer.length\n  }\n\n  /**\n   * 写一个字符串\n   */\n  public writeString(str: string) {\n    const buffer = text.encode(str)\n    this.writeBuffer(buffer)\n    return buffer.length\n  }\n\n  public getWroteBuffer() {\n    return this.buffer.subarray(0, this.pos)\n  }\n\n  public resetBuffer(data: Uint8ArrayInterface, bigEndian: boolean = true) {\n    this.buffer = data\n    this.data = data instanceof Uint8Array ? new DataView(data.buffer) : data.view\n    this.byteStart = data instanceof Uint8Array ? data.byteOffset : 0\n\n    this.pos = 0\n    this.size = data.byteLength\n    this.littleEndian = !bigEndian\n  }\n}\n","/**\n * 写字节流工具\n */\n\nimport { IOError } from './error'\nimport * as text from '../util/text'\nimport { Uint8ArrayInterface, BytesWriterSync } from './interface'\n\nexport default class IOWriterSync implements BytesWriterSync {\n\n  private data: DataView\n\n  private buffer: Uint8ArrayInterface\n\n  private pointer: number\n\n  private pos: bigint\n\n  private size: number\n\n  private littleEndian: boolean\n\n  public error: number\n\n  public onFlush: (data: Uint8Array, pos?: bigint) => number\n  public onSeek: (seek: bigint) => number\n\n  /**\n   * @param data 待写的 Uint8Array\n   * @param bigEndian 是否按大端字节序写，默认大端字节序（网络字节序）\n   */\n  constructor(size: number = 1 * 1024 * 1024, bigEndian: boolean = true, map?: Uint8ArrayInterface) {\n    this.pointer = 0\n    this.pos = 0n\n    this.size = size\n    this.littleEndian = !bigEndian\n    this.error = 0\n\n    if (map && map.view) {\n      this.size = map.length\n      this.buffer = map\n      this.data = map.view\n    }\n    else if (map && !map.byteOffset) {\n      this.size = map.length\n      this.buffer = map\n      this.data = new DataView(this.buffer.buffer)\n    }\n    else {\n\n      if (map) {\n        throw new Error('not support subarray of ArrayBuffer')\n      }\n\n      this.buffer = new Uint8Array(this.size)\n      this.data = new DataView(this.buffer.buffer)\n    }\n  }\n\n  /**\n   * 写 8 位无符号整数\n   */\n  public writeUint8(value: number) {\n    if (this.remainingLength() < 1) {\n      this.flush()\n    }\n    this.data.setUint8(this.pointer, value)\n    this.pointer++\n    this.pos++\n  }\n\n  /**\n   * 读取 16 位无符号整数\n   */\n  public writeUint16(value: number) {\n    if (this.remainingLength() < 2) {\n      this.flush()\n    }\n    this.data.setUint16(this.pointer, value, this.littleEndian)\n    this.pointer += 2\n    this.pos += 2n\n  }\n\n  /**\n   * 写 24 位无符号整数\n   */\n  public writeUint24(value: number) {\n    if (this.remainingLength() < 3) {\n      this.flush()\n    }\n    const high = (value & 0xff0000) >> 16\n    const middle = (value & 0x00ff00) >> 8\n    const low = value & 0x0000ff\n    if (this.littleEndian) {\n      this.writeUint8(low)\n      this.writeUint8(middle)\n      this.writeUint8(high)\n    }\n    else {\n      this.writeUint8(high)\n      this.writeUint8(middle)\n      this.writeUint8(low)\n    }\n  }\n\n  /**\n   * 写 32 位无符号整数\n   */\n  public writeUint32(value: number) {\n    if (this.remainingLength() < 4) {\n      this.flush()\n    }\n    this.data.setUint32(this.pointer, value, this.littleEndian)\n    this.pointer += 4\n    this.pos += 4n\n  }\n\n  /**\n   * 写 64 位无符号整数\n   */\n  public writeUint64(value: bigint) {\n    if (this.remainingLength() < 8) {\n      this.flush()\n    }\n    this.data.setBigUint64(this.pointer, value, this.littleEndian)\n    this.pointer += 8\n    this.pos += 8n\n  }\n\n  /**\n   * 写 8 位有符号整数\n   * \n   * @returns \n   */\n  public writeInt8(value: number) {\n    if (this.remainingLength() < 1) {\n      this.flush()\n    }\n    this.data.setInt8(this.pointer, value)\n    this.pointer++\n    this.pos++\n  }\n\n  /**\n   * 写 16 位有符号整数\n   */\n  public writeInt16(value: number) {\n    if (this.remainingLength() < 2) {\n      this.flush()\n    }\n    this.data.setInt16(this.pointer, value, this.littleEndian)\n    this.pointer += 2\n    this.pos += 2n\n  }\n\n  /**\n   * 写 32 位有符号整数\n   */\n  public writeInt32(value: number) {\n    if (this.remainingLength() < 4) {\n      this.flush()\n    }\n    this.data.setInt32(this.pointer, value, this.littleEndian)\n    this.pointer += 4\n    this.pos += 4n\n  }\n\n  /**\n   * 写 64 位有符号整数\n   */\n  public writeInt64(value: bigint) {\n    if (this.remainingLength() < 8) {\n      this.flush()\n    }\n    this.data.setBigInt64(this.pointer, value, this.littleEndian)\n    this.pointer += 8\n    this.pos += 8n\n  }\n\n  /**\n   * 写单精度浮点数\n   * \n   * @returns \n   */\n  public writeFloat(value: number) {\n    if (this.remainingLength() < 4) {\n      this.flush()\n    }\n    this.data.setFloat32(this.pointer, value, this.littleEndian)\n    this.pointer += 4\n    this.pos += 4n\n  }\n\n  /**\n   * 写双精度浮点数\n   */\n  public writeDouble(value: number) {\n    if (this.remainingLength() < 8) {\n      this.flush()\n    }\n    this.data.setFloat64(this.pointer, value, this.littleEndian)\n    this.pointer += 8\n    this.pos += 8n\n  }\n\n  /**\n   * 获取当前写指针\n   * \n   * @returns \n   */\n  public getPointer() {\n    return this.pointer\n  }\n\n  public getPos() {\n    return this.pos\n  }\n\n  /**\n   * 获取剩余可写节数\n   * \n   * @returns \n   */\n  public remainingLength() {\n    return this.size - this.pointer\n  }\n\n  /**\n   * 写指定长度的二进制 buffer 数据\n   * \n   * @param length \n   * @returns \n   */\n  public writeBuffer(buffer: Uint8ArrayInterface) {\n\n    if (!buffer.length) {\n      return\n    }\n\n    let length = buffer.length\n    if (this.remainingLength() < length) {\n      let index = 0\n      while (length > 0) {\n        this.flush()\n        const len = Math.min(this.size, length)\n        this.buffer.set(buffer.subarray(index, index + len), this.pointer)\n\n        this.pointer += len\n        this.pos += BigInt(len)\n        index += len\n        length -= len\n      }\n    }\n    else {\n      this.buffer.set(buffer, this.pointer)\n      this.pointer += length\n      this.pos += BigInt(length)\n    }\n  }\n\n  /**\n   * 写一个字符串\n   */\n  public writeString(str: string) {\n    const buffer = text.encode(str)\n    this.writeBuffer(buffer)\n    return buffer.length\n  }\n\n  public encodeString(str: string) {\n    return text.encode(str)\n  }\n\n  public flush() {\n    if (!this.onFlush) {\n      this.error = IOError.INVALID_OPERATION\n      throw Error('IOWriter error, flush failed because of no flush callback')\n    }\n\n    if (this.pointer) {\n      const ret = this.onFlush(this.buffer.subarray(0, this.pointer))\n      if (ret !== 0) {\n        this.error = ret\n        throw Error('IOWriter error, flush failed')\n      }\n    }\n    this.pointer = 0\n  }\n\n  public flushToPos(pos: bigint) {\n    if (!this.onFlush) {\n      this.error = IOError.INVALID_OPERATION\n      throw Error('IOWriter error, flush failed because of no flush callback')\n    }\n    if (this.pointer) {\n      const ret = this.onFlush(this.buffer.subarray(0, this.pointer), pos)\n      if (ret !== 0) {\n        this.error = ret\n        throw Error('IOWriter error, flush failed')\n      }\n    }\n    this.pointer = 0\n  }\n\n  public seek(pos: bigint) {\n    if (!this.onSeek) {\n      this.error = IOError.INVALID_OPERATION\n      throw Error('IOWriter error, seek failed because of no seek callback')\n    }\n\n    this.flush()\n\n    const ret = this.onSeek(pos)\n\n    if (ret !== 0) {\n      this.error = ret\n      throw Error('IOWriter error, seek failed')\n    }\n\n    this.pos = pos\n  }\n\n  public seekInline(pos: number) {\n    const pointer = this.pointer\n    this.pointer = Math.max(0, Math.min(this.size, pos))\n    this.pos += BigInt(this.pointer - pointer)\n  }\n\n  public skip(length: number) {\n    const pointer = this.pointer\n    this.pointer = Math.min(this.size, this.pointer + length)\n    this.pos += BigInt(this.pointer - pointer)\n  }\n\n  public back(length: number) {\n    const pointer = this.pointer\n    this.pointer = Math.max(0, this.pointer - length)\n    this.pos += BigInt(this.pointer - pointer)\n  }\n\n  public getBuffer() {\n    return this.buffer.subarray(0, this.pointer)\n  }\n\n  public setEndian(bigEndian: boolean) {\n    this.littleEndian = !bigEndian\n  }\n\n  public reset() {\n    this.pointer = 0\n    this.pos = 0n\n    this.error = 0\n  }\n\n  public getBufferSize() {\n    return this.size\n  }\n}\n","/**\n * // 计算最大公约数（GCD）\n * \n * @param a \n * @param b \n * @returns \n */\nexport default function gcd(a: number, b: number) {\n  while (b !== 0) {\n    [a, b] = [b, a % b]\n  }\n  return a\n}","/**\n * @file 数组操作\n */\n\nimport * as is from './is'\nimport * as constant from './constant'\nimport execute from '../function/execute'\n\n/**\n * 遍历数组\n *\n * @param array\n * @param callback 返回 false 可停止遍历\n * @param reversed 是否逆序遍历\n */\nexport function each<T>(\n  array: T[],\n  callback: (item: T, index: number) => boolean | void,\n  reversed?: boolean\n): void {\n  if (!array) {\n    return\n  }\n  const { length } = array\n  if (length) {\n    if (reversed) {\n      for (let i = length - 1; i >= 0; i--) {\n        if (callback(array[i], i) === constant.FALSE) {\n          break\n        }\n      }\n    }\n    else {\n      for (let i = 0; i < length; i++) {\n        if (callback(array[i], i) === constant.FALSE) {\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction nativePush<T>(array: T[], item: T) {\n  array[array.length] = item\n}\n\nfunction nativeUnshift<T>(array: T[], item: T) {\n  array.unshift(item)\n}\n\n/**\n * 添加\n *\n * @param array\n * @param value\n * @param action\n */\nfunction addItem<T>(array: T[], value: T | T[], action: Function) {\n  if (is.array(value)) {\n    each(\n      value as T[],\n      function (item: T) {\n        action(array, item)\n      }\n    )\n  }\n  else {\n    action(array, value)\n  }\n}\n\n/**\n * 往后加\n *\n * @param array\n * @param target\n */\nexport function push<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativePush)\n}\n\n/**\n * 往前加\n *\n * @param array\n * @param target\n */\nexport function unshift<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativeUnshift)\n}\n\n/**\n * 数组项在数组中的位置\n *\n * @param array 数组\n * @param target 数组项\n * @param strict 是否全等判断，默认是全等\n * @return 如果未找到，返回 -1\n */\nexport function indexOf<T>(array: T[], target: T, strict?: boolean): number {\n  let result = constant.MINUS_ONE\n  each(\n    array,\n    function (item: any, index: number) {\n      if (strict === constant.FALSE ? item == target : item === target) {\n        result = index\n        return constant.FALSE\n      }\n    }\n  )\n  return result\n}\n\n/**\n * 获取数组最后一项\n *\n * @param array 数组\n * @return\n */\nexport function last<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array[length - 1]\n  }\n}\n\n/**\n * 弹出数组最后一项\n *\n * 项目里用的太多，仅用于节省字符\n *\n * @param array 数组\n * @return 弹出的数组项\n */\nexport function pop<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array.pop()\n  }\n}\n\n/**\n * 删除数组项\n *\n * @param array 数组\n * @param item 待删除项\n * @param strict 是否全等判断，默认是全等\n * @return 删除的数量\n */\nexport function remove<T>(array: T[], target: T, strict?: boolean): number {\n  let result = 0\n  each(\n    array,\n    function (item: T, index: number) {\n      if (strict === constant.FALSE ? item == target : item === target) {\n        array.splice(index, 1)\n        result++\n      }\n    },\n    constant.TRUE\n  )\n  return result\n}\n\n/**\n * 数组是否包含 item\n *\n * @param array 数组\n * @param target 可能包含的数组项\n * @param strict 是否全等判断，默认是全等\n * @return\n */\nexport function has<T>(array: T[], target: T, strict?: boolean): boolean {\n  return indexOf(array, target, strict) >= 0\n}\n\n/**\n * 把类数组转成数组\n *\n * @param array 类数组\n * @return\n */\nexport function toArray<T>(array: T[] | ArrayLike<T>): T[] {\n  return is.array(array)\n    ? array\n    : execute(constant.EMPTY_ARRAY.slice, array)\n}\n\n/**\n * 把数组转成对象\n *\n * @param array 数组\n * @param key 数组项包含的字段名称，如果数组项是基本类型，可不传\n * @param value\n * @return\n */\nexport function toObject(array: any[], key?: string | null, value?: any): object {\n  let result = {}\n  each(\n    array,\n    function (item: any) {\n      result[key ? item[key] : item] = value || item\n    }\n  )\n  return result\n}\n\n/**\n * 把数组合并成字符串\n *\n * @param array\n * @param separator\n * @return\n */\nexport function join(array: string[], separator: string): string {\n  return array.join(separator)\n}\n\n/**\n * 用于判断长度大于 0 的数组\n *\n * @param array\n * @return\n */\nexport function falsy(array: any): boolean {\n  return !is.array(array) || !array.length\n}\n\n/**\n * 排除数组元素返回新数组\n * \n * @param source \n * @param exc \n * @returns \n */\nexport function exclude(source: any[], exc: any[]) {\n  const items = []\n\n  each(source, (item, index) => {\n    if (!has(exc, item)) {\n      items.push(item)\n    }\n  })\n\n  return items\n}\n\n/**\n * 二分查找\n * \n * @param array \n * @param callback 相等返回 0， 往左边查返回 -1， 往右边查返回 1\n * @returns \n */\nexport function binarySearch<T>(array: T[], callback: (item: T) => -1 | 0 | 1) {\n  let left = 0\n  let right = array.length - 1\n  let index = -1\n\n  while (left <= right) {\n    let mid = ((left + right) / 2) >>> 0\n\n    const ret = callback(array[mid])\n\n    if (ret === 0) {\n      index = mid\n      break\n    }\n    else if (ret === 1) {\n      left = mid + 1\n    }\n    else {\n      right = mid - 1\n      index = mid\n    }\n  }\n  return index\n}\n","\nimport * as array from './array'\n\nconst base64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\n/**\n * utf8 编码\n * @param text \n */\nfunction utf8Decode(text: string): string {\n  let string = '', i = 0, c = 0, c1 = 0, c2 = 0, c3 = 0\n  while (i < text.length) {\n    c = text.charCodeAt(i)\n    if (c < 128) {\n      string += String.fromCharCode(c)\n      i++\n    }\n    else if ((c > 191) && (c < 224)) {\n      c2 = text.charCodeAt(i + 1)\n      string += String.fromCharCode(((c & 31) << 6) | (c2 & 63))\n      i += 2\n    }\n    else {\n      c2 = text.charCodeAt(i + 1)\n      c3 = text.charCodeAt(i + 2)\n      string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63))\n      i += 3\n    }\n  }\n  return string\n}\n\n/**\n * base64 解密\n */\nexport function base64Decode(text: string): string {\n  let output: string = ''\n  let chr1: number, chr2: number, chr3: number, enc1: number, enc2: number, enc3: number, enc4: number, i = 0\n  text = text.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '')\n\n  // 不是 4 的倍数补齐 =\n  while (text.length % 4) {\n    text += '='\n  }\n\n  while (i < text.length) {\n    enc1 = base64.indexOf(text.charAt(i++))\n    enc2 = base64.indexOf(text.charAt(i++))\n    enc3 = base64.indexOf(text.charAt(i++))\n    enc4 = base64.indexOf(text.charAt(i++))\n    chr1 = (enc1 << 2) | (enc2 >> 4)\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\n    chr3 = ((enc3 & 3) << 6) | enc4\n    output += String.fromCharCode(chr1)\n    if (enc3 !== 64) {\n      output += String.fromCharCode(chr2)\n    }\n    if (enc4 !== 64) {\n      output += String.fromCharCode(chr3)\n    }\n  }\n  return utf8Decode(output)\n}\n\nfunction atobCustom(encodedString: string) {\n  function decodeBase64(char: string) {\n    const index = base64.indexOf(char)\n    return index === -1 ? 0 : index\n  }\n\n  let decodedString = ''\n\n  for (let i = 0; i < encodedString.length;) {\n    const enc1 = decodeBase64(encodedString[i++])\n    const enc2 = decodeBase64(encodedString[i++])\n    const enc3 = decodeBase64(encodedString[i++])\n    const enc4 = decodeBase64(encodedString[i++])\n\n    const chr1 = (enc1 << 2) | (enc2 >> 4)\n    const chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\n    const chr3 = ((enc3 & 3) << 6) | enc4\n\n    decodedString += String.fromCharCode(chr1)\n\n    if (enc3 !== 64) {\n      decodedString += String.fromCharCode(chr2)\n    }\n    if (enc4 !== 64) {\n      decodedString += String.fromCharCode(chr3)\n    }\n  }\n  return decodedString\n}\n\nexport function base64ToUint8Array(string: string) {\n  const binaryData = typeof atob === 'function' ? atob(string) : atobCustom(string)\n  const uint8Array = new Uint8Array(binaryData.length)\n  for (let i = 0; i < binaryData.length; i++) {\n    uint8Array[i] = binaryData.charCodeAt(i)\n  }\n  return uint8Array\n}\n\nexport const list = [\n  'A', 'B', 'C', 'D', 'E', 'F',\n  'G', 'H', 'I', 'J', 'K', 'L',\n  'M', 'N', 'O', 'P', 'Q', 'R',\n  'S', 'T', 'U', 'V', 'W', 'X',\n  'Y', 'Z', 'a', 'b', 'c', 'd',\n  'e', 'f', 'g', 'h', 'i', 'j',\n  'k', 'l', 'm', 'n', 'o', 'p',\n  'q', 'r', 's', 't', 'u', 'v',\n  'w', 'x', 'y', 'z', '0', '1',\n  '2', '3', '4', '5', '6', '7',\n  '8', '9', '+', '/'\n]\n\nconst _map: Record<string, number> = { }\n\narray.each(list, (char, index) => {\n  _map[char] = index\n})\n\nexport const map = _map\n\n","/**\n * @file browser\n */\n\nimport { each } from '../util/array'\nimport { Browser } from '../types/type'\nimport * as is from './is'\nimport checkVersion from '../function/checkVersion'\n\nexport const enum BrowserType {\n  ALIPAY = 'alipay',\n  WECHAT = 'wechat',\n  DING_TALK = 'dingtalk',\n  BAIDU_APP = 'baiduApp',\n  BAIDU = 'baidu',\n  UC = 'uc',\n  QQ = 'qq',\n  QQ_APP = 'qqApp',\n  IE = 'ie',\n  EDGE = 'edge',\n  CHROME = 'chrome',\n  FIREFOX = 'firefox',\n  OPERA = 'opera',\n  SAFARI = 'safari',\n  NEW_EDGE = 'newEdge'\n}\n\nfunction getMajorVersion(version: string) {\n  if (!is.string(version)) {\n    return ''\n  }\n  return version.split('.').shift() || ''\n}\n\n/**\n * UA 检测浏览器\n *\n * 返回结果如下：\n *\n * {\n *    name: 'ie',     // 判断多个浏览器时，便于用 name 去 switch\n *    ie: true,       // 判断某一个浏览器时，便于 if (ie) { ... }\n *    version: '8.0'  // 版本号，string 类型\n * }\n *\n */\n\n// http://www.fynas.com/ua/search\nconst list = [\n  [ BrowserType.ALIPAY, /alipay/ ],\n  [ BrowserType.WECHAT, /micromessenger/ ],\n  [ BrowserType.DING_TALK, /dingtalk[ \\/]([\\d_.]+)/ ],\n  [ BrowserType.BAIDU_APP, /baiduboxapp/ ],\n  [ BrowserType.BAIDU, /baidubrowser/ ],\n  [ BrowserType.BAIDU, /bdbrowser/ ],\n  [ BrowserType.UC, /ucbrowser/ ],\n  [ BrowserType.UC, /ucweb/ ],\n  [ BrowserType.QQ, /qqbrowser/ ],\n  [ BrowserType.QQ_APP, /qq/ ],\n  [ BrowserType.IE, /iemobile[ \\/]([\\d_.]+)/ ],\n  // IE10- 所有版本都有的信息是 MSIE x.0\n  [ BrowserType.IE, /msie[ \\/]([\\d_.]+)/ ],\n  [ BrowserType.IE, /trident[ \\/]([\\d_.]+)/, 4 ],\n  [ BrowserType.EDGE, /edge[ \\/]([\\d_.]+)/ ],\n  [ BrowserType.NEW_EDGE, /edg[ \\/]([\\d_.]+)/ ],\n  [ BrowserType.CHROME, /chrome[ \\/]([\\d_.]+)/ ],\n  [ BrowserType.FIREFOX, /firefox[ \\/]([\\d_.]+)/ ],\n  [ BrowserType.OPERA, /opera(?:.*version)?[ \\/]([\\d_.]+)/ ],\n  [ BrowserType.SAFARI, /version[ \\/]([\\d_.]+) safari/ ],\n  // 新版 Safari UA\n  [ BrowserType.SAFARI, /version[ \\/]([\\d_.]+) \\S* safari/ ],\n  [ BrowserType.SAFARI, /safari/ ]\n]\n\nconst getMajorVersionMap = {\n\n}\n\nconst checkVersionMap = {\n\n}\n\n/**\n * 获取 UA 的结构化信息\n *\n * @inner\n * @param {string} ua\n * @return {Object}\n */\nfunction parseUA(ua: string): Browser {\n\n  let name: string\n  let version: string\n\n  each(\n    list,\n    (item) => {\n      let match = (item[1] as RegExp).exec(ua)\n      if (match) {\n        name = item[0] as string\n        version = match[1]\n        if (version) {\n          version = version.replace(/_/g, '.')\n          if (item[2]) {\n            version = (parseInt(version, 10) + (item[2] as number)) + '.0'\n          }\n        }\n        return false\n      }\n    }\n  )\n\n  return {\n    name: name || '',\n    version: version || '',\n    majorVersion: (getMajorVersionMap[name] || getMajorVersion)(version),\n    checkVersion: checkVersionMap[name] || checkVersion\n  }\n\n}\n\nconst browser = parseUA((typeof navigator === 'object' && navigator.userAgent || '').toLowerCase())\nif (browser.name) {\n  browser[browser.name] = true\n}\n\nexport default browser\n","/**\n * @file 为了压缩，定义的常量\n */\n\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\nexport const MINUS_ONE = -1\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_THIS = 'this'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_WILDCARD = '*'\nexport const RAW_DOT = '.'\nexport const RAW_SLASH = '/'\nexport const RAW_TAG = 'tag'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\n/**\n * Single instance for window in browser\n */\nexport const WINDOW: Window = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * Single instance for global in nodejs or browser\n */\n// @ts-ignore\nexport const GLOBAL: Window & NodeJS.Global = typeof globalThis !== RAW_UNDEFINED ? globalThis : (typeof global !== RAW_UNDEFINED ? global : WINDOW)\n\n/**\n * Single instance for self in nodejs or browser\n */\n// @ts-ignore\nexport const SELF: Window & NodeJS.Global = typeof self !== RAW_UNDEFINED ? self : GLOBAL\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** common */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = Object.freeze({})\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = Object.freeze([])\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''\n\n","/**\n * @file 判断\n */\n\nimport * as constant from './constant'\n\n/**\n * Check if value is a function.\n *\n * @param value\n * @return\n */\nexport function func(value: any): value is Function {\n  return typeof value === constant.RAW_FUNCTION\n}\n\n/**\n * Check if value is an array.\n *\n * @param value\n * @return\n */\nexport function array<T>(value: any): value is Array<T> {\n  return Array.isArray(value)\n}\n\n/**\n * Check if value is an object.\n *\n * @param value\n * @return\n */\nexport function object(value: any): value is Object {\n  // 低版本 IE 会把 null 当作 object\n  return value !== constant.NULL && typeof value === 'object'\n}\n\n/**\n * Check if value is a string.\n *\n * @param value\n * @return\n */\nexport function string(value: any): value is string {\n  return typeof value === 'string'\n}\n\n/**\n * Check if value is a number.\n *\n * @param value\n * @return\n */\nexport function number(value: any): value is number {\n  return typeof value === 'number' && !isNaN(value)\n}\n\n/**\n * Check if value is a bigint.\n *\n * @param value\n * @return\n */\nexport function bigint(value: any): value is bigint {\n  return typeof value === 'bigint'\n}\n\n/**\n * Check if value is boolean.\n *\n * @param value\n * @return\n */\nexport function boolean(value: any): value is boolean {\n  return typeof value === 'boolean'\n}\n\n/**\n * Check if value is numeric.\n *\n * @param value\n * @return\n */\nexport function numeric(value: any): value is (number | string) {\n  return number(value)\n    || (string(value) && !isNaN(parseFloat(value)) && isFinite(+value))\n}\n\nconst hasOwn = {}.hasOwnProperty\n\n/**\n * 判断是不是普通字面量对象\n *\n * @param {*} target\n * @return {boolean}\n */\nexport function isPlainObject(target: any): target is Object {\n  if (!object(target) || target.nodeType || target === target.window) {\n    return false\n  }\n\n  if ( target.constructor\n    && !hasOwn.call(target, 'constructor')\n    && !hasOwn.call(target.constructor.prototype || {}, 'isPrototypeOf')) {\n    return false\n  }\n\n  let key: string\n  for ( key in target ) {\n    /* empty */\n  }\n  return key === undefined || hasOwn.call(target, key)\n}\n\n/**\n * 判断 value 是否在指定范围中\n * \n * @param value 待判断值\n * @param min 范围左区间\n * @param max 范围右区间\n */\nexport function range(value: number, min: number, max: number): boolean {\n  return value >= min && value <= max\n}\n\n/**\n * Check if value is ArrayBuffer.\n * \n * @param value \n * @returns \n */\nexport function arrayBuffer(value: any): value is ArrayBuffer {\n  return value instanceof ArrayBuffer\n}\n","/**\n * @file 路径操作\n */\n\nimport * as string from './string'\nimport * as constant from './constant'\n\nconst dotPattern = /\\./g,\n\n    asteriskPattern = /\\*/g,\n\n    doubleAsteriskPattern = /\\*\\*/g,\n\n    splitCache: Record<string, string[]> = {},\n\n    patternCache: Record<string, RegExp> = {}\n\n/**\n * 判断 keypath 是否以 prefix 开头，如果是，返回匹配上的前缀长度，否则返回 -1\n *\n * @param keypath\n * @param prefix\n * @return\n */\nexport function match(keypath: string, prefix: string): number {\n  if (keypath === prefix) {\n    return prefix.length\n  }\n  prefix += constant.RAW_DOT\n  return string.startsWith(keypath, prefix)\n    ? prefix.length\n    : constant.MINUS_ONE\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath\n * @param callback 返回 false 可中断遍历\n */\nexport function each(keypath: string, callback: (key: string, isLast: boolean) => boolean | void) {\n  /*\n   * 如果 keypath 是 toString 之类的原型字段\n   * splitCache[keypath] 会取到原型链上的对象\n   */\n  const list = splitCache.hasOwnProperty(keypath)\n    ? splitCache[keypath]\n    : (splitCache[keypath] = keypath.split(constant.RAW_DOT))\n\n  for (let i = 0, lastIndex = list.length - 1; i <= lastIndex; i++) {\n    if (callback(list[i], i === lastIndex) === constant.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 路径组合\n *\n * @param keypath1\n * @param keypath2\n */\nexport function join(keypath1: string, keypath2: string): string {\n  return keypath1 && keypath2\n    ? keypath1 + constant.RAW_DOT + keypath2\n    : keypath1 || keypath2\n}\n\n/**\n * 是否是模糊匹配\n *\n * @param keypath\n */\nexport function isFuzzy(keypath: string): boolean {\n  return string.has(keypath, constant.RAW_WILDCARD)\n}\n\n/**\n * 模糊匹配 keypath\n *\n * @param keypath 待匹配路径\n * @param pattern 匹配规则\n */\nexport function matchFuzzy(keypath: string, pattern: string): string | void {\n  let cache = patternCache[pattern]\n  if (!cache) {\n    const str = pattern\n      .replace(dotPattern, '\\\\.')\n      .replace(asteriskPattern, '(\\\\w+)')\n      .replace(doubleAsteriskPattern, '([\\.\\\\w]+?)')\n    cache = patternCache[pattern] = new RegExp(`^${str}$`)\n  }\n  const result = keypath.match(cache)\n  if (result) {\n    return result[1]\n  }\n}\n\n/**\n * 返回 keypath 的根路径\n *\n * @param keypath\n */\nexport function rootPath(keypath: string): string {\n  return keypath && keypath.split(constant.RAW_DOT).shift()\n}\n","/**\n * @file 日志\n */\n\nimport * as constant from './constant'\nimport toString from '../function/toString'\n\nexport const TRACE = 0\nexport const DEBUG = 1\nexport const INFO = 2\nexport const WARN = 3\nexport const ERROR = 4\nexport const FATAL = 5\n\ntype defined<T extends string> = `defined(${T})`\n\nconst nativeConsole: Console | null = typeof console !== constant.RAW_UNDEFINED ? console : constant.NULL,\n\n    /**\n     * 当前是否是源码调试，如果开启了代码压缩，empty function 里的注释会被干掉\n     */\n    defaultLogLevel = /common/.test(toString(constant.EMPTY_FUNCTION)) ? INFO : WARN,\n\n    /**\n     * console 样式前缀\n     * ie 和 edge 不支持 console.log 样式\n     */\n    stylePrefix = constant.WINDOW && /edge|msie|trident/i.test(constant.WINDOW.navigator.userAgent) || true\n      ? constant.EMPTY_STRING\n      : '%c',\n\n    /**\n     * 日志打印函数\n     */\n    printLog = nativeConsole\n      ? stylePrefix\n        ? function (tag: string, msg: string, style: string) {\n          nativeConsole.log(stylePrefix + tag, style, msg)\n        }\n        : function (tag: string, msg: string) {\n          nativeConsole.log(tag, msg)\n        }\n      : constant.EMPTY_FUNCTION\n\n/**\n * 全局调试开关\n */\nfunction getLogLevel() {\n  if (constant.GLOBAL) {\n    const logLevel = constant.SELF['COMMON_LOG_LEVEL']\n    if (logLevel >= TRACE && logLevel <= FATAL) {\n      return logLevel as number\n    }\n  }\n  return defaultLogLevel\n}\n\n/**\n * 设置日志输出级别\n * \n * @param level 日志输出级别\n */\nexport function setLevel(level: number): void {\n  constant.SELF['COMMON_LOG_LEVEL'] = level\n}\n\nfunction getStyle(backgroundColor: string) {\n  return `background-color:${backgroundColor};border-radius:12px;color:#fff;font-size:10px;padding:3px 6px;`\n}\n\n/**\n * 打印 trace 日志\n *\n * @param msg\n */\nexport function trace(msg: string, file: string, line: number): void\nexport function trace<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\nexport function trace(msg: string, file?: string, line?: number): void {\n  if (getLogLevel() <= TRACE) {\n    printLog(`[${arguments[1]}][line ${arguments[2]}] [trace]`, msg, getStyle('#999'))\n  }\n}\n\n/**\n * 打印 debug 日志\n *\n * @param msg\n */\nexport function debug(msg: string, file: string, line: number): void\nexport function debug<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\nexport function debug(msg: string, file?: string, line?: number): void  {\n  if (getLogLevel() <= DEBUG) {\n    printLog(`[${arguments[1]}][line ${arguments[2]}] [debug]`, msg, getStyle('#999'))\n  }\n}\n\n/**\n * 打印 info 日志\n *\n * @param msg\n */\nexport function info(msg: string, file: string, line: number): void\nexport function info<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\nexport function info(msg: string, file?: string, line?: number): void {\n  if (getLogLevel() <= INFO) {\n    printLog(`[${arguments[1]}][line ${arguments[2]}] [info]`, msg, getStyle('#2db7f5'))\n  }\n}\n\n/**\n * 打印 warn 日志\n *\n * @param msg\n */\nexport function warn(msg: string, file: string, line: number): void\nexport function warn<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\nexport function warn(msg: string, file?: string, line?: number): void {\n  if (getLogLevel() <= WARN) {\n    printLog(`[${arguments[1]}][line ${arguments[2]}] [warn]`, msg, getStyle('#f90'))\n  }\n}\n\n/**\n * 打印 error 日志\n *\n * @param msg\n */\nexport function error(msg: string, file: string, line: number): void\nexport function error<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\nexport function error(msg: string, file?: string, line?: number): void {\n  if (getLogLevel() <= ERROR) {\n    printLog(`[${arguments[1]}][line ${arguments[2]}] [error]`, msg, getStyle('#ed4014'))\n  }\n}\n\n/**\n * 致命错误，中断程序\n *\n * @param msg\n */\nexport function fatal(msg: string, file: string, line: number): void\nexport function fatal<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(msg: string): void\nexport function fatal(msg: string, file?: string, line?: number): void {\n  if (getLogLevel() <= FATAL) {\n    error(msg, file, line)\n    throw new Error(`[${arguments[1]}][line ${arguments[2]}] [fatal]: ${msg}`)\n  }\n}\n\n/**\n * 根据日志等级打印\n * \n * @param level \n * @param msg \n * @param tag \n */\nexport function log(level: number, msg: string, file: string, line: number): void\nexport function log<args = [defined<'__FILE__'>, defined<'__LINE__'>], enableArgs=defined<'ENABLE_LOG_PATH'>>(level: number, msg: string): void\nexport function log(level: number, msg: string, file?: string, line?: number): void {\n  if (level === TRACE) {\n    trace(msg, arguments[2], arguments[3])\n  }\n  else if (level === DEBUG) {\n    debug(msg, arguments[2], arguments[3])\n  }\n  else if (level === INFO) {\n    info(msg, arguments[2], arguments[3])\n  }\n  else if (level === WARN) {\n    warn(msg, arguments[2], arguments[3])\n  }\n  else if (level === ERROR) {\n    error(msg, arguments[2], arguments[3])\n  }\n  else if (level === FATAL) {\n    fatal(msg, arguments[2], arguments[3])\n  }\n}\n\n/**\n * @internal\n * 是否上传，全局配置\n */\nlet enableUpload: boolean = true\n\n/**\n * @internal\n * 日志上传等级，全局配置\n */\nlet uploadLevel: number = WARN\n\n/**\n * 打开日志上传\n * \n */\nexport function enableUploadLog(): void {\n  enableUpload = true\n}\n\n/**\n * 关闭日志上传\n */\nexport function disableUploadLog(): void {\n  enableUpload = false\n}\n\n/**\n * 是否可以上传日志\n */\nexport function canUploadLog() {\n  return enableUpload\n}\n\n/**\n * 设置日志上传等级\n */\nexport function setUploadLevel(level: number) {\n  uploadLevel = level\n}\n\n/**\n * 获取日志上传等级\n */\nexport function getUploadLevel() {\n  return uploadLevel\n}\n","/**\n * @file 对象操作\n */\n\nimport * as is from './is'\nimport * as array from './array'\nimport { Data } from '../types/type'\nimport * as constant from './constant'\nimport * as keypathUtil from './keypath'\nimport isDef from '../function/isDef'\n\n/**\n * 获取对象的 key 的数组\n *\n * @param object\n * @return\n */\nexport function keys<T>(object: T): string[] {\n  if (!isDef(object)) {\n    return []\n  }\n  return Object.keys(object)\n}\n\nfunction sortKeyByAsc(a: string, b: string): number {\n  return a.length - b.length\n}\n\nfunction sortKeyByDesc(a: string, b: string): number {\n  return b.length - a.length\n}\n\n/**\n * 排序对象的 key\n *\n * @param object\n * @param desc 是否逆序，默认从小到大排序\n * @return\n */\nexport function sort(object: Data, desc?: boolean): string[] {\n  return keys(object).sort(desc ? sortKeyByDesc : sortKeyByAsc)\n}\n\n/**\n * 遍历对象\n *\n * @param object\n * @param callback 返回 false 可停止遍历\n */\nexport function each<T extends Data>(object: T, callback: (value: T[keyof T], key: string) => boolean | void): void {\n  for (let key in object) {\n    if (callback(object[key], key) === constant.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 清空对象所有的键值对\n *\n * @param object\n */\nexport function clear(object: Data): void {\n  each(\n    object,\n    function (_, key) {\n      delete object[key]\n    }\n  )\n}\n\nfunction _extend<T, U>(original: T, object: U): T & U {\n  if (!is.object(original)) {\n    return object as any\n  }\n  else if (!is.object(object)) {\n    return original as any\n  }\n  each(\n    object,\n    function (value, key) {\n      original[key] = value\n    }\n  )\n  return original as any\n}\n\n/**\n * 扩展对象\n *\n * @return\n */\nexport function extend<T, U, V>(original: T, object: U, object2?: V): T & U & V {\n  return _extend(_extend(original, object), object2)\n}\n\n/**\n * 合并对象\n *\n * @return\n */\nexport function merge(object1: Data | void, object2: Data | void): Data | void {\n  return object1 && object2\n    ? extend(extend({}, object1), object2)\n    : object1 || object2\n}\n\n/**\n * 拷贝对象\n *\n * @param object\n * @param deep 是否需要深拷贝\n * @return\n */\nexport function copy(object: any, deep?: boolean): any {\n  let result = object\n  if (is.array(object)) {\n    if (deep) {\n      result = []\n      array.each(\n        object,\n        function (item, index) {\n          result[index] = copy(item, deep)\n        }\n      )\n    }\n    else {\n      result = object.slice()\n    }\n  }\n  else if (is.object(object)) {\n    result = {}\n    each(\n      object,\n      function (value, key) {\n        result[key] = deep ? copy(value, deep) : value\n      }\n    )\n  }\n  return result\n}\n\n/**\n * 从对象中查找一个 keypath\n *\n * 返回值是空时，表示没找到值\n *\n * @param object\n * @param keypath\n * @return\n */\nexport function get(object: any, keypath: string, defaultValue?: any): any {\n\n  let result: any\n\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n\n      if (object != constant.NULL) {\n\n        // 先直接取值\n        let value = object[key],\n\n            // 紧接着判断值是否存在\n            hasValue = value !== constant.UNDEFINED\n\n        if (isLast) {\n          if (hasValue) {\n            result = value\n          }\n          else {\n            result = constant.UNDEFINED\n          }\n        }\n        else {\n          object = value\n        }\n      }\n      else {\n        result = constant.UNDEFINED\n        return constant.FALSE\n      }\n\n    }\n  )\n\n  // 没找到使用默认值\n  if (result === constant.UNDEFINED) {\n    result = defaultValue\n  }\n\n  return result\n\n}\n\n/**\n * 为对象设置一个键值对\n *\n * @param object\n * @param keypath\n * @param value\n * @param autofill 是否自动填充不存在的对象，默认自动填充\n */\nexport function set(object: Data, keypath: string, value: any, autofill?: boolean): void {\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n      if (isLast) {\n        object[key] = value\n      }\n      else if (object[key]) {\n        object = object[key]\n      }\n      else if (autofill) {\n        object = object[key] = {}\n      }\n      else {\n        return constant.FALSE\n      }\n    }\n  )\n}\n\n/**\n * 对象是否包含某个 key\n *\n * @param object\n * @param key\n * @return\n */\nexport function has<T extends Data>(object: T, key: keyof T): boolean {\n  // 不用 hasOwnProperty，性能差\n  return object[key] !== constant.UNDEFINED\n}\n\n/**\n * 是否是空对象\n *\n * @param object\n * @return\n */\nexport function falsy(object: any): boolean {\n  return !is.object(object)\n    || is.array(object)\n    || !keys(object).length\n}\n\n/**\n * 获取两个对象的 value 不同的 key\n * \n * @param obj1 \n * @param obj2 \n */\nexport function diff(obj1: Object, obj2: Object): string[] {\n  let differences: string[] = []\n\n  each(obj1, (value, key) => {\n    if (is.array(value) || is.isPlainObject(value)) {\n      if (obj2[key] == null || diff(value, obj2[key]).length > 0) {\n        differences.push(key)\n      }\n    }\n    else if (value !== obj2[key]) {\n      differences.push(key)\n    }\n  })\n\n  return differences\n}\n\n/**\n * 序列化对象\n * \n * @param data\n */\nexport function param(data: Object | Array<any>) {\n  let result = []\n  const add = (key: string | number, value: any) => {\n    value = is.func(value) ? value() : (value == null ? '' : value)\n    result[result.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value)\n  }\n  if (is.array(data) || is.isPlainObject(data)) {\n    if (is.array(data)) {\n      array.each(data, (value, key) => {\n        add(key, value)\n      })\n    }\n    else {\n      each(data, (value, key) => {\n        add(key, value)\n      })\n    }\n  }\n  return result.join('&').replace(/%20/g, '+')\n}\n\n/**\n * 将 object 的 value 变成数组\n */\nexport function toArray(data: Object) {\n  const result = []\n  each(data, (value) => {\n    result.push(value)\n  })\n  return result\n}\n\n/**\n * \n * 更新两个同一类型的对象\n * \n * @param obj1 \n * @param obj2 \n * @returns \n */\nexport function update(obj1: Object, obj2: Object) {\n  if (!is.object(obj1) || !is.object(obj2)) {\n    return\n  }\n\n  each(obj2, (value, key) => {\n    if (is.object(value) && is.object(obj1[key])) {\n      update(obj1[key], value)\n    }\n    else {\n      obj1[key] = obj2[key]\n    }\n  })\n\n  return obj1\n}\n","/**\n * @file string 操作\n */\n\nimport * as is from './is'\nimport * as constant from './constant'\nimport toString from '../function/toString'\n\nconst capitalizePattern = /^[a-z]/, capitalizeCache: Record<string, string> = {}\n\n/**\n * 首字母大写\n *\n * @param str\n * @return\n */\nexport function capitalize(str: string): string {\n  if (!capitalizeCache[str]) {\n    capitalizeCache[str] = str.replace(\n      capitalizePattern,\n      upper\n    )\n  }\n  return capitalizeCache[str]\n}\n\n/**\n * 清除两侧空白符\n *\n * @param str\n * @return 清除两侧空白符的字符串\n */\nexport function trim(str: any): string {\n  return falsy(str)\n    ? constant.EMPTY_STRING\n    : str.trim()\n}\n\n/**\n * 截取字符串\n *\n * @param str\n * @param start\n * @param end\n * @return\n */\nexport function slice(str: string, start: number, end?: number): string {\n  return is.number(end)\n    ? start === end\n      ? constant.EMPTY_STRING\n      : str.slice(start, end)\n    : str.slice(start)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param start\n * @return\n */\nexport function indexOf(str: string, part: string, start?: number): number {\n  return str.indexOf(part, start !== constant.UNDEFINED ? start : 0)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param end\n * @return\n */\nexport function lastIndexOf(str: string, part: string, end?: number): number {\n  return str.lastIndexOf(part, end !== constant.UNDEFINED ? end : str.length)\n}\n\n/**\n * str 是否以 part 开头\n *\n * @param str\n * @param part\n * @return\n */\nexport function startsWith(str: string, part: string): boolean {\n  return indexOf(str, part) === 0\n}\n\n/**\n * str 是否以 part 结束\n *\n * @param str\n * @param part\n * @return\n */\nexport function endsWith(str: string, part: string): boolean {\n  const offset = str.length - part.length\n  return offset >= 0 && lastIndexOf(str, part) === offset\n}\n\n/**\n * 获取某个位置的字符\n */\nexport function charAt(str: string, index?: number): string {\n  return str.charAt(index || 0)\n}\n\n/**\n * 获取某个位置的字符编码\n */\nexport function codeAt(str: string, index?: number): number {\n  return str.charCodeAt(index || 0)\n}\n\n/**\n * 大写格式\n */\nexport function upper(str: string): string {\n  return str.toUpperCase()\n}\n\n/**\n * 小写格式\n */\nexport function lower(str: string): string {\n  return str.toLowerCase()\n}\n\n/**\n * str 是否包含 part\n *\n * @param str\n * @param part\n * @return 是否包含\n */\nexport function has(str: string, part: string): boolean {\n  return indexOf(str, part) >= 0\n}\n\n/**\n * 判断长度大于 0 的字符串\n *\n * @param str\n * @return\n */\nexport function falsy(str: any): boolean {\n  return !is.string(str) || !str.length\n}\n\n/**\n * 格式化输出\n * \n * @param string \n * @param args \n * @returns \n */\nexport function format(string: string, ...args: any[]) {\n  let i = 0\n  const length = args.length\n  return string.replace(/(%[sdvx%])|(%0(\\d)+[dx])/g, (str) => {\n    if (i >= length) {\n      // missing argument\n      return str\n    }\n\n    const arg = args[i++]\n\n    if (/%0(\\d)+[dx]/g.test(str)) {\n      const length = parseInt(str.substring(1))\n      let result = str[str.length - 1] === 'd' ? toString(Number(arg)) : Number(arg).toString(16)\n      if (length > result.length) {\n        result = new Array(length - result.length).fill('0').join('') + result\n      }\n      return result\n    }\n\n    switch (str) {\n      case '%%':\n        return '%'\n      case '%s':\n        return String(arg)\n      case '%d':\n        return toString(Number(arg))\n      case '%v':\n        return ''\n      case '%x':\n        return Number(arg).toString(16)\n    }\n    return str\n  })\n}\n","import browser from './browser'\n\n\nfunction supportedFeatures() {\n\n  let blob = typeof Blob === 'function'\n  let wasm = typeof WebAssembly === 'object' && typeof WebAssembly.instantiate === 'function'\n  let fetchSupported = typeof fetch === 'function'\n  let documentSupport = typeof document === 'object'\n\n  let canvas = documentSupport && document.createElement('canvas')\n  let webgl = canvas && !!canvas.getContext('webgl')\n  let offscreenCanvas = typeof OffscreenCanvas === 'function'\n\n  let worker = typeof Worker === 'function'\n\n  let arrayBuffer = typeof ArrayBuffer === 'function'\n\n  let atomics = typeof Atomics === 'object'\n\n  let audioContext = typeof AudioContext === 'function' || typeof webkitAudioContext === 'function'\n  let audioWorklet = typeof AudioWorklet === 'function'\n\n  let videoDecoder = typeof VideoDecoder === 'function'\n  let videoEncoder = typeof VideoEncoder === 'function'\n\n  let audioDecoder = typeof AudioDecoder === 'function'\n  let audioEncoder = typeof AudioEncoder === 'function'\n\n  let shareArrayBuffer = typeof SharedArrayBuffer === 'function'\n\n  let mse = typeof MediaSource == 'function' || typeof ManagedMediaSource === 'function'\n\n  let proxy = typeof Proxy === 'function'\n\n  let thread = worker && shareArrayBuffer && atomics && proxy\n\n  let jspi = typeof WebAssembly.Suspending === 'function' && typeof WebAssembly.promising === 'function'\n\n  // safari 低于 11 不支持\n  if (browser.safari && !browser.checkVersion(browser.majorVersion, '11', true)) {\n    wasm = false\n  }\n\n  // chrome 94 以上才支持 webcodec\n  if (browser.chrome && !browser.checkVersion(browser.majorVersion, '94', true)) {\n    videoDecoder = false\n    audioDecoder = false\n  }\n\n  // safari 17 之前渲染 VideoFrame 有问题\n  if (browser.safari && !browser.checkVersion(browser.majorVersion, '17', true)) {\n    videoDecoder = false\n  }\n\n  let webgpu = typeof navigator === 'object' && typeof navigator.gpu === 'object'\n\n  let workerMSE = typeof MediaSourceHandle === 'function'\n\n  let webAssemblyGlobal = wasm && typeof WebAssembly.Global === 'function'\n\n  return {\n    browser,\n    blob,\n    wasm,\n    fetch: fetchSupported,\n    webgl,\n    worker,\n    mse,\n    arrayBuffer,\n    audioContext,\n    audioWorklet,\n    videoDecoder,\n    videoEncoder,\n    audioDecoder,\n    audioEncoder,\n    atomics,\n    shareArrayBuffer,\n    thread,\n    webgpu,\n    offscreenCanvas,\n    workerMSE,\n    webAssemblyGlobal,\n    jspi,\n    proxy,\n    simd: (browser.chrome || browser.newEdge) && browser.checkVersion(browser.majorVersion, '91', true)\n      || browser.firefox && browser.checkVersion(browser.majorVersion, '89', true)\n      || browser.safari && browser.checkVersion(browser.version, '16.4', true),\n    wasmBaseSupported: fetchSupported && wasm && webgl && audioContext && arrayBuffer && webAssemblyGlobal\n  }\n}\n\nconst support = supportedFeatures()\n\nexport default support\n","const encoder = typeof TextEncoder === 'function' ? new TextEncoder() : null\nconst decoder = typeof TextDecoder === 'function' ? new TextDecoder() : null\n\nexport function encode(data: string) {\n  if (encoder) {\n    return encoder.encode(data)\n  }\n\n  const array = []\n\n  for (let i = 0; i < data.length; ++i) {\n    let u = data.charCodeAt(i)\n    if (u >= 55296 && u <= 57343) {\n      let u1 = data.charCodeAt(++i)\n      u = 65536 + ((u & 1023) << 10) | u1 & 1023\n    }\n    if (u <= 127) {\n      array.push(u)\n    }\n    else if (u <= 2047) {\n      array.push(192 | u >> 6)\n      array.push(128 | u & 63)\n    }\n    else if (u <= 65535) {\n      array.push(224 | u >> 12)\n      array.push(128 | u >> 6 & 63)\n      array.push(128 | u & 63)\n    }\n    else {\n      array.push(240 | u >> 18)\n      array.push(128 | u >> 12 & 63)\n      array.push(128 | u >> 6 & 63)\n      array.push(128 | u & 63)\n    }\n  }\n  return new Uint8Array(array)\n}\n\nexport function decode(data: Uint8Array | number[]) {\n  if (data instanceof Uint8Array && decoder && !(typeof SharedArrayBuffer === 'function' && data.buffer instanceof SharedArrayBuffer)) {\n    return decoder.decode(data)\n  }\n\n  let result = ''\n\n  for (let i = 0; i < data.length;) {\n    let u0 = data[i++ >>> 0]\n    if (!(u0 & 128)) {\n      result += String.fromCharCode(u0)\n      continue\n    }\n    let u1 = data[i++ >>> 0] & 63\n    if ((u0 & 224) == 192) {\n      result += String.fromCharCode((u0 & 31) << 6 | u1)\n      continue\n    }\n    let u2 = data[i++ >>> 0] & 63\n    if ((u0 & 240) == 224) {\n      u0 = (u0 & 15) << 12 | u1 << 6 | u2\n    }\n    else {\n      u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | data[i++ >>> 0] & 63\n    }\n    if (u0 < 65536) {\n      result += String.fromCharCode(u0)\n    }\n    else {\n      let ch = u0 - 65536\n      result += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\n    }\n  }\n  return result\n}\n","import BufferReader from '../io/BufferReader'\nimport { BytesReaderSync, BytesReader, BytesWriter, BytesWriterSync } from '../io/interface'\n\nexport const enum SectionId {\n  Custom,\n  Type,\n  Import,\n  Function,\n  Table,\n  Memory,\n  Global,\n  Export,\n  Start,\n  Element,\n  Code,\n  Data\n}\n\nexport const enum ExternalKind {\n  Function,\n  Table,\n  Memory,\n  Global\n}\n\nexport function readULeb128(reader: BytesReaderSync) {\n  let result = 0\n  let shift = 0\n  while (true) {\n    const byte = reader.readUint8()\n\n    result |= (byte & 0x7f) << shift\n    shift += 7\n\n    if (!(byte & 0x80)) {\n      break\n    }\n  }\n  return result\n}\n\nexport async function readULeb128Async(reader: BytesReader) {\n  let result = 0\n  let shift = 0\n  while (true) {\n    const byte = await reader.readUint8()\n\n    result |= (byte & 0x7f) << shift\n    shift += 7\n\n    if (!(byte & 0x80)) {\n      break\n    }\n  }\n  return result\n}\n\nexport function readSLeb128(reader: BytesReaderSync) {\n  let result = 0\n  let shift = 0\n  let byte: number\n  while (true) {\n    byte = reader.readUint8()\n\n    result |= (byte & 0x7f) << shift\n    shift += 7\n\n    if (!(byte & 0x80)) {\n      break\n    }\n  }\n\n  // 符号扩展，将最高有效位的符号位扩展到高位\n  if (byte & 0x40) {\n    // 如果最高有效位是 1（负数），则将高位全部置为 1\n    result |= (~0 << shift)\n  }\n\n  return result\n}\n\nexport async function readSLeb128Async(reader: BytesReader) {\n  let result = 0\n  let shift = 0\n  let byte: number\n  while (true) {\n    byte = await reader.readUint8()\n\n    result |= (byte & 0x7f) << shift\n    shift += 7\n\n    if (!(byte & 0x80)) {\n      break\n    }\n  }\n\n  // 符号扩展，将最高有效位的符号位扩展到高位\n  if (byte & 0x40) {\n    // 如果最高有效位是 1（负数），则将高位全部置为 1\n    result |= (~0 << shift)\n  }\n\n  return result\n}\n\nexport function writeSleb128(writer: BytesWriterSync, value: number) {\n  let more = true\n  while (more) {\n    let byte = value & 0x7f\n    value >>= 7\n    // 如果还有未编码的位，设置高位为 1\n    if ((value === 0 && (byte & 0x40) === 0) || (value === -1 && (byte & 0x40) !== 0)) {\n      more = false\n    }\n    else {\n      byte |= 0x80\n    }\n    writer.writeUint8(byte)\n  }\n}\n\nexport async function writeSleb128Async(writer: BytesWriter, value: number) {\n  let more = true\n  while (more) {\n    let byte = value & 0x7f\n    value >>= 7\n    // 如果还有未编码的位，设置高位为 1\n    if ((value === 0 && (byte & 0x40) === 0) || (value === -1 && (byte & 0x40) !== 0)) {\n      more = false\n    }\n    else {\n      byte |= 0x80\n    }\n    await writer.writeUint8(byte)\n  }\n}\n\nexport function writeUleb128(writer: BytesWriterSync, value: number) {\n  do {\n    let byte = value & 0x7f\n    value >>= 7\n    // 如果还有未编码的位，设置高位为 1\n    if (value !== 0) {\n      byte |= 0x80\n    }\n    writer.writeUint8(byte)\n  } while (value !== 0)\n}\n\nexport async function writeUleb128Async(writer: BytesWriter, value: number) {\n  do {\n    let byte = value & 0x7f\n    value >>= 7\n    // 如果还有未编码的位，设置高位为 1\n    if (value !== 0) {\n      byte |= 0x80\n    }\n    await writer.writeUint8(byte)\n  } while (value !== 0)\n}\n\nexport function setMemoryShared(wasm: Uint8Array, shared: boolean) {\n  const reader = new BufferReader(wasm, true)\n\n  reader.skip(8)\n\n  while (reader.remainingSize()) {\n    const sectionId = reader.readUint8()\n\n    const size = readULeb128(reader)\n\n    if (sectionId === SectionId.Import) {\n      let count = readULeb128(reader)\n      while (count--) {\n        const moduleLen = readULeb128(reader)\n        reader.skip(moduleLen)\n        const fieldLen = readULeb128(reader)\n        reader.skip(fieldLen)\n        const externalKind = reader.readUint8()\n        switch (externalKind) {\n          case ExternalKind.Function: {\n            // type index of the function signature\n            readULeb128(reader)\n            break\n          }\n          case ExternalKind.Global: {\n            // content_type\n            readSLeb128(reader)\n            // mutability\n            readULeb128(reader)\n            break\n          }\n          case ExternalKind.Memory: {\n            const pos = Number(reader.getPos())\n            if (shared) {\n              wasm[pos] = wasm[pos] | 2\n            }\n            else {\n              wasm[pos] = wasm[pos] & ~2\n            }\n            return\n          }\n          case ExternalKind.Table: {\n            // elem_type\n            readSLeb128(reader)\n            const flags = readULeb128(reader)\n            readULeb128(reader)\n\n            if (flags & 0x01) {\n              // maximum\n              readULeb128(reader)\n            }\n            break\n          }\n        }\n      }\n      return\n    }\n    else {\n      reader.skip(size)\n    }\n  }\n}\n","module.exports = \"AGFzbQEAAAABKQhgAn9/AGACf34AYAJ/fQBgAn98AGABfwF/YAF/AX5gAX8BfWABfwF8AhIBA2VudgZtZW1vcnkCAwGAgAQDDw4AAAABAgMEBAQEBAUGBweIAQ4Gd3JpdGU4AAAHd3JpdGUxNgABB3dyaXRlMzIAAgd3cml0ZTY0AAMId3JpdGVmMzIABAh3cml0ZWY2NAAFBXJlYWQ4AAYGcmVhZFU4AAcGcmVhZDE2AAgHcmVhZFUxNgAJBnJlYWQzMgAKBnJlYWQ2NAALB3JlYWRmMzIADAdyZWFkZjY0AA0KfQ4JACAAIAE6AAALCQAgACABOwEACwkAIAAgATYCAAsJACAAIAE3AwALCQAgACABOAIACwkAIAAgATkDAAsHACAALAAACwcAIAAtAAALBwAgAC4BAAsHACAALwEACwcAIAAoAgALBwAgACkDAAsHACAAKgIACwcAIAArAwAL\";","module.exports = \"AGFzbQEAAAABLAdgAX8Bf2ABfwF+YAJ/fwF/YAJ/fgF+YAN/f38Bf2ADf35+AX5gA39/fgF/AhIBA2VudgZtZW1vcnkCAwGAgAQDKCcAAAABAgICAwICAgMCAgIDAgICAwICAgMCAgIDAgICAwQEBAUCAgYHhgMnBWxvYWQ4AAAGbG9hZDE2AAEGbG9hZDMyAAIGbG9hZDY0AAMGc3RvcmU4AAQHc3RvcmUxNgAFB3N0b3JlMzIABgdzdG9yZTY0AAcEYWRkOAAIBWFkZDE2AAkFYWRkMzIACgVhZGQ2NAALBHN1YjgADAVzdWIxNgANBXN1YjMyAA4Fc3ViNjQADwRhbmQ4ABAFYW5kMTYAEQVhbmQzMgASBWFuZDY0ABMDb3I4ABQEb3IxNgAVBG9yMzIAFgRvcjY0ABcEeG9yOAAYBXhvcjE2ABkFeG9yMzIAGgV4b3I2NAAbCWV4Y2hhbmdlOAAcCmV4Y2hhbmdlMTYAHQpleGNoYW5nZTMyAB4KZXhjaGFuZ2U2NAAfEWNvbXBhcmVfZXhjaGFuZ2U4ACASY29tcGFyZV9leGNoYW5nZTE2ACESY29tcGFyZV9leGNoYW5nZTMyACISY29tcGFyZV9leGNoYW5nZTY0ACMGbm90aWZ5ACQEd2FpdAAlC3dhaXRUaW1lb3V0ACYKugMnCAAgAP4SAAALCAAgAP4TAQALCAAgAP4QAgALCAAgAP4RAwALDAAgACAB/hkAACABCwwAIAAgAf4aAQAgAQsMACAAIAH+FwIAIAELDAAgACAB/hgDACABCwoAIAAgAf4gAAALCgAgACAB/iEBAAsKACAAIAH+HgIACwoAIAAgAf4fAwALCgAgACAB/icAAAsKACAAIAH+KAEACwoAIAAgAf4lAgALCgAgACAB/iYDAAsKACAAIAH+LgAACwoAIAAgAf4vAQALCgAgACAB/iwCAAsKACAAIAH+LQMACwoAIAAgAf41AAALCgAgACAB/jYBAAsKACAAIAH+MwIACwoAIAAgAf40AwALCgAgACAB/jwAAAsKACAAIAH+PQEACwoAIAAgAf46AgALCgAgACAB/jsDAAsKACAAIAH+QwAACwoAIAAgAf5EAQALCgAgACAB/kECAAsKACAAIAH+QgMACwwAIAAgASAC/koAAAsMACAAIAEgAv5LAQALDAAgACABIAL+SAIACwwAIAAgASAC/kkDAAsKACAAIAH+AAIACwwAIAAgAUJ//gECAAsMACAAIAEgAv4BAgAL\";","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import * as logger from 'common/util/logger'\nimport * as mux from 'avformat/mux'\nimport { MPEG4AudioObjectTypes } from 'avformat/codecs/aac'\nimport IOWriterSync from 'common/io/IOWriterSync'\nimport OMpegtsFormat from 'avformat/formats/OMpegtsFormat'\nimport { AVOFormatContext, createAVOFormatContext } from 'avformat/AVFormatContext'\nimport { avMalloc } from 'avutil/util/mem'\nimport { addAVPacketData, createAVPacket } from 'avutil/util/avpacket'\nimport { memcpyFromUint8Array } from 'cheap/std/memory'\nimport { AVFormat } from 'avformat/avformat'\nimport { AVCodecID, AVMediaType } from 'avutil/codec'\nimport concatTypeArray from 'common/function/concatTypeArray'\nimport polyfill from '../cheap/polyfill/bigint';\n\ninterface IMuxConfig {\n  outputFormat: AVFormat;\n  hasVideo: boolean;\n  hasAudio: boolean;\n  onResult: (params: { id: string; data: Uint8Array }) => void;\n}\ninterface ISample {\n  pts: number;\n  dts: number;\n  pes: Uint8Array; // video\n  unit: Uint8Array; // audio\n  key: boolean;\n}\n// demuxed video track\ninterface ITrack {\n  inputTimeScale: number;\n  samples: ISample[];\n  codec: string;\n  samplerate?: number; // audio only\n  channelCount?: number; // audio only\n}\n\ninterface IRemuxInput {\n  id: string;\n  videoTrack: ITrack;\n  audioTrack: ITrack;\n}\n\nclass LibMux {\n  private ctx: AVOFormatContext;\n  private processingId: string;\n  private pendingEOF: boolean = false;\n  private partBufferList: Uint8Array[] = [];\n  private queue = new Queue<IRemuxInput>();\n  private onResult: IMuxConfig['onResult'];\n  private config: IMuxConfig;\n\n  constructor(config: IMuxConfig) {\n    console.log('LibMux init');\n    polyfill();\n    this.config = config;\n    this.onResult = config.onResult.bind(this);\n  }\n\n  public remuxTS(source: IRemuxInput) {\n    this.queue.enqueue({\n      dataSource: source,\n      executor: () => {\n        if (this.ctx) { this.reset() }\n        this.init(this.config, source);\n\n        this.pendingEOF = false;\n        this.processingId = source.id;\n\n        this.interleaveWriteAV(source);\n\n        this.pendingEOF = true;\n        // 写完所有 avpacket 之后结束封装\n        mux.writeTrailer(this.ctx);\n      }\n    });\n  }\n\n  public flush() {\n    mux.flush(this.ctx); // format.flush\n    this.partBufferList = [];\n  }\n\n  public destroy() {\n    this.flush();\n    this.ctx.destroy();\n    this.ctx = null;\n    this.queue.clear();\n    this.queue = null;\n  }\n\n  private reset() {\n    this.flush();\n    this.ctx.destroy();\n    this.ctx = null;\n  }\n\n  // 音视频交错写入\n  private interleaveWriteAV(source: IRemuxInput) {\n    const avSamples = mergeSortedArrays(source.videoTrack.samples, source.audioTrack.samples);\n    avSamples.forEach(sample => {\n      if (sample.pes) {\n        this.writeVideo(sample, source.videoTrack.inputTimeScale);\n      } else {\n        this.writeAudio(sample, source.audioTrack.inputTimeScale);\n      }\n    })\n  }\n\n  private writeVideo(sample: ISample, timeScale: number) {\n    let avpacketConfig = {\n      pts: toBI(sample.pts),\n      dts: toBI(sample.dts),\n      data: sample.pes,\n      size: sample.pes.byteLength,\n      streamIndex: this.ctx.getStreamByMediaType(AVMediaType.AVMEDIA_TYPE_VIDEO).id,\n      timeBase: { num: 1, den: timeScale },\n      bitFormat: 2, // annex-b\n      flags: sample.key ? 1: 0\n    };\n    let avpacket = getAvpacket(avpacketConfig);\n    mux.writeAVPacket(this.ctx, avpacket)\n  }\n\n  private writeAudio(sample: ISample, timeScale: number) {\n    let avpacketConfig = {\n      pts: toBI(sample.pts),\n      dts: toBI(sample.pts),\n      data: sample.unit,\n      size: sample.unit.byteLength,\n      streamIndex: this.ctx.getStreamByMediaType(AVMediaType.AVMEDIA_TYPE_AUDIO).id,\n      timeBase: { num: 1, den: timeScale },\n      flags: 1\n    };\n    let avpacket = getAvpacket(avpacketConfig);\n    mux.writeAVPacket(this.ctx, avpacket)\n  }\n\n  private init(config: IMuxConfig, source: IRemuxInput) {\n    if (config.outputFormat !== AVFormat.MPEGTS) {\n      logger.error('outputFormat is not MPEGTS');\n      return;\n    };\n\n    const ioWriter = new IOWriterSync();\n    const oformat = new OMpegtsFormat();\n    this.ctx = createAVOFormatContext();\n    this.ctx.ioWriter = ioWriter;\n    this.ctx.oformat = oformat;\n\n    this.partBufferList = [];\n    ioWriter.onFlush = (buffer, pos) => {\n      this.partBufferList.push(buffer.slice(0));\n      if (this.pendingEOF) {\n        this.onResult({ id: this.processingId, data: concatTypeArray<Uint8ArrayConstructor>(Uint8Array, this.partBufferList) });\n        this.partBufferList = [];\n      }\n      return 0\n    }\n\n    ioWriter.onSeek = (pos) => {\n      // seek 到写文件 pos 处\n      return 0\n    }\n\n    this.addStream(config, source);\n\n    mux.open(this.ctx);\n    mux.writeHeader(this.ctx);\n  }\n\n  private addStream(config: IMuxConfig, source: IRemuxInput) {\n    if (config.hasVideo) {\n      const stream = this.ctx.createStream();\n      // 配置 stream 参数，具体查看 codecpar 需要添加哪些参数\n      stream.codecpar.codecId = AVCodecID.AV_CODEC_ID_H264;\n      stream.codecpar.codecType = AVMediaType.AVMEDIA_TYPE_VIDEO;\n    }\n\n    if (config.hasAudio) {\n      const atrack = source.audioTrack;\n      const stream = this.ctx.createStream()\n      stream.codecpar.codecId = AVCodecID.AV_CODEC_ID_AAC; // AVCodecID.AV_CODEC_ID_AAC\n      stream.codecpar.codecType = AVMediaType.AVMEDIA_TYPE_AUDIO;\n      stream.codecpar.sampleRate = atrack.samplerate || 44100;\n      stream.codecpar.chLayout.nbChannels = atrack.channelCount || 2;\n      stream.codecpar.profile = this.getAACprofile(atrack.codec);\n    }\n  }\n\n  private getAACprofile(codec: string) {\n    let profile = codec.match(/mp4a.40.(\\d+)/)?.[1];\n    let result = MPEG4AudioObjectTypes.NULL;\n    switch (profile) {\n      case '1':\n        result = MPEG4AudioObjectTypes.AAC_MAIN;\n        break\n      case '2':\n        result = MPEG4AudioObjectTypes.AAC_LC;\n        break\n      case '3':\n        result = MPEG4AudioObjectTypes.AAC_SSR;\n        break\n      case '4':\n        result = MPEG4AudioObjectTypes.AAC_LTP;\n        break\n      case '5':\n        result = MPEG4AudioObjectTypes.AAC_SBR;\n        break;\n      case '6':\n        result = MPEG4AudioObjectTypes.AAC_SCALABLE;\n        break;\n      case '32':\n        result = MPEG4AudioObjectTypes.LAYER1;\n        break\n      case '33':\n        result = MPEG4AudioObjectTypes.LAYER2;\n        break;\n      case '34':\n        result = MPEG4AudioObjectTypes.LAYER3;\n        break;\n      default:\n        result = MPEG4AudioObjectTypes.AAC_LC;\n    }\n    return result;\n  }\n}\n\ninterface IQueueTask<K> {\n  executor: () => void;\n  dataSource: K;\n}\nclass Queue<T=any> {\n  list: IQueueTask<T>[] = [];\n\n  constructor() {\n\n  }\n\n  public enqueue(task: IQueueTask<T>) {\n    this.list.push(task);\n    if (this.list.length === 1/* start */) {\n      this.executeNext();\n    }\n  }\n\n  public dequeue() {\n    return this.list.shift();\n  }\n\n  public clear() {\n    this.list = [];\n  }\n\n  private executeNext() {\n    const task = this.dequeue();\n    if (!task) return;\n    task.executor(); // executor must be sync function\n    console.log('task done, execute next...')\n    this.executeNext();\n  }\n}\n\nfunction getAvpacket(detail: any) {\n  let avpacket = createAVPacket();\n  // unrefAVPacket(avpacket);\n  avpacket.buf = detail.buf;\n  avpacket.pts = detail.pts;\n  avpacket.dts = detail.dts;\n  avpacket.size = detail.size;\n  avpacket.streamIndex = detail.streamIndex;\n  // avpacket.duration = detail.duration;\n  avpacket.duration = 0n;\n  avpacket.timeBase.num = detail.timeBase.num; // 不能给 timeBase 重新赋值，因为它编译后是一个 Proxy，需要直接修改属性\n  avpacket.timeBase.den = detail.timeBase.den;\n  avpacket.bitFormat = detail.bitFormat; // annex-b\n  avpacket.flags = detail.flags;\n\n  const data = avMalloc(detail.size)\n  memcpyFromUint8Array(data, detail.size, detail.data)\n  addAVPacketData(avpacket, data, detail.size)\n  return avpacket;\n}\n\n// number to bigint\nfunction toBI(val: number) {\n  return BigInt(Math.floor(val));\n}\n\n/**\n * 归并排序，高效合并两个有序数组\n * @param ary1 \n * @param ary2 \n * @returns \n */\nfunction mergeSortedArrays(ary1: any[]/* video */, ary2: any[]) {\n  let result = [];\n  let i = 0, j = 0;\n\n  // 合并两个已经排序的数组\n  while (i < ary1.length && j < ary2.length) {\n      if (ary1[i].dts < ary2[j].pts/* audio only has pts */) {\n          result.push(ary1[i]);\n          i++;\n      } else {\n          result.push(ary2[j]);\n          j++;\n      }\n  }\n\n  // 添加余下的元素\n  while (i < ary1.length) result.push(ary1[i++]);\n  while (j < ary2.length) result.push(ary2[j++]);\n\n  return result;\n}\n\n\nexport default LibMux;"],"names":[],"sourceRoot":""}